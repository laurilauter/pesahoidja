%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Alvaro Cabrera Jim\616nez) ()%%Title: (2688MANOS-1.eps)%%CreationDate: 04/02/13 13:27%%Canvassize: 16383%%BoundingBox: 1 -1 3970 3968%%HiResBoundingBox: 1 -1 3969.5 3967.5%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registro])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1984.5 1984 1984.5 1984%AI3_TileBox: 1704.75 1604.25 2263.75 2387.25%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 3968.5 3968.5%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -2884 4939.5 0.1667 1835 937 18 0 0 43 129 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 29518 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFF%FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FF%A8FFA8FFA8FF532727FFA87DF87DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D52A8A8AF7DFFA8FFA8FFA8FFA8FF%A8FD04FFA8FFFFFFA8FD04FF52F827A8FF272727FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FD07FFA8FD27FFA9FFFFFFA9FD07FFA8FFFFFFA8FFFFFFA8%FD07FFF82752FF52277DFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA87D%7DFF5227F87DA827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FF%A8FFA827F87DFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DA8A8FF%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DA8A8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8A8277DA827F8277D27F852A8FFA8FFA8FFA8FFA8FFFFA8%FFFFFFA8FFFF52F827A8A8F82752FF272727FFA8FFFFFFA8FFFFFFA8FFFF%FFA8FD04FFA9527DFFA8F82752FF7D527DFFFFFFA8FFFFFFA8FD05FFA8FF%7D2752FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F8A8A8FF%FFFFA8FFFFFFA8FFFFFFA8FF5227F87D2727277DF82727FFFFFFA8FFFFFF%A8FFFFA8FFA8FFA8FFA8FF5227F852A827F827A827F827A8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FF5227F8A87D27F87DA827F852A8FFA8FFA8FFA8%FFA8FFA8FF5227A87DF827A82727FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%522727F827272752FFA8FFA8FFA8FFA8FFA8FFFF7DF8275252F8275227F8%52A8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFA8F827F8A8522727A82727%27FD05FFA8FFFFFFA8FFFFFFA8FD04FF7DF8277DA8F8277DA8F82752FD0C%FF7DF87D7D27277DF827A8FD0EFFA8F827F8270027F827A8FFA8FFFFFFA8%FFFFFF7DA8A827F85252272752F82752FFFFFFA8FFFFFFA8FFFFA8FFA8FF%A8FFA8FFFF52F8272752F8275227F852A8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FF5227F87D7D27F87D7D27F852FD04FFA8FFA8FFA8FFFFFF7D2727%7DF8275227F8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FF7D27F827F827F827F8%A8FFFFA8FFA8FFA8FF5227F8A82727F852F8272727F852A8FFA8FFA8FFA8%FFA8FD04FFA8FD05FFA827F8272727F8FD0427FFFFFFA8FFA8FD05FFA8FF%FFFFA8FFFFA8F82752A8F8277D7DF8277DA852FFFFFFA8FFFFFFA8A8FFA8%F82753272752F827A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8F827F827F827%F827A8FFFFFFA8FD04FF7DF827527DF827F827F827F82752FD05FFA8FFFF%FFA8A8FFA8FFA852F87DA8FF5227F827F827F827F852A8FFA8FF522727A8%A8FFA8FFA8FFA8FFA8FFA827F8277D27F87D2727F87DF82752FFA8FFA8FF%FF7DF852A852F852FD0527FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D27F827%F827F827F85227A8A8FFA8FFA8FF7D27F8272727F827F827F827F87DFFA8%A8FFA8FFA8FFA8FD05FFA8F827F8527DFF2727F827F827F82727FFFFFF53%27F82784FFFFFFA9FD07FF2727277DF8275227F8525227F87DFD06FFA827%F87D7D272727F827F87DFD0FFFA8F827F827F827F827F82752FD07FF5227%F8272127F827F827F827527DF827A8FFA8FFFFFFA8A8FFA8FFA852F827F8%275252F827F827F827F827A8FF5227F82752FFA8FFA8FFA8FFA8FFA8FFA8%27F8272727F827F8272727F8277DFFA8FFA8FFA8FFA827F852F827F827F8%277DFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA827F827F827F827F827F852A8%FFA8FFA8FFFFA8F827F827F827F827F827F827F827F884FFFFA8FFA8FFFF%A8FFFFFFA87DF827F827F827F827F827F827F8597D27F82752FFFFFFA8FF%FFFFA8FF845252FF5227F827F827F827F827F82727FD05FFA9FFFFFF7D27%F827F827F827F8A8FD06FFA8FFFFFFA8FFFFA8527D0027F827F827F827F8%2752FFFFFFA8FFFFFFA827F827F827F827F827F827F827F852A8FFFFFFA8%FFFFA8FFA8FFA8FFA8A82727F827F827F827F827F827F827F82727A8A8FF%A8FFA8FFA8FFA852F8277D7DF827F827F827F827F827F852FFFFA8FFA8FF%A8FFA8FF2727F827F827F8277DFFFF7D2752A8FFA8FFA8FFA8FF2727F827%F827F827F827F827F852A8FFA8FFA8FFA8FF5227F827F827F827F827F827%F8277DFFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFF7D27F827F827F827F827F8%27F827F884FD0AFF7D27F8527D27F827F827F827F827F8277DFD0AFF84F8%27F827F827F87DA87DF827F8FD07FFA927F827F827F827F827F827F82752%FFFFFFA9FD04FFA8F827F827F827F827F827F82752FFA9FFFFFFA8FFFFA8%FFA8FFA8FFA8FFA8FF7D27F827F827F827F827F827F852A8FFA8FFA8FFA8%FFA8FFA8A8F827F852F827F827F827F827F82727FFFFFFA8FFA8FFA8FFA8%FFA827F827F827F827F827F82727A8A8FFA8FFA8FFA8FF2727F827F827F8%27F827F827F852A8FFA8FFA8FFA8FFA827F827F827F827F827F827F884FF%FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFF2727F827F827F827F827F827A8%FFFFFFA8FFFFFFA8FD04FF52F827F827F827F827F827F827F87DFD0CFFF8%27F827F827F827F82727FD09FFA852F827F827F827F827F827F82752FFA8%FFFFFFA8FFFFFF5227F827F827F827F827F827A8FFFFFFA8FFFFFFA8A8FF%A8FFA8FFA8FFA8FFFF7EF827F827F827F827F8277DFFA8FFA8FFA8FFA8FF%A8FFA8FF7D27F827F827F827F827F827F82752FFA8FFA8FFA8FFA8FFA8FF%A852F827F827F827F827F87EFFFFA8FFA8FFA8FFA8FF2727F827F827F827%F827F827F852A8FFA8FFA8FFA8FFFFA8F827F827F827F827F82752FFA8FF%A8FFA8FFA8FD04FFA8FFFFFFA8FD04FF52F827F827F827F82752FD0FFF27%27F827F827F827F827F827F852FD0CFF5227F827F8270027F8A8FD0BFF52%F827F827F827F827F827F82727FD09FFA852F827F827F827F827F8A8FD04%FFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FF7D27F827F827F827F8A8FFFF%A8FFA8FFA8FFA8FFA8FFA8FFFF52F827F827F827F827F827F82752FFA8FF%A9FFA8FFA9FFA8FFFFA8F827F827F82727A8FFFFA9FFA8FFA8FFA8FFFFFF%2727F827F827F827F827F827F852A8FFA8FFA8FFA8FFA8FF5227F827F827%F827F852A8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFFA8FFFFA8F827F8%27F827F852A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D27F827F827F827F8%27F827F87DFD0CFFA827F827F827F8FD0EFF7DF827F827F827F827F827F8%2752FFFFFFA8FFFFFFA8FFFFFFFD087DA8FFFFFFA8FFFFFFA8FFFFA8FFA8%FFA8FFA8FFA8FFA8FF7D27F827F827F8277DFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FF2727F827F827F827F827F827A8FFA8FFA8FFA8FFA8FFA8FFA8%FF2727F827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FFA827F827F827F827F8%27F827F8A8A8FFA8FFA8FFA8FFA8FF847D527D5252275227277DFFA8FFA8%FFA8FFA8FFFFA8FFFFFFA8FFFFFFA8FFFF7DF827F827F82727FD12FFA8F8%27F827F827F827F82752FD0EFF52F827F82727FD0FFF5327F827F827F827%F827F87DFD0BFF7DF827F827F827F827F87DFFFFA8FFFFFFA8FFFFA8FFA8%FFA8FFA8FFA8FFA8FF7D27F827F827F852FFFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFF7EF827F827F827F82752FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FF5227F827F827A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF5227F827F827F8%27F87DFFFFA8FFA8FFA8FFA8FFA8FF5227F827F827F827F82700FFA8FFA8%FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FFA87D5227F8277DFFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA9FD04FFA82727F827F8527DFD10FF7DF827F82721%FD11FF7D52F827F82752A8FD04FFA8FFFFFFA8FD04FF7DF827F827F827F8%27F827A8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8A8%84FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8A87DA8A8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DA87DA8A8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8A87DA8A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FF%A8A87DA87DA87DA87DA87DFFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFF%A8FD6BFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD43FFA9FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD63FFA9FFFFFFA8FFFFFFA8FF%FFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA9FD47FFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFF%A8FD67FFA9FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA9FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD4BFFA9FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFFFFFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFFF7DF87DFFFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF%A8FFFFFFA8FFFFFFA8FFFFFF84FD1BFFA8A8FD18FFA87D7DFD15FF272752%FD17FFA9FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FF7D2727FF%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFA8FFA827F852FFFF%A8FFFFFFA8FFFFFFA8FD0BFFA852F827A8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA827F852A8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA852F8277DFF%FFFFA8FFFFFFA9FD10FF7DF827F8FD17FFF827F8A8FD14FF272727FD09FF%A9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8%FFA8FFA8FFA8FF2727F87DFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FF5227F827A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFA827F8277DFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA827F827A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8%FFA8FD04FFA8FFFFFFA8FFFFFFA852F8277DFD18FF7DF827F8FD17FF2727%F8A8FD0EFFA87DFF7DF8A8272727FD11FFA827F87D527DA8FFA8FFFFFFA8%FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FF2727F87DA8FFA8FFA8FFFFFFA8FF%A8FFA8FFA9FFA8FFFFFFA8FFFFFF7D27F827A8FFFFFFA8FD0FFFA8525227%F8277DFD09FFA8FFA8A8A827F87D27275227F827A8FFA8FFA9FFA8FFA8FF%A8FFA8FFA8A85252F827F827F8A8FFFFA8FFA8FFA8FFA8FFFFA8FFFFFFA8%FFFFFFA8FFFF52F827F8272727525252FD12FF7DF82721FD11FFA87D7D52%F827F827F8A8FD0BFF52F87D27275227F8522727F8FD0BFFA9FFFFFF2727%F827F827F8277DFFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FF27%27F827F827F827F82752FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FF5927F8%27A8FFA8FFFFFFA8FFFFFFA8FFFFFFA87D7D52F827F827F827F8277DFFFF%FFA8FFFFFFA8FFFFA8F8275227F852FD0427F827A8FFA8FFA8FFA8FFA8FF%A8FFA8FFA827F827F827F827F87DFFFFA8FFA8FFA8FFA8FFFFA8FFFFFFA8%FFFFFFA8FFFF52F827F827F827F827F852FD0EFFA852F827F82727FD0EFF%7DF827F827F827F827F827F8A8FD0AFFA827F85227275227F8522727F8A8%FFFFA8FD0BFF2727F827F827F8277DA8FFFFA8FFFFFFA8FFFFA8FFA8FFA8%FFA8FFA8FF7E52F827F827F827F827F82752FFFFFFA8FFA8FFA8FD04FF7D%F827F827F827F827A8FFA8A8FD0AFF2727F827F827F827F827F8277DFFA8%FD08FFA8F8272727F827F8272727F8277DFF7D2727FFFFFFA8FFA8FFA8FF%A852F827F827F827F827F852A8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFF7D%F827F827F827F827F827F87DFD0BFFA8F827F827F827F82727FF5227F8A8%FD09FF52F827F827F827F827F827F8A87D2727FD07FFA827F827F827F827%F827F827F8A87D27F827A8FD09FF2727F827F827F827F827F8FFFFFFA8FF%FFFFA8A8FFA8FFA8FFA8FFA8FF7D27F827F827F827F827F82752FFA8FFA8%FFA8FFA8FFA827F827F827F827F827F8272727F8277DFFFFFFA8FD05FF27%27F827F827F827F827F8277D27F8277DFFA8FD04FFA8F827F827F827F827%F827F8275227F82752FFA8FFA8FFA8FFA8FFA852F827F827F827F827F827%A8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFA8F827F827F827F827F827F87D%FD09FFA8F827F827F827F827F827F827F82727FD0AFF52F827F827F827F8%27F827F8A82727F8A8FD06FFA827F827F827F827F827F8272752F827F8FD%0BFF2727F827F827F827F82727FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8%FF7D27F827F827F827F827F82752FFA8FFA8FFA8FFA9FF7D27F827F827F8%27F827F827F827F87DFD0AFF2727F827F827F827F827F8277D52F8277DFD%07FFF827F827F827F827F827F827F827F87DFFFFA8FFFFFF7D7DA8FFA852%F827F827F827F827F827A8FFA8FFA8FFA8FFFFA8FFFFFFA8FD04FFA8F827%F827F827F827F827F87DFD09FF7DF827F827F827F827F827F827F852FD0B%FF52F827F827F827F827F827F8522727F8A8FD06FFA827F827F827F827F8%27F827F827F827A8FD05FF7D27F852FFA8F827F827F827F827F82727FFA8%FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA827F827F827F827F827F8277DFF%A8FFA8FFA8FFA8FF7D27F827F827F827F827F827F82752FFFFFFA8FFFFFF%A8FFFFFF2727F827F827F827F827F827F827F8277DFFFFFFA8FFFFFFF827%F827F827F827F827F827F82727FFA8FFA8FFFFA8F827F8525227F827F827%F827F827F827A8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFFA8FFA828F827F8%27F827F8277DFD0AFFA8F827F827F827F827F827F827F8FD0CFF7DF827F8%27F827F827F827F827F827F8A9FD07FF52F827F827F827F827F827F827F8%7DFD07FF7DF827F827F827F827F827F827F82727FD05FFA8FFFFA8FFA8FF%A8FFA8FFA8FFA8FFA827F827F827F82727FFA8FFA8FFA8FFA9FFA8FFA827%F827F827F827F827F827F852FD0CFF7D27F827F827F827F827F827F827F8%27A8FD07FF5227F827F827F827F827F827F827A8FFA8FFA8FFA8FFFF52F8%27F827F827F827F827F827F827A8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFF%FFA8FF2727F827F827F852FFFFA9FD09FF2727F827F827F827F827F8277D%FD0DFFF827F827F827F827F827F827F82752FD08FFA8F827F827F827F827%F827F82752FD07FFA9FFFF7DF827F827F827F827F827F82727FFFFFFA8FF%FFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA827F827F827F82727FFA8FFA8FFA8%FFA8FFA8FFA852F827F827F827F827F827F8FFFFFFA8FFFFFFA8FFFFFFA8%FFFF52F827F827F827F827F827F827F8A8FFFFA8FFFFFFA8FFA827F827F8%27F827F827F827F8A8FFFFA8FFA8FFA8FFA8FFFF52F827F827F827F827F8%27F852A8FFA8FFA8FFA8FD04FFA8FFFFFFA8FD05FF2727F827F827F852FD%0CFF5227F827F827F827F827F852FD0EFFA827F827F827F827F827F827F8%7DFD0AFF5227F827F827F827F827F852FD0DFF7DF827F827F827F827F827%A8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA827F827F827F82727%FFFFFFA8FFA8FFA8FFA9FFFFA8F827F827F827F827F8277DFFFFFFA8FD0B%FFA827F827F827F827F827F852FD08FFA8FFFFA8F827F827F827F827F827%7DFFA8FFA9FFA8FFA8FFA8FFA8FFA852F827F827F827F82752FFA8FFA8FF%A8FFA8FFFFA8FFFFFFA8FFFFFFA8FFFFFF5227F827F827F87DFD0DFF52F8%27F827F827F8277DFD11FFA852F827F827F827F87DFD0DFF52F827F827F8%27F82752FD0BFFA9FD04FF7DF827F827F82752FFFFFFA8FFFFFFA8FFFFA8%FFA8FFA8FFA8FFA8FFA8FFA8FF7D52275252A8FFFFA8FFA8FFA8FFA8FFA8%FFA8FFA87D52522752527D7EFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8A8525227527DA8FD04FFA8FFFFFFA8FFFFFFA8FFA852285252522728%27A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8522727527DFFA8FFA8FF%A8FFA8FFA8FFFFA8FFFFFFA8FFFFFFA9FD67FFA8FD07FFA8FFFFFFA8FFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD1BFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA9FD4FFFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA9FD6BFFA8FFFF%FFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD%17FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD4FFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8%FFFFFFA8FD4DFFA8FD1DFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FD05FFA8FF522752FF7D7DA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD37FF5227%7D52F827A827F8A8FD0AFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFFFFFA827%F8522727277DF82752FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FD45FFA8FF%27275252F8527E27F852FD16FFA9FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA9F827A827F852272727A8F82752FF%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA9%FD31FFA827F87D2727F827F8527D27F852FD08FFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FF7D5252A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFFA8F8275227F827F8272752F82752FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA827F82752FD3AFF28F8522727F827F82727%27F87DFD16FF7D7D7DFFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFFA8F827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FF5227F827F827F827F827F8277DFFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FF7D27F8277DFFA8FFA8FFA8FFA8FD04FFA8%FFFFFFA8FFFFFFA8FFFFFFA8FF7D27F82752FFA9FFFFFFA8FFFFFFA9FD30%FFA8F827F827F827F827F827F8A8FD06FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFF52F852F87DFD04FFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFFFA8F827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFF7E7D52A8FFFFA8%FFA8FFA8FFA827F827F827F827F827F827A8FFA8A8A8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FF27277D2752FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8%FD08FFA85227F82752FD2BFFA87D2727F82727FD09FF5227F827F827F827%F82727FFA852F852A8FD0DFFA8FFFF7DF8A8F87DFD04FFA8FFFFFFA8A8FF%A8FFA8FFA8FFA8FFA8FFA8A85252F827F827F852A8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8%7D520027F827F827F8277DFFFFFFA8FD04FFA8F827F827F827F827F85284%27F827F87DFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8A852277D277DFFA8FFA8%FFA8FFA8FFFFA8FFFFFFA8FD04FFAF5227F827F827F827F82752FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA9FD16FFA8F827F827F827F827F827F87DFD08%FF7D27F827F827F827F8272727F827F852A8FFFFFFA8FFFFFFA8FFFFFFA8%A87D52F827277DF87DFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FF5227%F827F827F827F827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF2727F827F827F827F827F827%52FFA8FFA8FFA8FFFF7DF827F827F827F827F827F827F87DFFFFA8FFA8FF%A8FFA8FFA8A82727F827F82727277D2752FFA8FFA8FFA8FFA8FFFFA8FFFF%FFA8FD04FF52F827F827F827F827F82727FD25FF7D27F827F827F8270027%F82727A8FD08FF7D27F827F827F827F827F827F852FD0CFF2727F8275227%52AF7DA8F87DFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FF5227F827F8%27F827F827F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA9FFA852F827F827F827F827F8527EFFFFFFA8%FFA8FFA8FFFF7DF827F827F827F827F827F8277DFFA8FFA8FFA8FFA8FFA8%FFA827275227A87DA8FFFFA82752FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8%FFFF52F827F827F827F827F82727FFA8FFFFFFA8FD07FFA8FD16FFA8F827%F827F827F827F87DFD0CFFA827F827F827F827F827F82752FFA9FFFFFFA8%FFFFFFA8FFFFFFF852FFFFA8FD04FFA8F87DFD04FFA8FFFFFFA8A8FFA8FF%A8FFA8FFA8FF5227F827F827F827F827F852A8FFA8FFA8FFA87D527DA8FF%FFFFA8FFA8A87D7D52527DFFFFFFA8FFA8FFA8FFA8FFA8FF5227F827F827%F827F827A8FFA8FFA8FFA8FFA8FFA8FFA8FF2727F827F827F827F82727FF%A8FFA8FFA8FFA8FFA8FFA8FFA82727FFA8FFA8FFA8FFA82752FFA8FFA8FF%A8FFA8FD04FFA8FFFFFFA8FFFF52F827F827F827F827F82752FD06FF52F8%27F827527D7D522727F827F827F82752A8FD0AFF7D27F827F827F827F827%7DFD0EFF7DF827F827F827F82727FD0BFFA9FFFFFFF852FFFFA8FD05FFF8%7DFD04FFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FF5227F827F827F827F827F8%52A9FFA8FFA8FF5227F827F827F827F827F827F827F827F827F8527DFFFF%FFA8FFA8FFA852F827F8847D27F82727FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FF7D27F827F827F827F8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA82727FFA8%FFA8FFA8FF7D2752FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FD04FF7DF827F8%27F827F827F82753FFFFFFA8FFFFFFA87D2727F827F827F827F827F827F8%27F827F827277DA8FD05FFF827F827A8FFF827F8A8FD0AFFA9FD05FF2127%F827F827F852FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF2827A8FFFFFFA8FF%FF7DF884FFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FF7D27F827F827F8%27F827F8A8A8FFA8FFA8FFA8FFA8FF7D27F827F827F827F827F827F827F8%27F827F8277DFFA8FF7D27F827F8FF5227F852A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FF7D27F827F827F8277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%7DF852A8FFA8FFFFA8F827A8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFF%A8FF5227F827F827F827F852FD04FFA8FFFFFFA9FFFFFFA87D2127F827F8%27F827F827F827F827F82727FD04FF52F827F87DA852F827A8FD10FFA8F8%27F827F827F8A8FD0AFFA9FFFFFFA8FFA852F852A8FFA8A827277DFFFFFF%A8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FF5227F827F827F852A8FFA8%FFA8FFA8FFA8FFA8FFA8FFFFA8525252FD057D5227F827F82727FFFFFFA8%FF522727FFFFA8F82752FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D27F8%27F827F8277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852F827F827F8%2753FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FF7D52275252%A8FD04FFA8FFFFFFA8FFFFFFA8FD0DFFA87D277DA8FD07FF7DAFFFFFFF52%27FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D7D5252275252AFFD04%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA97D5252277DA8FFFFFFA8FFFFFFA8%FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FF%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFF%A8FFFFFFA8FFFFFFA9FD3FFFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD2FFFA9FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFA9FFFFFFA9FD13FFA9FFFFFFA9FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8%FFA9FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8A8%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AF%A8A8A8AFA8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9FD0DA827522752275227%522752275227522752275227522752275227522752275227522752275227%28275227282752272727522727275227272728FD222721272727F8272727%F8272727F8270027F827F827F827F827F827F827F827F827F827F827F827%522852525227525252275252522752285227522752275227522752275227%522752275227522752275227522752275227522752FD0527522752FD0727%52FD1027F8FD152700272727F8272727F8270027F827F827F827F827F827%F82752275227522752275227522752275227522752275227522752275227%5227522727527D527D52FD0427522727275227522727277D7D5227272752%2728FD092752FD0A27527DFD062700272727F8272727F8272727F827F827%F827F827F827F827F827F827F827F827F827F827F8275252522752525227%525252275252522752285227522752275227522752275227527DA8A852A8%7DF828275227272728F87DA85227A8A8A87D272727A87DA87DF827272700%27A8527D7DF8272727212727277DAFA827F827F8272727F8272727F8FD0B%2700272727F8272727F8272727F8272127F827F827F82752275227522752%27522752275227522752275227522752275227522752272727A87DA87DFF%527D7D7D52A87D52277D7EA82752A85227527D7D27FF52FF527D7D5252A8%7DFF7D7E277D7D5252A87D2727A87DA827A852527D5252847D5227A82727%0027F827F827F827F827F827F827F827F827F827F827F827F827F827F827%FD0752285252522752525227525252275228522752285227522752275252%FD0AA8FF7DA8A8A884277DFF272784FFA8FFA87DA97DFFFFA8FF7DA8A87D%A87DA8A8A8FFA8FF522752FF7DFF7D7DA8A8A8FFA8FF527DFF7DF8FD1127%00272727F8272727F8270027F82752275227522752275227522752275227%5227522752275227522752275227522727A87D7DA8A87D7D7DA87D7D7DA8%52A87DF8A8A82727FF52A8A8A87DA87DFF52A8A8277DA87DA87DA852A8A8%7DA827F827A8A8A82752A827A8A87D847D59A852272727F8270027F827F8%27F827F827F827F827F827F827F827F827F827F827522752525227525252%27525252275252522752285227522752275227522752275252FF52A87DA9%A8FFA8FF52FFA8FFA8FF7D277DFF7DA8FFAF7DA8FFFFA8FFA97DA8FF7DFF%A8FFA8FFA8A87DFF7DFF522752FF7DFF7DA8A8A87DFF52FFA8A8A87DF8FD%072721272727F8272727F8272727F8272127F8270027F827F82752275227%52275227522752275227522752275227522752275227522752275227FD05%52287D2753FD0452277D52522727527D27527D27277D277D527DFD045227%7D277D287D275252275252F8525227527D277D52275227FD0452F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827FD09%522852525227525252275252522752285227522752275227522752272727%522752FD052752272727522727275227272728FD0A2700272727F8FD0B27%F827F8FD0527F827F8FD112721272727F8272727F8272127F827F8275227%522752275227522752275227522752275227522752275227522752275227%5227522728275227282752272727522727275227272728FD222721272727%00272727F8272727F827F827F827F827F827F827F827F827F827F827F827%F827F8275252522752525227525252275252522752285227522752275227%522752275227522752275227522752275227522752275227522752275227%52275227522727275227272752FD262700272727F8272727F8272727F827%2127F827F827F82752275227522752275227522752275227522752275227%522752275227522728275227282752272727522727275227272728FD2227%00272727F8272727F8272127F8270027F827F827F827F827F827F827F827%F827F827F827F827F827F827F827%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Calcando) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Plugin de envolventes de Adobe) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Plugin Pintura interactiva de Adobe) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Plugin Fusiones de Adobe) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Plugin Pincel caligr\207fico de Adobe) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (S\222mbolos de Adobe) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forma compuesta de Adobe) (PathFinderS.aip)%AI5_End_NonPrinting--2 Bn%AI5_BeginGradient: (Unnamed gradient 24)(Unnamed gradient 24) 0 2 Bd[<333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A1817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 0.799988 1 50 0 %_BS%_0 0 0 0.799988 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 8)(Unnamed gradient 8) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F1F0EFEEEDECEBEAE9E8E7E6E5E4E3>0 %_Br[0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 Bs0 0 0 0.11 1 50 100 %_BS%_0 0 0 0.11 1 50 100 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-2334.5 6302.9351 m-2120.8999 6302.9351 L-2120.8999 6295.1343 L-2334.5 6295.1343 L-2334.5 6302.9351 Ln0 O0 0 0 1 k-2334.5 6299.0352 m-2324.4856 6301.5269 -2317.6863 6302.8755 -2305.7007 6302.9351 c-2292.7185 6303 -2227.6997 6302.9351 y-2162.6816 6303 -2149.6997 6302.9351 v-2137.7124 6302.8755 -2130.9136 6301.5269 -2120.8999 6299.0352 C-2130.9136 6296.5435 -2137.7124 6295.1948 -2149.6997 6295.1343 c-2162.6816 6295.0688 -2227.6997 6295.1343 y-2292.7185 6295.0688 -2305.7007 6295.1343 v-2317.6863 6295.1948 -2324.4856 6296.5435 -2334.5 6299.0352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6109.2451 10175.5 L-6109.2451 10154.7842 L-6207 10154.7842 L-6207 10175.5 Ln0 O0 g1 XR-6109.5586 10170.8184 m-6124.8247 10157.0303 -6142.5537 10177.9492 -6157.9277 10165.666 C-6156.4199 10160.0137 -6150.7598 10166.9678 -6148.5176 10162.3213 C-6148.4341 10160.7207 -6151.6313 10162.2207 -6151.5127 10160.1006 C-6149.6245 10156.6914 -6144.8955 10157.1885 -6143.5664 10161.2373 C-6137.3115 10159.2676 -6130.7734 10153.3242 -6124.7847 10155.1172 C-6123.2671 10156.4678 -6124.0708 10157.6514 -6123.6211 10158.9277 C-6116.2871 10154.4922 -6107.4644 10163.6279 -6109.5586 10170.8184 Cf-6153.2842 10172.4326 m-6153.8247 10172.8086 -6152.9277 10173.9199 -6153.2529 10174.4082 C-6155.3237 10173.6563 -6157.6919 10169.5781 -6159.4731 10166.8105 C-6159.2632 10168.3398 -6160.6641 10169.6641 -6162.0781 10167.4326 C-6162.2383 10166.6152 -6161.3667 10166.3281 -6161.6729 10165.4365 C-6162.8306 10163.8682 -6163.8472 10165.3535 -6164.7798 10165.125 C-6165.3184 10164.3613 -6165.6143 10163.7188 -6165.6816 10163.1943 C-6159.5537 10160.374 -6152.9263 10172.1768 -6146.7456 10172.6025 C-6146.9048 10175.6152 -6150.8555 10177.3008 -6153.2842 10172.4326 Cfuu0 XR-6150.1602 10167.1602 m-6165.0142 10160.6201 -6186.4731 10164.8418 -6202.3687 10164.8193 c-6208.2988 10164.8125 -6197.8965 10164.8213 -6203.8267 10164.8262 cN0 O0 g-6147.8052 10165.9395 m-6165.1475 10158.7637 -6184.9341 10163.5557 -6203.0532 10163.4863 C-6203.8608 10164.373 -6204.6685 10165.2617 -6205.4751 10166.1475 C-6204.6973 10166.1475 -6203.9194 10166.1465 -6203.1421 10166.1533 C-6202.3345 10165.2656 -6201.5273 10164.3789 -6200.7202 10163.4922 C-6201.3516 10163.5029 -6201.9844 10163.4951 -6202.6157 10163.4951 c-6204.3735 10163.498 -6208.9165 10166.1621 -6205.0376 10166.1572 c-6204.4063 10166.1572 -6203.7734 10166.1641 -6203.1421 10166.1533 c-6201.4155 10166.127 -6196.8184 10163.5234 -6200.7202 10163.4922 c-6201.4976 10163.4834 -6202.2759 10163.4863 -6203.0532 10163.4863 c-6204.8081 10163.4854 -6209.3574 10166.1328 -6205.4751 10166.1475 c-6188.1177 10166.2148 -6169.1025 10161.5137 -6152.5151 10168.3789 c-6151.1035 10168.9639 -6145.8081 10166.7666 -6147.8052 10165.9395 c-6147.8052 10165.9395 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 158)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6195.0078 10175.5 L-6195.0078 10164.8633 L-6207 10164.8633 L-6207 10175.5 Ln-6206.3218 10164.8633 m-6206.3218 10168.8125 L-6206.3218 10169.8477 L-6206.3218 10170.4863 L-6206.3218 10171.5859 L-6206.3218 10175.5 L-6195.6865 10175.5 L-6195.6865 10171.5859 L-6195.6865 10170.4863 L-6195.6865 10169.8477 L-6195.6865 10168.8125 L-6195.6865 10164.8633 L-6206.3218 10164.8633 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-6195.0078 10171.5859 m-6195.0078 10170.9395 L-6207 10170.9414 L-6207 10171.5859 L-6207 10171.6504 L-6195.0078 10171.6494 L-6195.0078 10171.5859 Lf-6195.0078 10168.8125 m-6207 10168.8125 L-6207 10169.5215 L-6195.0078 10169.5215 L-6195.0078 10168.8125 Lf0.15 1 0.9 0.1 k-6195.0078 10170.5518 m-6207 10170.5518 L-6207 10170.9414 L-6195.0078 10170.9395 L-6195.0078 10170.5518 Lf-6195.0078 10169.8477 m-6195.0078 10169.5215 L-6207 10169.5215 L-6207 10169.8477 L-6207 10169.9121 L-6195.0078 10169.9121 L-6195.0078 10169.8477 Lf0 1 1 0 k-6195.0078 10170.4863 m-6195.0078 10169.9121 L-6207 10169.9121 L-6207 10170.4863 L-6207 10170.5518 L-6195.0078 10170.5518 L-6195.0078 10170.4863 LfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 160)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10174.3047 m-6196.3638 10174.3047 L-6196.3638 10163.6689 L-6207 10163.6689 L-6207 10174.3047 Ln-6207 10163.6689 m-6207 10167.5586 L-6207 10168.2686 L-6207 10168.6514 L-6207 10169.2939 L-6207 10169.6816 L-6207 10170.3906 L-6207 10174.3047 L-6196.3638 10174.3047 L-6196.3638 10163.6689 L-6207 10163.6689 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-6200.9585 10175.5 m-6200.2515 10175.5 L-6200.2607 10170.4561 L-6194.5229 10170.4551 L-6194.5229 10169.7441 L-6200.9707 10169.7471 L-6200.9585 10175.5 Lf-6202.6055 10168.0342 m-6202.8696 10168.2969 -6203.0215 10168.6631 -6203.0215 10169.0361 C-6203.0073 10175.5 L-6202.2979 10175.5 L-6202.3125 10169.0361 L-6202.3125 10168.8496 -6202.2363 10168.6689 -6202.1045 10168.5352 c-6201.9717 10168.4033 -6201.7891 10168.3281 -6201.6021 10168.3281 C-6194.5229 10168.3281 L-6194.5229 10167.6182 L-6201.6021 10167.6182 L-6201.9761 10167.6182 -6202.3418 10167.7695 -6202.6055 10168.0342 cf0.15 1 0.9 0.1 k-6201.2827 10175.5 m-6200.9585 10175.5 L-6200.9707 10169.7471 L-6194.5229 10169.7441 L-6194.5229 10169.3555 L-6201.2827 10169.3555 L-6201.2827 10175.5 Lf-6202.1045 10168.5352 m-6202.2363 10168.6689 -6202.3125 10168.8496 -6202.3125 10169.0361 C-6202.2979 10175.5 L-6201.9219 10175.5 L-6201.9219 10169.0361 L-6201.9219 10168.9521 -6201.8877 10168.8711 -6201.8281 10168.8105 c-6201.7695 10168.7529 -6201.6865 10168.7188 -6201.6025 10168.7188 C-6194.5229 10168.7188 L-6194.5229 10168.3281 L-6201.6021 10168.3281 L-6201.7891 10168.3281 -6201.9717 10168.4033 -6202.1045 10168.5352 cf0 1 1 0 k-6201.8281 10168.8105 m-6201.8877 10168.8711 -6201.9219 10168.9521 -6201.9219 10169.0361 C-6201.9219 10175.5 L-6201.2827 10175.5 L-6201.2827 10169.3555 L-6194.5229 10169.3555 L-6194.5229 10168.7188 L-6201.6025 10168.7188 L-6201.6865 10168.7188 -6201.7695 10168.7529 -6201.8281 10168.8105 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 161)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6195.0078 10175.5 L-6195.0078 10164.8633 L-6207 10164.8633 L-6207 10175.5 Ln-6206.0117 10164.8633 m-6206.0117 10168.8125 L-6206.0117 10169.8477 L-6206.0117 10170.4863 L-6206.0117 10171.5859 L-6206.0117 10175.5 L-6195.3765 10175.5 L-6195.3765 10171.5859 L-6195.3765 10170.4863 L-6195.3765 10169.8477 L-6195.3765 10168.8125 L-6195.3765 10164.8633 L-6206.0117 10164.8633 Ln0 O0.15 1 0.9 0.1 k-6195.0078 10170.5518 m-6207 10170.5518 L-6207 10170.9414 L-6195.0078 10170.9395 L-6195.0078 10170.5518 Lf-6195.0078 10169.8477 m-6195.0078 10169.5215 L-6207 10169.5215 L-6207 10169.8477 L-6207 10169.9121 L-6195.0078 10169.9121 L-6195.0078 10169.8477 Lf0 1 1 0 k-6195.0078 10170.4863 m-6195.0078 10169.9121 L-6207 10169.9121 L-6207 10170.4863 L-6207 10170.5518 L-6195.0078 10170.5518 L-6195.0078 10170.4863 Lf1 Ap0.746094 0.675781 0.667969 0.898438 k-6205.2715 10171.6504 m-6207 10171.6504 L-6207 10168.8125 L-6205.2715 10168.8125 L-6205.2715 10171.6504 Lf0.15 1 0.9 0.1 k-6204.5967 10171.6338 m-6205.4492 10171.6338 L-6205.4492 10168.7969 L-6204.5967 10168.7969 L-6204.5967 10171.6338 Lf0 Ap0.746094 0.675781 0.667969 0.898438 k-6195.0078 10171.5859 m-6195.0078 10170.9395 L-6207 10170.9414 L-6207 10171.5859 L-6207 10171.6504 L-6195.0078 10171.6494 L-6195.0078 10171.5859 Lf-6195.0078 10168.8125 m-6207 10168.8125 L-6207 10169.5215 L-6195.0078 10169.5215 L-6195.0078 10168.8125 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 162)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6195.6099 10175.5 L-6195.6099 10164.8633 L-6207 10164.8633 L-6207 10175.5 Ln-6206.2461 10171.5859 m-6206.2461 10175.5 L-6195.6099 10175.5 L-6195.6099 10164.8633 L-6206.2461 10164.8633 L-6206.2461 10168.7549 L-6206.2461 10171.5859 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-6200.6245 10171.5215 m-6200.6245 10170.8779 L-6207 10170.8779 L-6207 10171.5215 L-6207 10171.5859 L-6200.6245 10171.5859 L-6200.6245 10171.5215 Lf-6200.6245 10168.748 m-6207 10168.748 L-6207 10169.458 L-6200.6245 10169.458 L-6200.6245 10168.748 Lf0.15 1 0.9 0.1 k-6200.6245 10170.4863 m-6207 10170.4863 L-6207 10170.8779 L-6200.6245 10170.8779 L-6200.6245 10170.4863 Lf-6200.6245 10169.7832 m-6200.6245 10169.458 L-6207 10169.458 L-6207 10169.7832 L-6207 10169.8486 L-6200.6245 10169.8486 L-6200.6245 10169.7832 Lf0 1 1 0 k-6200.6245 10170.4209 m-6200.6245 10169.8486 L-6207 10169.8486 L-6207 10170.4209 L-6207 10170.4863 L-6200.6245 10170.4863 L-6200.6245 10170.4209 LfU-6206.2461 10175.5 m-6195.6099 10175.5 L-6195.6099 10164.8633 L-6206.2461 10164.8633 L-6206.2461 10175.5 Ln-6195.7241 10170.1816 m-6203.8125 10174.8516 LN0 O0.746094 0.675781 0.667969 0.898438 k-6203.4814 10169.46 m-6203.4814 10166.6406 L-6197.3535 10170.1777 L-6203.4814 10173.7158 L-6203.4814 10170.8779 L-6203.8125 10170.8779 L-6203.8125 10171.5859 L-6203.8125 10174.8516 L-6195.7241 10170.1816 L-6203.8125 10165.5127 L-6203.8125 10168.752 L-6203.8125 10169.46 L-6203.4814 10169.46 Lf0.15 1 0.9 0.1 k-6203.4814 10173.7158 m-6197.3535 10170.1777 L-6203.4814 10166.6406 L-6203.4814 10169.46 L-6203.4814 10169.8477 L-6203.3472 10169.8477 L-6203.2148 10169.4756 -6202.8633 10169.207 -6202.4453 10169.207 c-6201.9155 10169.207 -6201.4849 10169.6367 -6201.4849 10170.168 c-6201.4849 10170.6973 -6201.9155 10171.1279 -6202.4453 10171.1279 c-6202.8633 10171.1279 -6203.2148 10170.8594 -6203.3472 10170.4863 C-6203.4814 10170.4863 L-6203.4814 10170.8779 L-6203.4814 10173.7158 Lf0 1 1 0 k-6202.4453 10171.1279 m-6201.9155 10171.1279 -6201.4849 10170.6973 -6201.4849 10170.168 c-6201.4849 10169.6367 -6201.9155 10169.207 -6202.4453 10169.207 c-6202.8633 10169.207 -6203.2148 10169.4756 -6203.3472 10169.8477 c-6203.3828 10169.9473 -6203.4058 10170.0537 -6203.4058 10170.168 c-6203.4058 10170.2793 -6203.3828 10170.3848 -6203.3472 10170.4863 c-6203.2148 10170.8594 -6202.8633 10171.1279 -6202.4453 10171.1279 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6206.8833 10175.4551 m-6115.0479 10175.4551 L-6115.0479 10171.1758 L-6206.8833 10171.1758 L-6206.8833 10175.4551 Ln0 O0 0 0 1 k-6206.6631 10172.7754 m-6207 10172.8418 -6206.4814 10173.0313 -6206.8833 10172.8887 C-6206.8379 10172.7705 -6206.7725 10172.6816 -6206.6631 10172.7754 Cf-6116.1675 10172.9414 m-6117.2524 10173.7041 -6118.6816 10172.9336 -6119.8701 10173.4199 C-6120.0098 10173.4521 -6119.8345 10173.0029 -6120.1484 10173.1025 C-6121.3008 10173.6953 -6123.1162 10173.3418 -6124.5195 10172.8848 C-6124.4346 10172.7666 L-6124.7017 10172.6816 -6125.0283 10173.0723 -6125.3115 10173.0176 C-6125.3135 10172.9395 -6125.2207 10172.9063 -6125.2861 10172.7988 C-6125.3574 10173.0352 -6125.7983 10172.9082 -6125.9185 10173.085 C-6126.0303 10172.9922 -6126.0195 10172.8047 -6126.1641 10172.7012 C-6126.3262 10172.9697 L-6126.7769 10173.6094 -6127.4209 10172.9258 -6128.0361 10173.2559 C-6128.0063 10173.1934 -6127.9453 10173.1445 -6127.9941 10173.085 C-6128.9814 10173.4727 -6130.2168 10173.4004 -6131.3208 10173.5439 C-6131.2769 10173.4482 -6131.2363 10173.2754 -6131.3008 10173.1689 C-6131.3555 10173.4512 -6131.6963 10173.5225 -6131.9922 10173.5781 C-6132.1255 10173.2871 -6132.4995 10173.8438 -6132.8467 10173.6836 C-6132.8169 10173.6191 L-6133.0732 10173.9238 -6133.1973 10173.4434 -6133.4053 10173.8086 C-6133.5684 10173.5801 L-6133.6807 10173.9902 -6133.9395 10173.3672 -6134.1514 10173.5762 C-6134.1445 10173.6602 L-6134.3442 10173.7598 -6134.4482 10173.5537 -6134.6338 10173.623 C-6134.6514 10173.5762 L-6135.0854 10173.6836 -6135.3379 10173.4551 -6135.3271 10173.7754 C-6135.4795 10173.5186 -6134.9063 10173.6582 -6135.1455 10173.2852 C-6136.5732 10173.6152 -6138.0459 10173.5508 -6139.4834 10173.5566 C-6139.6465 10173.4277 -6139.7505 10173.3887 -6139.7871 10173.2676 C-6139.9307 10173.332 -6140.3281 10173.3262 -6140.4585 10173.4902 C-6140.4102 10173.4834 -6140.5513 10173.3262 -6140.6274 10173.3105 C-6140.8887 10173.1895 -6140.9131 10173.6621 -6141.2002 10173.5186 C-6141.0859 10173.4336 -6141.0469 10173.3301 -6141.0854 10173.2109 C-6141.3301 10173.4609 -6141.6577 10173.4209 -6141.9473 10173.5029 C-6141.9023 10173.4482 -6141.8325 10173.416 -6141.8433 10173.3154 C-6142.1602 10173.5986 -6142.4209 10173.2559 -6142.6982 10173.4346 C-6142.5947 10173.25 L-6143.0415 10173.0254 -6142.7266 10173.6367 -6143.1128 10173.5039 C-6143.02 10173.4453 -6143.0527 10173.373 -6143.0361 10173.2979 C-6143.3965 10173.6338 -6143.9795 10173.5225 -6144.3389 10173.6367 C-6144.3174 10173.6113 -6144.3232 10173.5605 Y-6144.7148 10173.6025 -6145.1245 10173.498 -6145.5552 10173.6445 C-6145.7119 10173.5625 -6145.5039 10173.1934 -6145.9185 10173.2617 C-6145.9033 10173.6328 -6146.6221 10173.4141 -6146.3779 10173.835 C-6146.7319 10173.7734 -6147.2925 10173.6338 -6147.5283 10173.7598 C-6147.3691 10173.6191 -6147.7007 10173.3066 -6147.4063 10173.2754 C-6147.6289 10173.0498 L-6147.5957 10172.8984 -6147.3999 10173.1016 -6147.4707 10172.9102 C-6147.6182 10172.9258 -6148.0479 10173.0723 -6148.1797 10173.0117 C-6148.4531 10173.2393 -6148.7041 10173.6641 -6149.1465 10173.7109 C-6148.9385 10173.5664 -6149.2646 10173.3018 -6149.1235 10173.2383 C-6149.7407 10173.9492 L-6149.8877 10173.9668 -6149.7725 10173.6563 -6149.9854 10173.7529 C-6149.9746 10173.8516 -6150.0674 10173.9121 -6150.1318 10173.9922 C-6150.1875 10173.9492 -6150.7441 10174.085 -6150.8081 10173.7188 C-6150.8735 10173.5762 -6150.5684 10173.6426 -6150.7314 10173.5117 C-6151.0029 10173.5156 -6151.0151 10173.6406 -6151.2871 10173.6465 C-6151.2925 10173.5977 L-6151.4717 10173.5439 -6151.8213 10173.7529 -6151.6265 10173.9551 C-6151.5015 10173.9668 -6151.6738 10173.7354 -6151.4888 10173.8418 C-6151.6152 10174.0537 -6151.9312 10174.1133 -6152.2031 10174.1172 C-6152.1104 10174.0586 -6152.1216 10173.9609 -6152.0845 10173.8574 C-6152.4497 10174.1445 -6152.8369 10174.2354 -6153.2451 10174.3555 C-6153.2515 10174.5293 -6153.0928 10174.0391 -6153.0327 10174.1309 C-6153.5557 10173.8896 -6154.1128 10174.4727 -6154.5479 10174.1201 C-6154.4766 10174.0898 -6154.5098 10174.3672 -6154.5146 10174.3184 C-6154.7666 10174.2969 -6154.7549 10174.0449 -6154.9189 10174.1377 C-6154.9355 10173.9902 -6155.1255 10174.1855 -6155.2944 10174.2305 C-6155.3818 10174.3369 -6155.3384 10174.1582 -6155.1914 10174.1426 C-6155.4268 10174.2676 -6156.3691 10174.4941 -6156.9131 10174.2793 C-6156.9023 10174.3779 -6157.2471 10174.6377 -6157.3721 10174.6279 C-6157.3232 10174.3984 L-6157.4375 10174.2617 -6157.7422 10174.4189 -6157.7632 10174.2227 C-6158.0303 10174.5 -6156.7344 10173.9863 -6157.0957 10174.2002 C-6157.1895 10174.0098 -6157.5991 10174.5645 -6157.5215 10174.2529 C-6157.7725 10174.2617 -6158.0161 10174.5186 -6158.2559 10174.3047 C-6158.1865 10174.3418 -6158.0522 10173.9873 -6158.2549 10174.0039 C-6158.6123 10174.0449 -6158.3564 10174.1133 -6158.6465 10174.1895 C-6158.8281 10174.2832 L-6158.8398 10174.5059 -6159.1475 10174.2529 -6159.0146 10174.5029 C-6159.0586 10174.3184 -6159.5337 10174.6152 -6159.4971 10174.2461 C-6159.4473 10173.9551 L-6159.6016 10173.9766 -6159.7002 10174.2617 -6159.8213 10174.3896 C-6159.8418 10174.3633 -6159.8823 10174.3047 -6159.8745 10174.2578 C-6159.8994 10174.7031 -6160.2432 10174.2207 -6160.4268 10174.5645 C-6160.7505 10174.4102 -6161.2495 10174.5508 -6161.4023 10174.2734 C-6161.6514 10174.4082 -6161.8784 10174.5684 -6162.1621 10174.4727 C-6162.1055 10174.4307 -6162.0283 10174.4189 -6162.0122 10174.3223 C-6162.1904 10174.1914 -6162.2344 10174.3086 -6162.3975 10174.3809 C-6162.3608 10174.3145 -6162.7539 10174.1201 -6162.9521 10173.9629 C-6163.1992 10174.0957 -6163.1143 10174.3359 -6163.1392 10174.4824 C-6163.3652 10174.0439 -6163.8379 10174.7656 -6164.1211 10174.3672 C-6164.0352 10174.3066 -6163.7598 10174.1514 -6163.9658 10174.041 C-6164.1919 10173.6025 -6164.4219 10174.3652 -6164.7861 10174.1543 C-6164.6968 10174.5186 L-6164.8594 10174.2939 -6165.2334 10174.7305 -6165.1963 10174.3594 C-6165.3184 10174.4902 -6165.6265 10174.2383 -6165.5859 10174.5938 C-6166.1846 10174.2939 -6167.0425 10174.7754 -6167.4102 10174.1377 C-6167.4961 10174.1973 -6167.7104 10174.1367 -6167.6665 10174.3193 C-6167.5239 10174.5176 -6167.4673 10174.1777 -6167.4141 10174.3125 C-6167.4912 10174.3232 -6167.5078 10174.4209 -6167.5161 10174.4697 C-6167.7021 10174.3887 -6167.8486 10174.3633 -6167.6729 10174.0674 C-6168.0869 10173.8477 -6168.1001 10174.6719 -6168.6274 10174.5332 C-6168.6035 10174.3857 -6168.6436 10174.3301 -6168.7979 10174.3535 C-6169.0903 10174.6055 L-6169.4312 10174.5469 -6169.2842 10174.2705 -6169.2925 10174.0215 C-6169.4746 10174.0645 -6169.6973 10174.0527 -6169.7803 10174.2383 C-6170.0015 10173.9258 L-6169.8398 10174.1514 -6170.1514 10174.0762 -6170.2368 10174.1367 C-6170.1514 10174.0762 L-6170.1846 10173.9697 -6170.3955 10174.0352 -6170.5024 10174.0664 C-6170.4766 10174.2207 -6170.2617 10174.2832 -6170.1445 10174.3281 C-6170.2373 10174.4375 -6170.3823 10174.4121 -6170.5059 10174.541 C-6170.4648 10174.2969 -6170.8027 10174.3672 -6170.9473 10174.3418 C-6171.1133 10174.2891 -6171.1348 10174.5605 -6171.1831 10174.5527 C-6171.1875 10174.4258 -6171.4541 10174.5313 -6171.3247 10174.3535 C-6171.2681 10174.3125 -6171.1953 10174.4766 -6171.1016 10174.3652 C-6171.2109 10174.2705 -6171.1982 10174.0498 -6171.4258 10174.2109 C-6171.5967 10174.332 -6171.3818 10174.6934 -6171.7061 10174.5391 C-6171.6211 10174.4785 -6171.6055 10174.3809 -6171.5391 10174.2939 C-6171.8433 10174.166 L-6171.8564 10174.3887 L-6171.8975 10174.332 -6171.8691 10174.3125 -6171.8877 10174.2832 C-6171.9785 10174.5176 -6172.3521 10174.3555 -6172.4209 10174.6191 C-6172.5742 10174.6426 -6172.7441 10174.4648 -6172.8906 10174.4395 C-6172.8623 10174.4199 L-6173.0415 10174.2891 -6173.2793 10174.375 -6173.4297 10174.5254 C-6173.4219 10174.4766 L-6173.5195 10174.46 -6173.7505 10174.4941 -6173.8735 10174.625 C-6174.1201 10174.457 -6173.9561 10173.7842 -6174.2295 10174.0645 C-6174.48 10174.0723 -6174.6221 10174.4727 -6174.5215 10174.6152 C-6174.9717 10174.4648 -6175.4834 10174.8281 -6175.9009 10174.4824 C-6175.9658 10174.5723 -6175.9248 10174.6289 -6176.0586 10174.6816 C-6176.7197 10174.5938 -6177.4551 10174.9453 -6177.9814 10174.5078 C-6177.79 10174.4141 -6177.9688 10174.2852 -6177.9727 10174.1582 C-6178.1309 10174.3574 -6178.1631 10173.9512 -6178.2197 10174.2939 C-6178.2041 10174.4941 -6178.2197 10174.5918 -6178.0337 10174.6729 C-6178.4282 10174.7813 -6179.0283 10174.7813 -6179.2471 10174.5938 C-6179.1377 10174.6865 -6179.2227 10174.748 -6179.3086 10174.8086 C-6179.2803 10174.4873 -6179.5713 10174.4395 -6179.7915 10174.5527 C-6179.8223 10174.748 L-6179.9658 10174.5469 L-6180.0503 10174.6094 -6180.0591 10174.957 -6180.2773 10174.7695 C-6180.2891 10174.6934 -6180.3018 10174.6162 -6180.3418 10174.5605 C-6180.5693 10174.7207 -6180.8906 10174.9922 -6181.1377 10174.8262 C-6181.3398 10174.541 L-6181.4453 10174.5723 -6181.6235 10174.7441 -6181.4375 10174.8262 C-6181.8594 10174.6543 -6182.1309 10174.6328 -6182.2646 10174.3857 C-6182.9912 10174.9873 -6184.0459 10175.0117 -6184.8906 10174.9688 C-6184.8652 10174.8223 L-6185.0923 10174.6855 -6184.9834 10175.0781 -6185.1416 10174.9766 C-6185.0684 10174.8369 -6185.3145 10174.6729 -6185.1362 10174.5029 C-6185.4609 10174.3477 -6185.5547 10174.7559 -6185.7656 10174.8223 C-6185.7979 10175.0146 -6185.5957 10174.6992 -6185.6367 10174.9434 C-6185.6729 10175.0117 -6186.0859 10174.7939 -6186.1362 10175.085 C-6186.2178 10174.9697 -6186.1543 10174.7559 -6186.1104 10174.6377 C-6186.3086 10174.7793 L-6186.5513 10174.4395 -6185.7559 10174.1719 -6186.0107 10173.7529 C-6186.1934 10173.7988 L-6186.3682 10173.4941 -6185.71 10173.4551 -6186.1689 10173.3506 C-6186.3682 10173.4941 -6186.5381 10173.916 -6186.3608 10174.0449 C-6186.7754 10174.125 -6186.5527 10174.7383 -6186.9985 10174.7139 C-6187.1201 10174.5439 -6186.6416 10174.6729 -6186.7275 10174.4336 C-6186.9375 10174.1992 -6187.1484 10174.5645 -6187.3354 10174.4824 C-6187.1279 10174.5918 -6187.3032 10174.8857 -6187.4375 10174.9395 C-6187.6641 10174.8018 -6187.29 10174.6641 -6187.6113 10174.6338 C-6187.6641 10174.8018 -6187.9595 10174.9277 -6187.7041 10175.0449 C-6187.8203 10175.4258 -6188.0381 10174.9395 -6188.2129 10175.2344 C-6188.3174 10174.9668 -6187.8823 10174.6152 -6188.2354 10174.4814 C-6188.1792 10174.7393 -6188.6704 10174.832 -6188.4839 10175.2148 C-6188.6221 10175.1406 -6188.6367 10174.9375 -6188.5361 10174.7793 C-6188.7334 10174.6201 -6189.0151 10175.25 -6189.0801 10174.7383 C-6189.1479 10175.0029 L-6189.21 10174.916 -6189.2983 10174.8516 -6189.3994 10174.71 C-6189.5732 10174.7041 -6189.96 10175.0664 -6189.9443 10174.6689 C-6190 10174.71 -6190.3975 10174.6914 -6190.2441 10174.9668 C-6189.9971 10175.1348 -6189.96 10174.7656 -6189.8223 10175.1377 C-6189.9971 10174.835 -6190.1787 10175.1777 -6190.3213 10175.2793 C-6190.3447 10175.125 L-6190.4297 10175.1855 -6190.6255 10175.1514 -6190.6787 10175.3184 C-6190.6133 10175.2305 -6190.6475 10175.125 -6190.7148 10175.0879 C-6190.8042 10175.3223 L-6191.1494 10175.4395 -6190.8857 10174.9102 -6191.2217 10174.9785 C-6190.9663 10174.7969 L-6191.0225 10174.8359 -6191.1367 10174.6162 -6191.2979 10174.6895 C-6191.3604 10174.9033 -6191.4775 10175.1602 -6191.5313 10175.3262 C-6191.7207 10175.4199 -6191.6162 10175.0859 -6191.8027 10175.3047 C-6191.5586 10175.0469 L-6191.5215 10174.9766 -6191.7231 10174.6934 -6191.9761 10174.6992 C-6192.1377 10174.7734 -6192.3887 10175.082 -6192.1338 10175.1992 C-6192.2607 10175.2031 -6192.4385 10175.0723 -6192.3379 10174.916 C-6192.6255 10174.9902 -6192.2998 10175.1465 -6192.5479 10175.2793 C-6192.6494 10175.1367 -6192.9658 10174.9336 -6193.1563 10174.7266 C-6192.8975 10174.3682 L-6193.0693 10174.3652 L-6192.8467 10174.0781 -6193.1826 10174.1465 -6193.0566 10173.8438 C-6193.1743 10173.7969 -6193.3169 10173.8994 -6193.4307 10173.9785 C-6193.0864 10174.4629 -6193.8159 10174.6406 -6193.7158 10175.082 C-6194.1875 10175.2031 -6194.0107 10174.0078 -6194.5024 10174.6992 C-6194.4219 10174.8145 -6194.6533 10175.1504 -6194.3564 10175.0225 C-6194.6494 10174.9746 -6194.5557 10175.4658 -6194.9014 10175.2832 C-6194.6455 10175.1016 -6195.1763 10174.8359 -6194.8066 10174.5723 C-6194.8311 10174.7188 -6194.6001 10174.6836 -6194.5435 10174.6426 C-6194.6641 10174.4727 -6194.5186 10174.1973 -6194.8184 10174.1973 C-6195.0015 10174.2393 -6195.2524 10174.248 -6195.2158 10174.4785 C-6195.2085 10174.7314 -6194.9365 10174.4512 -6195.0537 10174.707 C-6195.4185 10174.7949 -6195.4795 10174.4102 -6195.6304 10174.8594 C-6195.3999 10174.8232 -6195.3423 10175.085 -6195.3467 10175.2578 C-6195.6143 10175.3633 L-6195.5625 10175.1953 L-6195.9922 10175.0742 -6195.6895 10175.5 -6196.1055 10175.4551 C-6196.3008 10175.123 L-6196.2017 10174.8369 -6195.6953 10175.25 -6195.7695 10174.7842 C-6196.04 10174.7656 -6196.1299 10175.0029 -6196.3848 10174.8818 C-6196.3281 10174.8418 -6196.2505 10174.8301 -6196.1943 10174.7891 C-6196.2915 10174.7734 -6196.3877 10174.1563 -6196.7734 10174.5176 C-6196.9727 10174.6582 -6196.8262 10174.6836 -6196.8311 10174.8574 C-6197.2656 10174.9102 -6197.3955 10175.0879 -6197.6753 10175.1152 C-6197.6177 10174.7754 -6198.1699 10175.082 -6197.8608 10174.7344 C-6197.7188 10174.9336 -6197.0903 10174.9141 -6196.9365 10174.5898 C-6197.0947 10174.1865 -6196.5952 10174.6465 -6196.5024 10174.2383 C-6196.8506 10174.2285 -6196.8335 10173.832 -6196.8896 10173.5723 C-6196.9863 10173.5537 -6197.0801 10173.6641 -6197.1377 10173.7041 C-6197.1787 10173.9492 -6197.0522 10173.9453 -6197.0449 10174.1973 C-6197.4336 10174.1309 -6197.8081 10174.2676 -6198.0225 10174.5059 C-6198.1523 10174.3848 -6198.1113 10174.1406 -6197.9575 10174.1172 C-6198.4199 10174.1895 -6198.9141 10174.1563 -6199.3535 10174.082 C-6199.0693 10174.4814 -6199.8433 10174.1758 -6199.6494 10174.5078 C-6199.4141 10174.5977 -6199.2119 10174.8818 -6199.3418 10175.0605 C-6199.4888 10175.0352 -6199.3369 10174.8857 -6199.3984 10174.8008 C-6199.5859 10175.0186 -6199.6895 10174.4512 -6199.8735 10174.7949 C-6199.4512 10174.666 -6199.7915 10174.3086 -6199.7139 10173.9961 C-6200.0186 10174.1719 -6199.7007 10173.7734 -6200.0024 10173.7734 C-6200.3057 10173.9473 -6200.6787 10174.085 -6201.0161 10174.1514 C-6201.4399 10173.8555 -6202.0898 10174.1465 -6202.4683 10174.1582 C-6202.6665 10174 -6202.5322 10173.6465 -6202.7471 10173.5859 C-6202.9995 10173.5918 -6202.5601 10173.9668 -6202.9336 10173.8047 C-6202.8975 10173.7344 L-6203.0107 10173.8164 -6203.5825 10173.4941 -6203.6929 10174.0029 C-6203.5776 10173.6191 L-6203.6475 10173.585 -6203.7119 10173.6719 -6203.7695 10173.7129 C-6203.7725 10173.5879 -6203.8535 10173.4746 -6203.7402 10173.3926 C-6203.9707 10173.1289 -6204.2241 10173.4346 -6204.4746 10173.4453 C-6204.3135 10173.6719 L-6204.7422 10173.8496 -6205.0293 10173.625 -6205.4443 10173.7041 C-6205.4316 10173.4824 L-6205.6787 10173.6152 L-6205.6182 10173.4004 -6205.8447 10173.2617 -6205.9751 10173.4414 C-6205.3335 10172.8984 L-6205.1553 10173.0293 -6205.5283 10173.166 -6205.4165 10173.3848 C-6205.3213 10173.5762 -6204.9375 10173.5156 -6204.8755 10173.3018 C-6205.0225 10173.2773 -6205.0293 10173.3262 -6205.1436 10173.4063 C-6205.1919 10173.0977 -6204.9688 10173.1094 -6204.8584 10172.9033 C-6204.9355 10172.916 -6205.0449 10172.8223 -6205.0615 10172.9199 C-6204.9102 10172.7695 -6204.7578 10172.7461 -6204.5059 10172.7383 C-6204.6763 10172.8594 -6204.4131 10172.9297 -6204.4775 10173.0176 C-6204.4575 10172.7461 -6204.2168 10172.6621 -6203.9053 10172.7383 C-6203.6831 10173.0527 -6203.3208 10172.5361 -6202.96 10172.623 C-6203.1064 10172.8984 -6203.2935 10173.1191 -6203.5127 10173.2305 C-6203.2861 10173.3682 -6203.2607 10173.2227 -6203.0337 10173.3613 C-6202.9238 10173.1563 -6202.8457 10172.8418 -6202.5503 10172.7168 C-6202.5342 10172.9199 L-6202.2666 10172.8164 -6202.2666 10172.5156 -6201.9258 10172.5723 C-6201.3418 10172.6719 -6200.7407 10172.6719 -6200.2949 10172.6973 C-6200.2783 10172.8994 L-6200.0303 10172.4658 -6199.4521 10172.7393 -6199.1182 10172.5469 C-6198.5503 10172.7422 -6197.8848 10172.3535 -6197.5938 10172.7031 C-6196.5913 10172.5469 -6195.7148 10172.3945 -6194.6768 10172.4688 C-6194.8516 10172.7637 L-6194.6655 10172.5469 -6194.7305 10172.9336 -6194.5479 10172.8896 C-6194.7578 10172.6543 -6194.2949 10172.585 -6194.1665 10172.4033 C-6193.7041 10172.6328 -6193.1104 10172.3828 -6192.7007 10172.1758 C-6192.6846 10172.3789 L-6192.2705 10171.998 -6191.7759 10172.332 -6191.2598 10172.3945 C-6191.2007 10172.4785 -6191.1074 10172.6689 -6190.9536 10172.6465 C-6190.6738 10172.3184 -6190.5273 10172.3418 -6190.1167 10172.1367 C-6189.8169 10172.1367 -6189.3301 10172.2178 -6189.0254 10172.3457 C-6187.8975 10171.8848 -6186.7456 10172.1797 -6185.5732 10171.9023 C-6185.4888 10172.1406 L-6184.3521 10171.6309 -6182.9541 10172.0938 -6181.9839 10171.832 C-6182.0776 10172.2393 L-6181.7734 10172.3652 -6181.3843 10172.1328 -6181.4619 10171.8438 C-6181.1567 10171.9688 -6180.7007 10171.6465 -6180.5068 10171.9814 C-6180.1953 10172.0566 -6180.1255 10171.7939 -6179.8662 10171.7383 C-6179.2422 10171.8926 -6179.0107 10171.8574 -6178.4224 10171.7813 C-6178.5684 10171.7559 L-6178.6328 10171.8457 -6178.6387 10172.0186 -6178.4922 10172.0449 C-6178.2725 10171.9316 -6177.6846 10172.1543 -6177.9033 10171.6689 C-6177.2754 10171.9492 -6176.4385 10171.4395 -6175.8271 10171.8184 C-6175.8789 10171.6855 -6175.7246 10171.6602 -6175.6602 10171.5703 C-6175.1089 10171.5645 -6174.5293 10171.8359 -6174.0898 10171.6094 C-6174.0024 10171.6758 -6174.2295 10171.8359 -6174.0049 10171.8496 C-6173.8721 10171.7988 -6174.0024 10171.6758 -6173.8384 10171.6016 C-6172.9453 10171.3535 -6172.0303 10171.8574 -6171.2188 10171.7939 C-6169.7754 10171.5361 -6168.2695 10171.666 -6166.8867 10171.623 C-6166.9023 10171.7207 L-6166.4395 10171.3477 -6165.8159 10172.1025 -6165.4463 10171.541 C-6165.3369 10171.6338 -6165.0283 10171.5859 -6165.1094 10171.7734 C-6164.7407 10171.5098 -6164.0771 10172.0215 -6163.5439 10171.6865 C-6163.5928 10171.6777 -6163.6211 10171.6973 -6163.6777 10171.7393 C-6163.1392 10171.9551 -6162.6641 10171.6602 -6162.0957 10171.8555 C-6162.1533 10171.8975 -6162.2583 10171.9277 -6162.2754 10172.0254 C-6162.0557 10172.2129 -6161.7549 10171.6133 -6161.6348 10172.085 C-6161.5088 10172.0801 -6161.5449 10171.8477 -6161.6221 10171.8613 C-6160.3779 10172.0449 -6159.0498 10171.7441 -6157.7549 10171.6367 C-6156.8271 10171.9189 -6157.6982 10172.4297 -6156.9663 10172.0781 C-6156.9063 10172.1689 -6156.9229 10171.8984 -6156.9131 10171.9961 C-6156.6299 10171.8643 -6156.4717 10172.5215 -6156.2754 10172.2754 C-6156.3564 10171.9863 -6156.1445 10172.1133 -6156.1387 10171.9375 C-6155.5713 10172.125 -6155.4575 10172.3857 -6155.0098 10172.166 C-6155.0435 10172.3184 L-6154.5186 10171.8887 -6153.9102 10172.1191 -6153.4673 10171.623 C-6150.5728 10171.5332 -6147.7983 10171.2578 -6144.9761 10171.2002 C-6142.1865 10171.2949 -6139.4551 10171.0723 -6136.6221 10171.3359 C-6135.9585 10171.7354 -6135.9087 10171.7246 -6135.1797 10171.5625 C-6135.2095 10171.6279 -6135.2549 10171.6426 -6135.2061 10171.7031 C-6135.1699 10171.375 -6134.6929 10171.6719 -6134.6235 10171.3594 C-6133.5762 10171.4199 -6132.6113 10171.3301 -6131.5337 10171.3281 C-6131.7041 10171.3633 -6131.7896 10171.6309 -6131.5869 10171.6094 C-6131.3755 10171.4004 L-6131.3408 10171.4922 L-6131.2021 10171.4434 -6131.0513 10171.2813 -6131.1943 10171.1758 C-6128.4873 10170.8926 -6125.8242 10171.5508 -6123.1729 10171.4697 C-6122.5435 10171.6064 -6121.6475 10171.4814 -6120.9629 10171.4141 C-6118.9355 10171.8516 -6117.1079 10172.2041 -6115.0479 10171.8984 C-6115.3169 10172.7461 -6116.1675 10172.9414 Vf-6206.2578 10172.7422 m-6206.1855 10172.9063 -6205.9497 10172.9961 -6206.1377 10173.2148 C-6206.1611 10173.0605 -6206.2822 10172.8887 -6206.2578 10172.7422 Cf-6199.9619 10174.4297 m-6199.9536 10174.3809 -6199.8721 10174.4961 -6199.8521 10174.5225 C-6199.9297 10174.5352 -6200.0024 10174.6729 -6200.0645 10174.5879 C-6199.9854 10174.5762 -6199.9976 10174.498 -6199.9619 10174.4297 Cf-6198.3521 10174.5273 m-6198.3765 10174.6729 -6198.7207 10174.7891 -6198.9238 10174.8066 C-6198.3521 10174.5273 Lf-6196.8521 10175.1289 m-6196.7227 10175.2529 -6196.7583 10175.3193 -6196.9326 10175.3154 C-6196.9453 10175.2383 -6196.8877 10175.1992 -6196.8521 10175.1289 Cf-6196.7456 10174.7969 m-6196.6211 10174.7939 -6196.5591 10174.8789 -6196.4985 10174.9629 C-6196.5029 10174.8369 -6196.7871 10175.041 -6196.7456 10174.7969 Cf-6193.4893 10175.2207 m-6193.4111 10175.21 -6193.2417 10175.0879 -6193.1689 10175.25 C-6193.2505 10175.1367 -6193.5498 10175.4346 -6193.4893 10175.2207 Cf-6191.9761 10175 m-6191.9272 10175.0098 -6191.9072 10175.0361 -6191.8506 10174.9961 C-6191.7607 10175.0625 -6191.8555 10175.1689 -6191.9312 10175.1826 C-6191.9761 10175 Lf-6164.4287 10174.4141 m-6164.5923 10174.4863 L-6164.5684 10174.3418 L-6164.4287 10174.4141 Lf-6152.3574 10174.4063 m-6152.1943 10174.3145 -6152.2441 10174.5439 -6152.2168 10174.5645 C-6152.3643 10174.5801 -6152.1621 10174.3848 -6152.3574 10174.4063 Cf-6145.8486 10173.6777 m-6145.8984 10173.6816 L-6145.8818 10173.3828 L-6145.8486 10173.6777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-6180.9727 10175.5 m-6180.9727 10149.4717 L-6207 10149.4717 L-6207 10175.5 L-6180.9727 10175.5 Ln0 Ap0 R0.7084 0.636438 0.515526 0.381872 K1.125 w-6207 10158.1465 m-6180.9727 10158.1465 lS0.64 0.650477 0.701045 0.510735 K-6207 10166.8242 m-6180.9727 10166.8242 lS0.597742 0.537865 0.64184 0.350469 K0.375 w-6207 10162.4854 m-6180.9727 10162.4854 lS0 O0.597742 0.537865 0.64184 0.350469 k1 w-6185.5742 10162.5117 m-6185.3442 10162.2402 -6185.6914 10161.9541 -6186 10161.7432 c-6186.1118 10161.666 -6186.5215 10161.8789 -6186.7466 10161.7129 c-6187.0439 10161.4951 -6187.1826 10161.4082 -6187.4824 10161.4141 c-6187.6455 10161.4189 -6188.0435 10161.5479 -6188.1895 10161.5781 c-6188.5679 10161.6543 -6188.8022 10161.8516 -6189.3672 10161.7549 c-6189.7344 10161.6914 -6189.8286 10161.6006 -6189.9233 10161.6484 c-6190.1118 10161.79 -6190.2202 10162.0137 -6190.4258 10162.0625 c-6190.9575 10162.1895 -6191.3535 10162.2334 -6191.8818 10162.2227 c-6192.3047 10162.2129 -6193.4185 10162.2813 -6194.2866 10162.1816 c-6194.6226 10162.1416 -6194.6025 10161.7168 -6194.7695 10161.7129 c-6194.8618 10161.7109 -6194.7646 10162.0264 -6194.8306 10162.0469 c-6195.1694 10162.1533 -6195.4702 10161.0029 -6195.6943 10161.0723 c-6195.8047 10161.1074 -6195.5562 10161.6533 -6195.6729 10161.6816 c-6195.8975 10161.7373 -6196.2178 10160.7188 -6196.4321 10160.7813 c-6196.5635 10160.8184 -6196.2886 10161.2383 -6196.4375 10161.3066 c-6196.6655 10161.4111 -6196.9087 10160.5352 -6197.1064 10160.6338 C-6197.1543 10160.6816 -6196.7295 10161.4375 -6197.1685 10161.3789 c-6197.2871 10161.3613 -6197.5054 10160.8135 -6197.5801 10160.8398 c-6197.6919 10160.8799 -6197.3535 10161.3018 -6197.4897 10161.4277 C-6197.7681 10161.6543 -6198.3711 10160.6631 -6198.4575 10160.7344 c-6198.5791 10160.8359 -6198.1279 10161.5977 -6198.2695 10161.666 C-6198.4497 10161.9297 -6199.0142 10161.0527 -6199.0889 10161.1016 c-6199.1777 10161.1602 -6198.9058 10161.5381 -6198.8799 10161.7334 c-6198.8545 10161.9277 -6198.9966 10162.0615 -6199.2144 10162.0098 c-6199.4736 10161.9473 -6199.8696 10161.1416 -6199.9727 10161.2354 C-6200.0791 10161.291 -6199.8682 10161.5781 -6199.7954 10161.8125 c-6199.7583 10161.9277 -6199.8882 10162.1016 -6200.0298 10162.1016 c-6200.3135 10162.1494 -6200.6255 10161.498 -6200.7065 10161.6025 c-6200.7524 10161.6621 -6200.5898 10161.9902 -6200.7295 10162.0879 c-6200.8994 10162.2061 -6201.3115 10161.7383 -6201.4521 10161.7939 C-6201.5361 10161.8418 -6201.4126 10162.0967 -6201.4927 10162.1533 c-6201.7295 10162.3193 -6202.0039 10161.9209 -6202.0513 10161.9688 C-6202.1167 10161.9912 -6202.1201 10162.0361 -6202.2793 10162.1406 c-6202.4736 10162.2676 -6202.5254 10162.3486 -6202.5425 10162.4648 c-6202.5654 10162.583 -6202.3135 10162.875 -6202.1655 10162.8496 c-6201.8223 10162.79 -6201.8662 10163.3496 -6201.6328 10163.2158 c-6201.5679 10163.1797 -6201.6592 10162.7588 -6201.4199 10162.7656 c-6201.0488 10162.7783 -6200.9858 10163.3213 -6200.7817 10163.3105 c-6200.6406 10163.3037 -6200.8521 10162.6836 -6200.6328 10162.7607 c-6200.4751 10162.8164 -6200.0063 10163.8018 -6199.9795 10163.71 c-6199.8975 10163.4424 -6200.0703 10162.8984 -6199.9409 10162.9082 c-6199.7568 10162.9229 -6199.5078 10163.8174 -6199.2544 10163.9375 c-6199.1826 10163.9727 -6199.3774 10163.1006 -6199.1958 10163.0967 C-6199.0898 10163.1465 -6198.7578 10163.9492 -6198.6274 10163.998 C-6198.5591 10163.9824 -6198.5879 10163.625 -6198.5176 10163.6045 c-6198.4688 10163.5898 -6198.2817 10164.0654 -6198.21 10164.0234 c-6198.1055 10163.9629 -6198.2471 10163.4922 -6198.0889 10163.4229 c-6197.9175 10163.3486 -6197.4878 10164.3926 -6197.3486 10164.2979 c-6197.2769 10164.25 -6197.3574 10163.71 -6197.21 10163.7461 c-6197.0718 10163.7783 -6196.9414 10164.1143 -6196.8081 10164.1426 c-6196.7295 10164.1582 -6196.7935 10163.6914 -6196.7495 10163.6738 c-6196.5889 10163.6152 -6196.2329 10164.1719 -6196.0688 10164.0234 c-6195.8584 10163.8359 -6195.9395 10163.4697 -6195.8345 10163.4824 c-6195.6274 10163.5059 -6195.4912 10163.7432 -6195.4146 10163.6836 c-6195.2642 10163.5684 -6195.3281 10163.2793 -6195.0527 10163.1924 c-6194.8975 10163.1426 -6194.7935 10163.4346 -6194.7495 10163.4307 c-6194.6738 10163.4277 -6194.6782 10163.3301 -6194.6665 10163.2246 c-6194.6328 10162.9609 -6194.6064 10162.8994 -6194.4878 10162.8779 c-6194.0854 10162.8535 -6193.5625 10162.7842 -6193.1807 10162.7754 c-6192.6274 10162.7607 -6191.2607 10162.7373 -6191.1182 10162.7373 c-6191 10162.7129 -6190.7432 10162.8945 -6190.6689 10162.9609 c-6190.4678 10163.1455 -6190.2998 10163.3594 -6189.9858 10163.6201 c-6189.8906 10163.7012 -6189.8081 10163.6807 -6189.7378 10163.6563 c-6189.5249 10163.5859 -6189.4585 10163.5332 -6189.2202 10163.5029 c-6188.9175 10163.46 -6188.4272 10163.5488 -6188.1245 10163.6426 c-6187.6035 10163.8018 -6187.5264 10163.8242 -6187.0977 10163.7754 c-6186.6992 10163.7295 -6186.0586 10163.6582 -6186.0479 10163.3105 c-6186.0415 10163.0957 -6185.9414 10162.9434 -6185.5742 10162.5117 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-6180.9722 10175.5 m-6180.9722 10149.4727 L-6207 10149.4727 L-6207 10175.5 L-6180.9722 10175.5 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-6189.6455 10162.4893 m-6180.9736 10162.4893 lS-6193.9839 10175.5 m-6193.9839 10166.8242 lS0.7084 0.636438 0.515526 0.381872 K1.125 w-6189.7202 10158.1504 m-6180.9727 10158.1504 lS-6198.3232 10175.499 m-6198.3232 10166.1455 lS0.64 0.650477 0.701045 0.510735 K-6189.6504 10175.499 m-6189.6504 10173.0869 l-6186.9937 10172.8633 -6185.3096 10171.1602 v-6183.6064 10169.4336 -6183.3774 10166.8281 y-6180.9727 10166.8281 lS*u1 D0 O0.7084 0.636438 0.515526 0.381872 k1 w-6197.8418 10159.6855 m-6197.8418 10159.75 -6197.8218 10159.791 -6197.7783 10159.791 c-6197.6943 10159.791 -6197.4634 10159.4541 -6197.3994 10159.4541 c-6197.3154 10159.4541 -6197.2729 10159.4961 -6197.2729 10159.6016 c-6197.2729 10159.6855 -6197.5264 10160.5928 y-6197.5264 10160.6338 -6197.5264 10160.6338 -6197.5049 10160.6338 c-6197.4414 10160.6338 -6197.0615 10160.0869 -6196.9351 10160.0869 c-6196.9146 10160.0869 -6196.8936 10160.1074 -6196.8936 10160.1289 c-6197.1675 10161.0352 -6197.1675 10161.2256 v-6197.1675 10161.2891 -6197.1675 10161.3105 -6197.1465 10161.3105 c-6197.1055 10161.3105 -6196.6826 10160.7402 -6196.5562 10160.7402 c-6196.5352 10160.7402 -6196.5137 10160.7607 -6196.5137 10160.7822 c-6196.5137 10160.8457 -6196.7666 10161.585 -6196.7666 10161.7529 c-6196.7666 10161.7949 -6196.7666 10161.7949 -6196.7446 10161.7949 c-6196.6826 10161.7949 -6196.4722 10161.585 -6196.4297 10161.585 c-6196.4082 10161.585 -6196.3882 10161.6055 -6196.3882 10161.627 c-6196.3882 10161.6465 -6196.4927 10162.0059 -6196.4927 10162.0898 c-6196.4927 10162.1113 -6196.4927 10162.1113 -6196.4722 10162.1113 c-6196.4297 10162.1113 -6196.0918 10161.7529 -6196.0078 10161.7529 c-6195.9658 10161.7529 -6195.9233 10161.7949 -6195.9233 10161.8789 c-6195.9233 10162.0273 -6196.1138 10162.7441 -6196.1138 10162.7861 c-6196.1138 10162.8701 -6196.0918 10162.9121 -6196.0498 10162.9121 c-6195.9658 10162.9121 -6195.7119 10162.5957 -6195.6494 10162.5957 c-6195.5854 10162.5957 -6195.5439 10162.6162 -6195.5439 10162.6807 c-6195.5854 10163.1016 L-6195.5854 10163.166 -6195.5854 10163.1855 -6195.5654 10163.1855 c-6195.5225 10163.1855 -6195.2915 10162.8916 -6195.2065 10162.8916 c-6195.1006 10162.8916 -6195.1006 10163.3779 -6195.1006 10163.4395 c-6195.1006 10163.5449 -6195.0166 10163.6289 -6194.8896 10163.6289 c-6194.8057 10163.6289 -6194.4678 10163.3975 -6194.4473 10163.3975 c-6194.3623 10163.3975 -6194.3198 10163.8398 -6194.2568 10163.8398 c-6194.1943 10163.8398 -6193.9199 10163.7129 -6193.8564 10163.7129 c-6193.6455 10163.7129 -6193.6035 10163.7988 -6193.6035 10163.9668 c-6193.6255 10164.1143 L-6193.6255 10164.1563 -6193.6035 10164.1563 -6193.5835 10164.1563 c-6193.4985 10164.1563 -6193.2241 10163.8818 -6193.1392 10163.8818 c-6192.9287 10163.8818 -6190.8198 10165.9492 -6190.5454 10166.2227 c-6190.3984 10166.3906 -6190.3984 10166.6865 -6190.3984 10166.8135 c-6190.3984 10167.6777 -6190.3984 10167.7617 -6190.2295 10167.8457 c-6189.5977 10168.0996 -6189.5127 10168.2471 -6188.7334 10169.5332 c-6188.6479 10169.6807 -6187.7407 10170.2939 -6187.5942 10170.2939 c-6187.4878 10170.2939 -6187.1094 10170.0391 -6187.0239 10170.0391 c-6186.9194 10170.0391 -6186.8135 10170.1025 -6186.8135 10170.2705 c-6186.8135 10170.7139 -6187.3408 10171.2207 -6187.9312 10171.2207 c-6188.7534 10171.2207 -6189.0913 10170.5234 -6189.1338 10170.125 c-6189.1543 10169.9766 -6189.2393 10169.8916 -6189.3447 10169.8916 c-6189.3862 10169.8916 -6189.4287 10169.9121 -6189.4702 10169.9766 c-6189.9561 10170.7773 -6190.9473 10171.2207 -6191.7065 10171.2207 c-6192.7393 10171.2207 -6193.8774 10170.5879 -6194.3418 10170.3145 c-6194.7842 10170.0615 -6195.4814 10169.8916 -6195.8809 10169.8916 c-6196.3242 10169.8916 -6196.3662 10170.0391 -6196.3662 10170.2939 c-6196.3662 10170.4404 -6195.9023 10170.8818 -6195.9023 10171.0098 c-6195.9023 10171.1357 -6196.0498 10171.2207 -6196.4082 10171.2207 c-6196.8936 10171.2207 -6197.5679 10170.5029 -6197.5679 10169.7236 c-6197.5679 10169.1113 -6196.7666 10168.5859 -6196.3022 10168.5859 c-6195.3755 10168.5859 -6195.0942 10168.9434 -6194.5264 10169.4072 c-6194.4414 10169.4697 -6194.3774 10169.4922 -6194.3359 10169.4922 c-6194.1895 10169.4922 -6194.1895 10168.3945 -6194.1895 10168.2695 c-6194.1895 10168.1201 -6194.2729 10168.0576 -6194.3774 10168.0576 c-6196.7822 10168.0576 -6201.6592 10166.835 -6203.3672 10160.6777 c-6203.4297 10160.4658 -6203.5361 10160.3613 -6203.6406 10160.3613 c-6203.7881 10160.3613 -6204.7793 10161.2041 -6204.7793 10162.7861 c-6204.7793 10164.6201 -6203.5767 10165.5898 -6202.9873 10165.5898 c-6202.8398 10165.5898 -6202.6494 10165.5693 -6202.6494 10165.4209 c-6202.6494 10165.3584 -6202.6929 10165.2949 -6202.7759 10165.1895 c-6203.1143 10164.8535 -6203.3672 10164.2197 -6203.3672 10163.9033 c-6203.3672 10163.6914 -6203.2607 10163.5234 -6203.1143 10163.5234 c-6202.9033 10163.5234 -6202.5654 10164.4727 -6202.46 10164.6201 c-6202.3335 10164.8311 -6201.9546 10165.2109 -6201.2378 10165.7383 c-6200.4995 10166.2637 -6199.0654 10167.5723 -6199.0654 10168.8369 c-6199.0654 10170.21 -6200.1191 10171.1152 -6200.9209 10171.1152 c-6201.7007 10171.1152 -6202.6714 10170.5879 -6203.0713 10170.1025 c-6203.7041 10169.3652 -6204.3154 10168.7949 -6204.8218 10168.7949 c-6205.1592 10168.7949 -6205.3066 10169.0059 -6205.3066 10169.2168 c-6205.3066 10169.5537 -6205.0537 10169.7861 -6204.5479 10169.8281 c-6203.9575 10169.8711 -6203.8936 10170.2939 -6203.8936 10170.6289 c-6203.8936 10170.9033 -6204.4209 10171.2207 -6204.8433 10171.2207 c-6205.4751 10171.2207 -6206.2974 10170.5234 -6206.2974 10168.6904 c-6206.2974 10167.1924 -6205.0537 10166.7295 -6204.5679 10166.7295 c-6204.1265 10166.7295 -6203.4722 10166.8135 -6203.0928 10167.1504 c-6201.8066 10168.3535 -6201.1318 10168.5625 -6200.5835 10168.5625 c-6200.3721 10168.5625 -6200.2881 10168.5625 -6200.2881 10168.7109 c-6200.2881 10169.0273 -6201.0474 10169.2168 -6201.1318 10169.2383 c-6201.3423 10169.3008 -6201.5103 10169.5332 -6201.5103 10169.7441 c-6201.5103 10170.2295 -6201.2378 10170.25 -6200.8774 10170.25 c-6200.5215 10170.25 -6199.8042 10169.8916 -6199.8042 10168.6904 c-6199.8042 10167.6992 -6200.9424 10166.5391 -6201.4058 10166.3076 c-6201.7007 10166.1377 -6202.5874 10166.1602 -6202.9458 10166.1172 c-6203.6406 10166.0322 -6205.4121 10165.0859 -6205.4121 10162.5957 c-6205.4336 10161.1826 -6204.1265 10159.8555 -6203.8511 10159.666 c-6203.6826 10159.5586 -6203.5986 10159.4326 -6203.5986 10159.2637 c-6203.5986 10159.0527 -6203.6626 10156.1221 -6203.9995 10156.1221 c-6204.4424 10156.1221 -6204.5054 10156.1221 -6204.5054 10156.3135 c-6204.21 10157.4082 -6204.21 10157.6406 v-6204.21 10157.957 -6204.4424 10159.4326 -6205.3066 10159.4326 c-6205.5806 10159.4326 -6206.0449 10159.2002 -6206.0449 10158.8848 c-6206.0449 10158.5898 -6205.3486 10157.3877 -6205.3486 10157.1133 c-6205.3486 10156.6279 -6205.3921 10156.6074 -6206.0654 10155.9961 c-6206.2559 10155.8486 -6206.3193 10155.7227 -6206.3193 10155.5313 c-6206.3193 10155.3633 -6206.2134 10155.2354 -6206.0449 10155.2354 c-6205.8975 10155.2354 -6205.3281 10155.5117 -6205.2017 10155.5313 c-6205.0752 10155.5313 -6204.8433 10155.5527 -6204.6538 10155.5527 c-6204.2734 10155.5527 -6204.0845 10155.4258 -6204.0845 10155.2998 c-6204.0845 10155.0674 -6204.0845 10154.3936 -6204.9263 10152.9375 c-6205.1167 10152.6006 -6206.2974 10151.2725 -6206.2974 10150.9346 c-6206.2974 10150.7656 -6206.2134 10150.7461 -6206.1089 10150.7461 c-6205.9185 10150.7461 -6205.4966 10151.168 -6205.3706 10151.3145 c-6204.1265 10152.6426 -6203.3042 10154.0762 -6202.9238 10155.3418 c-6202.8398 10155.6582 -6202.7344 10155.5742 -6202.5654 10155.5957 c-6200.4155 10156.1016 -6198.3271 10158.6104 -6198.3271 10158.6318 c-6198.4326 10158.9053 -6198.4326 10158.9688 v-6198.4326 10159.0957 -6198.3271 10159.1172 -6198.3057 10159.1172 c-6198.2432 10159.1172 -6198.0527 10158.9053 -6198.0103 10158.9053 c-6197.9058 10158.9053 -6197.7783 10158.9902 -6197.7783 10159.1377 C-6197.8418 10159.6855 lf0 D-6201.1104 10158.1895 m-6200.5215 10158.1895 -6200.0986 10158.2949 -6199.6982 10158.5684 c-6199.6553 10158.5898 -6199.6138 10158.6104 -6199.5928 10158.6104 c-6199.5498 10158.6104 -6199.5498 10158.5898 -6199.5498 10158.5469 c-6199.5498 10158.127 -6201.4272 10156.166 -6202.5654 10156.166 c-6202.6289 10156.166 -6202.6714 10156.207 -6202.6714 10156.2695 c-6202.6714 10156.46 -6202.5874 10158.4629 -6202.2495 10158.4629 c-6202.1865 10158.4629 -6202.1016 10158.4414 -6202.0386 10158.4004 c-6201.7007 10158.2529 -6201.4902 10158.1895 -6201.1104 10158.1895 cf-6200.5835 10160.9512 m-6200.5835 10160.5293 -6200.5625 10160.0654 -6199.8662 10160.0654 c-6199.2334 10160.0654 -6198.6431 10160.7197 -6198.4961 10160.8672 c-6198.4326 10160.9092 -6198.3906 10160.9297 -6198.3486 10160.9297 c-6198.3271 10160.9297 -6198.2847 10160.8877 -6198.2847 10160.8457 c-6198.2847 10160.4023 -6199.6553 10158.7373 -6201.0049 10158.7373 c-6201.2578 10158.7373 -6202.2705 10158.9053 -6202.2705 10159.4541 c-6202.2705 10159.707 -6201.8906 10161.0781 -6201.2793 10162.1533 c-6199.9087 10164.6416 -6195.7119 10166.2002 -6193.8145 10166.2002 c-6192.9072 10166.2227 -6192.6118 10165.9063 -6192.4863 10165.8848 c-6192.4648 10165.8848 -6192.4438 10165.8643 -6192.4233 10165.8643 c-6192.3174 10165.8643 -6192.1904 10165.9277 -6192.1904 10166.0752 c-6192.1904 10166.0967 -6192.2119 10166.0967 v-6192.3594 10167.2344 -6192.4014 10167.6357 -6192.4014 10168.8994 c-6192.4014 10170.2939 -6192.4014 10170.4189 -6191.4321 10170.4189 c-6190.1455 10170.4189 -6189.8506 10169.3438 -6189.8506 10169.1113 c-6189.8506 10168.6904 -6190.4399 10168.3945 -6190.5889 10168.3945 c-6190.7358 10168.3945 -6190.9058 10168.5029 -6190.9058 10168.6904 c-6190.9058 10168.9854 -6190.9473 10169.1328 -6191.2207 10169.1328 c-6191.4951 10169.1328 -6191.4951 10168.7744 -6191.4951 10168.6689 c-6191.4951 10168.416 -6191.3896 10168.1631 -6191.1782 10168.0361 c-6190.7998 10167.7832 -6190.7998 10167.3828 -6190.7998 10167.1719 c-6190.7998 10167.0664 -6190.7998 10166.9395 -6190.8198 10166.835 c-6190.8418 10166.666 -6192.7817 10164.6201 -6193.0977 10164.6201 c-6193.2446 10164.6201 -6193.5615 10164.7666 -6194.4258 10164.7666 c-6196.5767 10164.7666 -6197.5474 10163.0391 -6197.7378 10162.5117 c-6197.9897 10161.7949 -6198.7915 10161.499 -6199.0225 10161.499 c-6199.2129 10161.499 -6199.2129 10161.543 -6199.2129 10161.9424 c-6199.2129 10162.0273 -6199.4238 10162.3633 y-6199.4238 10162.5537 -6198.3906 10162.8066 -6198.3906 10162.9961 c-6198.3906 10163.166 -6198.5801 10163.1855 -6198.7271 10163.1855 c-6198.8115 10163.1855 -6199.8882 10163.1855 -6200.3306 10162.3633 c-6200.5415 10161.9629 -6200.5835 10161.3945 -6200.5835 10160.9512 cf1 D-6196.4927 10158.6953 m-6196.4927 10158.6514 -6196.5137 10158.6318 -6196.5352 10158.6318 c-6196.5986 10158.6318 -6196.7666 10158.9688 -6196.8506 10158.9688 c-6196.9146 10158.9688 -6196.9995 10158.8848 -6197.0415 10158.7783 c-6197.0615 10158.6953 -6197.1255 10158.2305 -6197.21 10158.2305 c-6197.2524 10158.2305 -6197.4209 10158.4629 -6197.4634 10158.4629 c-6197.6104 10158.4629 -6197.7158 10158.2305 -6197.7158 10158.0215 c-6197.7158 10157.915 -6197.7783 10157.915 -6197.9263 10157.915 c-6198.5166 10157.915 -6200.1406 10155.7432 -6200.5625 10153.9922 c-6200.6055 10153.8242 -6200.5835 10153.6768 -6200.8994 10153.5703 c-6203.0713 10152.835 -6205.5176 10150.6816 -6205.5176 10150.5557 c-6205.5176 10150.4082 -6205.4336 10150.3242 -6205.3066 10150.3242 c-6205.2432 10150.3242 -6205.1592 10150.3242 -6204.6538 10150.6602 c-6203.7681 10151.252 -6201.7217 10152.5381 -6200.8994 10152.5381 c-6200.6265 10152.5381 -6200.6055 10152.1797 -6200.6055 10151.9258 c-6200.6055 10151.7354 -6200.6265 10151.5039 -6200.6265 10151.3574 c-6200.6465 10151.083 -6200.9634 10150.7656 -6200.9634 10150.5977 c-6200.9634 10150.4502 -6200.8154 10150.3447 -6200.6465 10150.3447 c-6200.4575 10150.3447 -6200.3306 10150.3662 -6200.1606 10150.5557 c-6199.8662 10150.8926 -6199.7402 10151.041 -6199.4238 10151.041 c-6199.1914 10151.041 -6198.1377 10150.3242 -6197.8838 10150.3242 c-6197.5679 10150.3242 -6197.1895 10150.8086 -6197.1895 10151.1045 c-6197.1895 10151.8418 -6198.0942 10152.4326 -6198.6431 10152.4326 c-6199.0225 10152.4326 -6199.4438 10152.3066 -6199.6353 10152.0742 c-6199.6982 10152.0098 -6199.7607 10151.9688 -6199.8242 10151.9688 c-6199.9937 10151.9688 -6200.1191 10152.4326 -6200.1191 10152.4746 c-6200.1191 10152.8975 -6197.2729 10152.96 -6196.9146 10152.96 c-6196.7666 10152.96 -6196.6401 10152.875 -6196.5352 10152.7061 c-6196.3447 10152.4121 -6195.1855 10151.1895 -6193.6255 10151.1895 c-6191.79 10151.1895 -6190.0825 10152.4521 -6190.0825 10154.3506 c-6190.0825 10154.457 -6190.1245 10155.0039 -6190.1245 10155.0264 c-6190.1245 10155.0898 -6189.0063 10156.8389 -6187.6782 10156.8389 c-6186.6245 10156.8389 -6186.2656 10156.25 -6186.2656 10155.7637 c-6186.2656 10155.5313 -6186.3711 10154.8789 -6186.8984 10154.8789 c-6187.1094 10154.8789 -6187.2144 10155.0898 -6187.2144 10155.4688 c-6187.2144 10155.5527 -6187.0039 10155.9326 -6187.0039 10156.0381 c-6187.0039 10156.0801 -6187.0239 10156.1016 -6187.0879 10156.1016 c-6187.4258 10156.1016 -6187.9521 10155.7432 -6188.1846 10155.0898 c-6188.4595 10154.373 -6188.8594 10153.6768 -6189.1958 10153.2754 c-6189.5127 10152.9189 -6189.6182 10152.3262 -6189.6182 10151.9893 c-6189.6182 10151.5039 -6189.1338 10150.3447 -6187.4878 10150.3447 c-6186.2871 10150.3447 -6185.4434 10151.083 -6185.4434 10151.6943 c-6185.4434 10152.3066 -6185.7598 10152.6855 -6186.2026 10152.6855 c-6186.6455 10152.6855 -6186.9824 10152.3477 -6186.9824 10152.0098 c-6186.9824 10151.3359 -6187.1514 10151.1895 -6187.4878 10151.1895 c-6187.6992 10151.1895 -6187.8896 10151.3145 -6187.8896 10151.6309 c-6187.8896 10151.8633 -6187.8896 10152.2422 -6186.3711 10153.5078 c-6185.8857 10153.9082 -6185.4214 10154.6055 -6185.4214 10155.3848 c-6185.4214 10156.1445 -6186.4561 10157.3447 -6187.6362 10157.3447 c-6188.8594 10157.3447 -6189.6401 10156.5654 -6190.2515 10155.8486 c-6190.5454 10155.5117 -6191.9814 10153.8242 -6192.0439 10153.8018 c-6192.2334 10153.6543 -6192.3174 10153.5293 -6192.3174 10153.4023 c-6192.3174 10153.2969 -6192.2119 10153.1914 -6192.0854 10153.1914 c-6191.8535 10153.1914 -6190.9058 10154.1406 -6190.8198 10154.1406 c-6190.7568 10154.1406 -6190.7153 10154.0762 -6190.7153 10153.9922 c-6190.7153 10153.2334 -6191.8535 10151.7578 -6193.6255 10151.7578 c-6195.1006 10151.7578 -6195.9863 10152.875 -6195.9863 10152.9189 c-6195.9863 10153.0439 -6195.8394 10153.1689 -6195.5225 10153.2334 c-6191.6426 10153.9717 -6188.3955 10157.5215 -6188.3955 10162.1377 c-6188.3955 10162.2441 -6188.2256 10162.2705 -6188.0786 10162.2705 c-6187.7202 10162.2705 -6187.0879 10162.3496 -6187.0879 10162.0762 c-6187.0879 10161.9697 -6187.1294 10161.8438 -6187.1934 10161.7168 c-6187.5518 10161.1465 -6187.8682 10160.9727 -6187.8682 10160.0215 c-6187.8682 10159.5586 -6187.4878 10159.0322 -6186.8984 10159.0322 c-6185.8657 10159.0322 -6185.4214 10160.0654 -6185.4214 10160.2969 c-6185.4214 10160.4658 -6185.5073 10160.5293 -6185.5903 10160.5293 c-6185.7178 10160.5293 -6186.2241 10160.0029 -6186.3711 10160.0029 c-6186.5615 10160.0029 -6186.7085 10160.0439 -6186.7085 10160.5293 c-6186.7085 10160.8672 -6185.4214 10164.5781 -6185.4214 10165.3789 c-6185.4214 10165.9492 -6185.7598 10166.6455 -6186.6455 10167.1504 c-6186.6875 10167.1719 -6186.7085 10167.1924 -6186.7085 10167.2344 c-6186.7085 10167.3184 -6186.5615 10167.4248 -6186.4126 10167.4658 c-6185.8018 10167.6357 -6185.4214 10167.7412 -6185.4214 10168.6904 c-6185.4214 10169.0488 -6185.7598 10169.7236 -6186.0127 10169.7236 c-6186.2026 10169.7236 -6186.2026 10169.6807 -6186.2026 10169.3223 c-6186.2026 10169.1748 -6186.2446 10169.0693 -6186.3926 10168.9639 c-6186.7085 10168.7529 -6186.7295 10168.7109 -6186.8135 10168.2266 c-6186.8774 10167.9102 -6187.0039 10167.8242 -6188.1426 10167.1924 c-6188.5854 10166.9189 -6188.6904 10166.6865 -6188.7744 10166.4551 c-6188.8594 10166.2637 -6188.9233 10166.2637 -6189.4287 10166.2637 c-6189.9561 10166.2637 -6192.5073 10163.5449 -6192.5073 10163.4189 c-6192.5073 10163.3555 -6192.3809 10163.0596 -6192.3809 10162.9961 c-6192.3809 10162.9336 -6192.4014 10162.8916 -6192.4438 10162.8916 c-6192.4863 10162.8916 -6192.6338 10163.1016 -6192.6758 10163.1016 c-6192.7817 10163.1016 -6192.7817 10162.9121 -6192.7817 10162.7637 c-6192.7817 10162.6602 -6192.5703 10162.0898 -6192.5703 10161.9424 c-6192.5703 10161.8584 -6192.5918 10161.7949 -6192.6338 10161.7949 c-6192.7178 10161.7949 -6192.9072 10162.2578 -6192.9922 10162.2578 c-6193.0342 10162.2578 -6193.0762 10162.2168 -6193.0762 10162.0898 c-6193.0762 10161.9424 -6192.8862 10161.2256 y-6192.8862 10161.1621 -6192.9072 10161.0566 -6192.9502 10161.0566 c-6193.0342 10161.0566 -6193.1826 10161.457 -6193.2666 10161.457 c-6193.3286 10161.457 -6193.3926 10161.373 -6193.3926 10161.2256 c-6193.3926 10161.1406 -6193.2446 10160.7197 -6193.2446 10160.6143 c-6193.2446 10160.5508 -6193.2666 10160.4863 -6193.3086 10160.4863 c-6193.3506 10160.4863 -6193.5835 10161.0996 -6193.7095 10161.0996 c-6193.7935 10161.0996 -6193.8994 10160.9922 -6193.8994 10160.8877 c-6193.8994 10160.8037 -6193.7729 10160.4453 -6193.7729 10160.3613 c-6193.7729 10160.3184 -6193.7729 10160.2969 -6193.7935 10160.2969 c-6193.8774 10160.2969 -6194.0254 10160.7822 -6194.1104 10160.7822 c-6194.3418 10160.7822 -6194.3623 10160.3613 -6194.3623 10160.1709 c-6194.3623 10160.0869 -6194.2998 10159.75 -6194.2998 10159.6855 c-6194.2998 10159.623 -6194.3198 10159.6016 -6194.3418 10159.6016 c-6194.4897 10159.6016 -6194.6782 10160.4023 -6194.8271 10160.4023 c-6195.0386 10160.4023 -6195.0386 10160.2129 -6195.0386 10159.9814 c-6195.0166 10159.4541 L-6195.0166 10159.4326 -6195.0386 10159.4121 y-6195.0586 10159.4121 -6195.1006 10159.4326 -6195.1226 10159.4961 c-6195.1855 10159.707 -6195.3115 10160.1289 -6195.5225 10160.1289 c-6195.6694 10160.1289 -6195.8174 10159.96 -6195.8174 10159.8135 c-6195.8174 10159.5801 -6195.7119 10159.2002 -6195.7119 10158.9688 c-6195.7119 10158.9053 -6195.7334 10158.8848 -6195.7754 10158.8848 c-6195.8608 10158.8848 -6195.9863 10159.3262 -6196.0278 10159.4121 c-6196.0918 10159.4961 -6196.1553 10159.5176 -6196.2192 10159.5176 c-6196.5352 10159.5176 -6196.5352 10159.2002 -6196.5352 10159.0527 C-6196.4927 10158.6953 lf0 D-6197.8633 10154.3301 m-6197.8633 10154.0977 -6199.8042 10153.9082 -6199.8662 10153.9082 c-6199.9722 10153.9082 -6200.0352 10153.9717 -6200.0352 10154.0762 c-6200.0352 10154.9414 -6198.2847 10157.1768 -6197.8633 10157.1768 c-6197.7998 10157.1768 -6197.7783 10157.1563 -6197.7783 10157.0928 c-6198.2002 10155.8486 -6198.2002 10155.5957 v-6198.2002 10155.2158 -6198.0942 10154.9629 -6197.9058 10154.541 c-6197.8838 10154.457 -6197.8633 10154.3936 -6197.8633 10154.3301 cf-6189.1338 10165.7793 m-6188.9858 10165.7793 -6188.4795 10165.2744 -6188.3325 10165.2744 c-6188.2065 10165.2744 -6188.0791 10165.3584 -6188.0791 10165.5059 c-6188.0791 10165.5898 -6188.2695 10166.0322 -6188.2695 10166.1377 c-6188.2695 10166.4961 -6187.8896 10166.7939 -6187.5098 10166.7939 c-6187.1094 10166.7939 -6185.9702 10166.4756 -6185.9702 10165.2529 c-6185.9702 10164.1563 -6186.3926 10164.1563 -6188.0366 10164.1563 c-6188.3955 10164.1563 -6190.0615 10164.3457 -6190.3145 10164.3457 c-6190.4399 10164.3457 -6190.4834 10164.1768 -6190.4834 10164.0498 c-6190.4834 10164.0088 -6190.4834 10163.9668 -6190.4614 10163.9453 c-6190.3984 10163.5664 -6190.1675 10163.0176 -6190.1675 10162.6377 c-6190.1675 10158.1895 -6194.2998 10154.3301 -6196.7666 10154.3301 c-6197.4209 10154.3301 -6197.6519 10155.1318 -6197.6519 10155.5527 c-6197.6519 10157.2822 -6195.6694 10158.3145 -6195.4175 10158.3145 c-6195.3545 10158.3145 -6195.3335 10158.2949 -6195.3335 10158.2529 c-6195.3335 10158.21 -6195.3545 10158.1689 -6195.3975 10158.127 c-6195.5225 10157.957 -6196.0498 10157.3447 -6196.0498 10156.7129 c-6196.0498 10156.375 -6195.7554 10155.9326 -6194.9951 10155.9326 c-6193.7305 10155.9326 -6193.1826 10157.2822 -6193.1826 10157.6406 c-6193.1826 10157.7891 -6193.2446 10157.999 -6193.4561 10157.999 c-6193.6035 10157.999 -6194.0049 10157.3447 -6194.1519 10157.3447 c-6194.2158 10157.3447 -6194.4473 10157.4717 -6194.5103 10157.4717 c-6194.5942 10157.4717 -6194.6582 10157.4512 -6194.7422 10157.4512 c-6194.8057 10157.4512 -6194.8481 10157.5137 -6194.8481 10157.6191 c-6194.8481 10157.9785 -6194.3623 10158.5469 -6193.8774 10158.8008 c-6192.9722 10159.2637 -6191.6226 10160.5928 -6191.6226 10162.0479 c-6191.6226 10162.4688 -6191.6846 10162.8701 -6191.6846 10163.207 c-6191.6846 10163.7559 -6190.7568 10164.6201 -6189.8081 10165.5059 c-6189.6401 10165.6533 -6189.3862 10165.7793 -6189.1338 10165.7793 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-6180.9722 10175.5 m-6180.9722 10149.4727 L-6207 10149.4727 L-6207 10175.5 L-6180.9722 10175.5 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-6189.6455 10162.4893 m-6180.9736 10162.4893 lS-6193.9839 10175.5 m-6193.9839 10166.8242 lS0.64 0.650477 0.701045 0.510735 K1.125 w-6189.7202 10158.1504 m-6180.9727 10158.1504 lS-6198.3232 10175.5 m-6198.3232 10166.1455 lS0.7084 0.636438 0.515526 0.381872 K-6189.6504 10175.5 m-6189.6504 10173.0869 l-6186.9937 10172.8633 -6185.3096 10171.1602 v-6183.6064 10169.4336 -6183.3774 10166.8281 y-6180.9727 10166.8281 lS*u0 O0.7084 0.636438 0.515526 0.381872 k1 w-6197.7783 10159.1377 m-6197.7783 10158.9902 -6197.9058 10158.9053 -6198.0103 10158.9053 c-6198.0527 10158.9053 -6198.2432 10159.1172 -6198.3057 10159.1172 c-6198.3271 10159.1172 -6198.4326 10159.0957 -6198.4326 10158.9688 c-6198.4326 10158.9053 -6198.3271 10158.6318 y-6198.3271 10158.6104 -6200.4155 10156.1016 -6202.5654 10155.5957 c-6202.7344 10155.5742 -6202.8398 10155.6582 -6202.9238 10155.3418 c-6203.3042 10154.0762 -6204.1265 10152.6426 -6205.3706 10151.3145 c-6205.4966 10151.1689 -6205.9185 10150.7461 -6206.1089 10150.7461 c-6206.2134 10150.7461 -6206.2974 10150.7656 -6206.2974 10150.9346 c-6206.2974 10151.2725 -6205.1167 10152.6006 -6204.9263 10152.9375 c-6204.0845 10154.3936 -6204.0845 10155.0674 -6204.0845 10155.2998 c-6204.0845 10155.4258 -6204.2734 10155.5527 -6204.6538 10155.5527 c-6204.8433 10155.5527 -6205.0752 10155.5313 -6205.2017 10155.5313 c-6205.3281 10155.5117 -6205.8975 10155.2354 -6206.0449 10155.2354 c-6206.2134 10155.2354 -6206.3193 10155.3633 -6206.3193 10155.5313 c-6206.3193 10155.7227 -6206.2559 10155.8486 -6206.0654 10155.9961 c-6205.3921 10156.6074 -6205.3486 10156.6279 -6205.3486 10157.1133 c-6205.3486 10157.3877 -6206.0449 10158.5898 -6206.0449 10158.8848 c-6206.0449 10159.2002 -6205.5806 10159.4326 -6205.3066 10159.4326 c-6204.4424 10159.4326 -6204.21 10157.957 -6204.21 10157.6406 c-6204.21 10157.4082 -6204.5054 10156.3135 y-6204.5054 10156.1221 -6204.4424 10156.1221 -6203.9995 10156.1221 c-6203.6626 10156.1221 -6203.5986 10159.0527 -6203.5986 10159.2637 c-6203.5986 10159.4326 -6203.6826 10159.5586 -6203.8511 10159.666 c-6204.1265 10159.8555 -6205.4336 10161.1826 -6205.4121 10162.5957 c-6205.4121 10165.0859 -6203.6406 10166.0322 -6202.9458 10166.1172 c-6202.5874 10166.1602 -6201.7007 10166.1377 -6201.4058 10166.3076 c-6200.9424 10166.5391 -6199.8042 10167.6992 -6199.8042 10168.6904 c-6199.8042 10169.8916 -6200.5215 10170.25 -6200.8774 10170.25 c-6201.2378 10170.25 -6201.5103 10170.2295 -6201.5103 10169.7441 c-6201.5103 10169.5332 -6201.3423 10169.3008 -6201.1318 10169.2383 c-6201.0474 10169.2168 -6200.2881 10169.0273 -6200.2881 10168.7109 c-6200.2881 10168.5625 -6200.3721 10168.5625 -6200.5835 10168.5625 c-6201.1318 10168.5625 -6201.8066 10168.3535 -6203.0928 10167.1504 c-6203.4722 10166.8135 -6204.1265 10166.7295 -6204.5679 10166.7295 c-6205.0537 10166.7295 -6206.2974 10167.1924 -6206.2974 10168.6904 c-6206.2974 10170.5234 -6205.4751 10171.2207 -6204.8433 10171.2207 c-6204.4209 10171.2207 -6203.8936 10170.9033 -6203.8936 10170.6289 c-6203.8936 10170.2939 -6203.9575 10169.8711 -6204.5479 10169.8281 c-6205.0537 10169.7861 -6205.3066 10169.5537 -6205.3066 10169.2168 c-6205.3066 10169.0059 -6205.1592 10168.7949 -6204.8218 10168.7949 c-6204.3154 10168.7949 -6203.7041 10169.3652 -6203.0713 10170.1025 c-6202.6714 10170.5879 -6201.7007 10171.1152 -6200.9209 10171.1152 c-6200.1191 10171.1152 -6199.0654 10170.21 -6199.0654 10168.8369 c-6199.0654 10167.5723 -6200.4995 10166.2637 -6201.2378 10165.7383 c-6201.9546 10165.2109 -6202.3335 10164.8311 -6202.46 10164.6201 c-6202.5654 10164.4727 -6202.9033 10163.5234 -6203.1143 10163.5234 c-6203.2607 10163.5234 -6203.3672 10163.6914 -6203.3672 10163.9033 c-6203.3672 10164.2197 -6203.1143 10164.8535 -6202.7759 10165.1895 c-6202.6929 10165.2949 -6202.6494 10165.3584 -6202.6494 10165.4209 c-6202.6494 10165.5693 -6202.8398 10165.5898 -6202.9873 10165.5898 c-6203.5767 10165.5898 -6204.7793 10164.6201 -6204.7793 10162.7861 c-6204.7793 10161.2041 -6203.7881 10160.3613 -6203.6406 10160.3613 c-6203.5361 10160.3613 -6203.4297 10160.4658 -6203.3672 10160.6777 c-6201.6592 10166.835 -6196.7822 10168.0576 -6194.3774 10168.0576 c-6194.2729 10168.0576 -6194.1895 10168.1201 -6194.1895 10168.2695 c-6194.1895 10168.3945 -6194.1895 10169.4922 -6194.3359 10169.4922 c-6194.3774 10169.4922 -6194.4414 10169.4697 -6194.5264 10169.4072 c-6195.0942 10168.9434 -6195.3755 10168.5859 -6196.3022 10168.5859 c-6196.7666 10168.5859 -6197.5679 10169.1113 -6197.5679 10169.7236 c-6197.5679 10170.5029 -6196.8936 10171.2207 -6196.4082 10171.2207 c-6196.0498 10171.2207 -6195.9023 10171.1357 -6195.9023 10171.0098 c-6195.9023 10170.8818 -6196.3662 10170.4404 -6196.3662 10170.2939 c-6196.3662 10170.0391 -6196.3242 10169.8916 -6195.8809 10169.8916 c-6195.4814 10169.8916 -6194.7842 10170.0615 -6194.3418 10170.3145 c-6193.8774 10170.5879 -6192.7393 10171.2207 -6191.7065 10171.2207 c-6190.9473 10171.2207 -6189.9561 10170.7773 -6189.4702 10169.9766 c-6189.4287 10169.9121 -6189.3862 10169.8916 -6189.3447 10169.8916 c-6189.2393 10169.8916 -6189.1543 10169.9766 -6189.1338 10170.125 c-6189.0913 10170.5234 -6188.7534 10171.2207 -6187.9312 10171.2207 c-6187.3408 10171.2207 -6186.8135 10170.7139 -6186.8135 10170.2705 c-6186.8135 10170.1025 -6186.9194 10170.0391 -6187.0239 10170.0391 c-6187.1094 10170.0391 -6187.4878 10170.2939 -6187.5942 10170.2939 c-6187.7407 10170.2939 -6188.6479 10169.6807 -6188.7334 10169.5332 c-6189.5127 10168.2471 -6189.5977 10168.0996 -6190.2295 10167.8457 c-6190.3984 10167.7617 -6190.3984 10167.6777 -6190.3984 10166.8135 c-6190.3984 10166.6865 -6190.3984 10166.3906 -6190.5454 10166.2227 c-6190.8198 10165.9492 -6192.9287 10163.8818 -6193.1392 10163.8818 c-6193.2241 10163.8818 -6193.4985 10164.1563 -6193.5835 10164.1563 c-6193.6035 10164.1563 -6193.6255 10164.1563 -6193.6255 10164.1143 C-6193.6035 10163.9668 l-6193.6035 10163.7988 -6193.6455 10163.7129 -6193.8564 10163.7129 c-6193.9199 10163.7129 -6194.1943 10163.8398 -6194.2568 10163.8398 c-6194.3198 10163.8398 -6194.3623 10163.3975 -6194.4473 10163.3975 c-6194.4678 10163.3975 -6194.8057 10163.6289 -6194.8896 10163.6289 c-6195.0166 10163.6289 -6195.1006 10163.5449 -6195.1006 10163.4395 c-6195.1006 10163.3779 -6195.1006 10162.8916 -6195.2065 10162.8916 c-6195.2915 10162.8916 -6195.5225 10163.1855 -6195.5654 10163.1855 c-6195.5854 10163.1855 -6195.5854 10163.166 -6195.5854 10163.1016 C-6195.5439 10162.6807 l-6195.5439 10162.6162 -6195.5854 10162.5957 -6195.6494 10162.5957 c-6195.7119 10162.5957 -6195.9658 10162.9121 -6196.0498 10162.9121 c-6196.0918 10162.9121 -6196.1138 10162.8701 -6196.1138 10162.7861 c-6196.1138 10162.7441 -6195.9233 10162.0273 -6195.9233 10161.8789 c-6195.9233 10161.7949 -6195.9658 10161.7529 -6196.0078 10161.7529 c-6196.0918 10161.7529 -6196.4297 10162.1113 -6196.4722 10162.1113 c-6196.4927 10162.1113 -6196.4927 10162.1113 -6196.4927 10162.0898 c-6196.4927 10162.0059 -6196.3882 10161.6465 -6196.3882 10161.6279 c-6196.3882 10161.6055 -6196.4082 10161.585 -6196.4297 10161.585 c-6196.4722 10161.585 -6196.6826 10161.7949 -6196.7446 10161.7949 c-6196.7666 10161.7949 -6196.7666 10161.7949 -6196.7666 10161.7529 c-6196.7666 10161.585 -6196.5137 10160.8457 -6196.5137 10160.7822 c-6196.5137 10160.7607 -6196.5352 10160.7402 -6196.5562 10160.7402 c-6196.6826 10160.7402 -6197.1055 10161.3105 -6197.1465 10161.3105 c-6197.1675 10161.3105 -6197.1675 10161.2891 -6197.1675 10161.2256 c-6197.1675 10161.0352 -6196.8936 10160.1289 y-6196.8936 10160.1074 -6196.9146 10160.0869 -6196.9351 10160.0869 c-6197.0615 10160.0869 -6197.4414 10160.6338 -6197.5049 10160.6338 c-6197.5264 10160.6338 -6197.5264 10160.6338 -6197.5264 10160.5928 c-6197.2729 10159.6855 -6197.2729 10159.6016 v-6197.2729 10159.4961 -6197.3154 10159.4541 -6197.3994 10159.4541 c-6197.4634 10159.4541 -6197.6943 10159.791 -6197.7783 10159.791 c-6197.8218 10159.791 -6197.8418 10159.75 -6197.8418 10159.6855 c-6197.7783 10159.1377 Lf1 D-6202.0386 10158.4004 m-6202.1016 10158.4414 -6202.1865 10158.4629 -6202.2495 10158.4629 c-6202.5874 10158.4629 -6202.6714 10156.46 -6202.6714 10156.2695 c-6202.6714 10156.207 -6202.6289 10156.166 -6202.5654 10156.166 c-6201.4272 10156.166 -6199.5498 10158.1279 -6199.5498 10158.5469 c-6199.5498 10158.5898 -6199.5498 10158.6104 -6199.5928 10158.6104 c-6199.6138 10158.6104 -6199.6553 10158.5898 -6199.6982 10158.5684 c-6200.0986 10158.2949 -6200.5215 10158.1895 -6201.1104 10158.1895 c-6201.4902 10158.1895 -6201.7007 10158.2529 -6202.0386 10158.4004 cf-6200.3306 10162.3633 m-6199.8882 10163.1855 -6198.8115 10163.1855 -6198.7271 10163.1855 c-6198.5801 10163.1855 -6198.3906 10163.166 -6198.3906 10162.9961 c-6198.3906 10162.8066 -6199.4238 10162.5537 -6199.4238 10162.3633 c-6199.2129 10162.0273 -6199.2129 10161.9424 v-6199.2129 10161.5439 -6199.2129 10161.5 -6199.0225 10161.5 c-6198.7915 10161.5 -6197.9897 10161.7949 -6197.7378 10162.5117 c-6197.5474 10163.0391 -6196.5767 10164.7666 -6194.4258 10164.7666 c-6193.5615 10164.7666 -6193.2446 10164.6201 -6193.0977 10164.6201 c-6192.7817 10164.6201 -6190.8418 10166.666 -6190.8198 10166.835 c-6190.7998 10166.9395 -6190.7998 10167.0664 -6190.7998 10167.1719 c-6190.7998 10167.3828 -6190.7998 10167.7832 -6191.1782 10168.0361 c-6191.3896 10168.1631 -6191.4951 10168.416 -6191.4951 10168.6689 c-6191.4951 10168.7744 -6191.4951 10169.1328 -6191.2207 10169.1328 c-6190.9473 10169.1328 -6190.9058 10168.9854 -6190.9058 10168.6904 c-6190.9058 10168.5029 -6190.7358 10168.3945 -6190.5889 10168.3945 c-6190.4399 10168.3945 -6189.8506 10168.6904 -6189.8506 10169.1113 c-6189.8506 10169.3438 -6190.1455 10170.4189 -6191.4321 10170.4189 c-6192.4014 10170.4189 -6192.4014 10170.2939 -6192.4014 10168.8994 c-6192.4014 10167.6357 -6192.3594 10167.2344 -6192.2119 10166.0967 c-6192.1904 10166.0967 -6192.1904 10166.0752 y-6192.1904 10165.9277 -6192.3174 10165.8643 -6192.4233 10165.8643 c-6192.4438 10165.8643 -6192.4648 10165.8848 -6192.4863 10165.8848 c-6192.6118 10165.9063 -6192.9072 10166.2227 -6193.8145 10166.2002 c-6195.7119 10166.2002 -6199.9087 10164.6416 -6201.2793 10162.1533 c-6201.8906 10161.0781 -6202.2705 10159.707 -6202.2705 10159.4541 c-6202.2705 10158.9053 -6201.2578 10158.7373 -6201.0049 10158.7373 c-6199.6553 10158.7373 -6198.2847 10160.4023 -6198.2847 10160.8457 c-6198.2847 10160.8877 -6198.3271 10160.9297 -6198.3486 10160.9297 c-6198.3906 10160.9297 -6198.4326 10160.9092 -6198.4961 10160.8672 c-6198.6431 10160.7197 -6199.2334 10160.0654 -6199.8662 10160.0654 c-6200.5625 10160.0654 -6200.5835 10160.5293 -6200.5835 10160.9512 c-6200.5835 10161.3945 -6200.5415 10161.9629 -6200.3306 10162.3633 cf0 D-6196.5352 10159.0527 m-6196.5352 10159.2002 -6196.5352 10159.5176 -6196.2192 10159.5176 c-6196.1553 10159.5176 -6196.0918 10159.4961 -6196.0278 10159.4121 c-6195.9863 10159.3262 -6195.8608 10158.8848 -6195.7754 10158.8848 c-6195.7334 10158.8848 -6195.7119 10158.9053 -6195.7119 10158.9688 c-6195.7119 10159.2002 -6195.8174 10159.5801 -6195.8174 10159.8135 c-6195.8174 10159.96 -6195.6694 10160.1289 -6195.5225 10160.1289 c-6195.3115 10160.1289 -6195.1855 10159.707 -6195.1226 10159.4961 c-6195.1006 10159.4326 -6195.0586 10159.4121 -6195.0386 10159.4121 c-6195.0166 10159.4326 -6195.0166 10159.4541 V-6195.0386 10159.9814 l-6195.0386 10160.2129 -6195.0386 10160.4023 -6194.8271 10160.4023 c-6194.6782 10160.4023 -6194.4897 10159.6016 -6194.3418 10159.6016 c-6194.3198 10159.6016 -6194.2998 10159.623 -6194.2998 10159.6855 c-6194.2998 10159.75 -6194.3623 10160.0869 -6194.3623 10160.1709 c-6194.3623 10160.3613 -6194.3418 10160.7822 -6194.1104 10160.7822 c-6194.0254 10160.7822 -6193.8774 10160.2969 -6193.7935 10160.2969 c-6193.7729 10160.2969 -6193.7729 10160.3184 -6193.7729 10160.3613 c-6193.7729 10160.4453 -6193.8994 10160.8037 -6193.8994 10160.8877 c-6193.8994 10160.9922 -6193.7935 10161.0996 -6193.7095 10161.0996 c-6193.5835 10161.0996 -6193.3506 10160.4863 -6193.3086 10160.4863 c-6193.2666 10160.4863 -6193.2446 10160.5508 -6193.2446 10160.6143 c-6193.2446 10160.7197 -6193.3926 10161.1406 -6193.3926 10161.2256 c-6193.3926 10161.373 -6193.3286 10161.457 -6193.2666 10161.457 c-6193.1826 10161.457 -6193.0342 10161.0566 -6192.9502 10161.0566 c-6192.9072 10161.0566 -6192.8862 10161.1621 -6192.8862 10161.2256 c-6193.0762 10161.9424 -6193.0762 10162.0898 v-6193.0762 10162.2168 -6193.0342 10162.2578 -6192.9922 10162.2578 c-6192.9072 10162.2578 -6192.7178 10161.7949 -6192.6338 10161.7949 c-6192.5918 10161.7949 -6192.5703 10161.8584 -6192.5703 10161.9424 c-6192.5703 10162.0898 -6192.7817 10162.6602 -6192.7817 10162.7637 c-6192.7817 10162.9121 -6192.7817 10163.1016 -6192.6758 10163.1016 c-6192.6338 10163.1016 -6192.4863 10162.8916 -6192.4438 10162.8916 c-6192.4014 10162.8916 -6192.3809 10162.9336 -6192.3809 10162.9961 c-6192.3809 10163.0596 -6192.5073 10163.3555 -6192.5073 10163.4189 c-6192.5073 10163.5449 -6189.9561 10166.2637 -6189.4287 10166.2637 c-6188.9233 10166.2637 -6188.8594 10166.2637 -6188.7744 10166.4551 c-6188.6904 10166.6865 -6188.5854 10166.9189 -6188.1426 10167.1924 c-6187.0039 10167.8242 -6186.8774 10167.9102 -6186.8135 10168.2266 c-6186.7295 10168.7109 -6186.7085 10168.7529 -6186.3926 10168.9639 c-6186.2446 10169.0693 -6186.2026 10169.1748 -6186.2026 10169.3223 c-6186.2026 10169.6807 -6186.2026 10169.7236 -6186.0127 10169.7236 c-6185.7598 10169.7236 -6185.4214 10169.0488 -6185.4214 10168.6904 c-6185.4214 10167.7412 -6185.8018 10167.6357 -6186.4126 10167.4658 c-6186.5615 10167.4248 -6186.7085 10167.3184 -6186.7085 10167.2344 c-6186.7085 10167.1924 -6186.6875 10167.1719 -6186.6455 10167.1504 c-6185.7598 10166.6455 -6185.4214 10165.9492 -6185.4214 10165.3789 c-6185.4214 10164.5781 -6186.7085 10160.8672 -6186.7085 10160.5293 c-6186.7085 10160.0439 -6186.5615 10160.0029 -6186.3711 10160.0029 c-6186.2241 10160.0029 -6185.7178 10160.5293 -6185.5903 10160.5293 c-6185.5073 10160.5293 -6185.4214 10160.4658 -6185.4214 10160.2969 c-6185.4214 10160.0654 -6185.8657 10159.0322 -6186.8984 10159.0322 c-6187.4878 10159.0322 -6187.8682 10159.5586 -6187.8682 10160.0215 c-6187.8682 10160.9727 -6187.5518 10161.1465 -6187.1934 10161.7168 c-6187.1294 10161.8438 -6187.0879 10161.9697 -6187.0879 10162.0762 c-6187.0879 10162.3496 -6187.7202 10162.2705 -6188.0786 10162.2705 c-6188.2256 10162.2705 -6188.3955 10162.2441 -6188.3955 10162.1377 c-6188.3955 10157.5215 -6191.6426 10153.9717 -6195.5225 10153.2334 c-6195.8394 10153.1689 -6195.9863 10153.0439 -6195.9863 10152.9189 c-6195.9863 10152.875 -6195.1006 10151.7578 -6193.6255 10151.7578 c-6191.8535 10151.7578 -6190.7153 10153.2334 -6190.7153 10153.9922 c-6190.7153 10154.0762 -6190.7568 10154.1406 -6190.8198 10154.1406 c-6190.9058 10154.1406 -6191.8535 10153.1914 -6192.0854 10153.1914 c-6192.2119 10153.1914 -6192.3174 10153.2969 -6192.3174 10153.4023 c-6192.3174 10153.5293 -6192.2334 10153.6543 -6192.0439 10153.8018 c-6191.9814 10153.8242 -6190.5454 10155.5117 -6190.2515 10155.8486 c-6189.6401 10156.5654 -6188.8594 10157.3447 -6187.6362 10157.3447 c-6186.4561 10157.3447 -6185.4214 10156.1445 -6185.4214 10155.3848 c-6185.4214 10154.6055 -6185.8857 10153.9082 -6186.3711 10153.5078 c-6187.8896 10152.2422 -6187.8896 10151.8633 -6187.8896 10151.6309 c-6187.8896 10151.3145 -6187.6992 10151.1895 -6187.4878 10151.1895 c-6187.1514 10151.1895 -6186.9824 10151.3359 -6186.9824 10152.0098 c-6186.9824 10152.3477 -6186.6455 10152.6855 -6186.2026 10152.6855 c-6185.7598 10152.6855 -6185.4434 10152.3066 -6185.4434 10151.6943 c-6185.4434 10151.085 -6186.2871 10150.3447 -6187.4878 10150.3447 c-6189.1338 10150.3447 -6189.6182 10151.5039 -6189.6182 10151.9893 c-6189.6182 10152.3262 -6189.5127 10152.9189 -6189.1958 10153.2754 c-6188.8594 10153.6768 -6188.4595 10154.373 -6188.1846 10155.0898 c-6187.9521 10155.7432 -6187.4258 10156.1016 -6187.0879 10156.1016 c-6187.0239 10156.1016 -6187.0039 10156.0801 -6187.0039 10156.0381 c-6187.0039 10155.9326 -6187.2144 10155.5527 -6187.2144 10155.4688 c-6187.2144 10155.0898 -6187.1094 10154.8789 -6186.8984 10154.8789 c-6186.3711 10154.8789 -6186.2656 10155.5313 -6186.2656 10155.7637 c-6186.2656 10156.25 -6186.6245 10156.8389 -6187.6782 10156.8389 c-6189.0063 10156.8389 -6190.1245 10155.0898 -6190.1245 10155.0264 c-6190.1245 10155.0039 -6190.0825 10154.457 -6190.0825 10154.3506 c-6190.0825 10152.4521 -6191.79 10151.1895 -6193.6255 10151.1895 c-6195.1855 10151.1895 -6196.3447 10152.4121 -6196.5352 10152.7061 c-6196.6401 10152.875 -6196.7666 10152.96 -6196.9146 10152.96 c-6197.2729 10152.96 -6200.1191 10152.8975 -6200.1191 10152.4746 c-6200.1191 10152.4326 -6199.9937 10151.9688 -6199.8242 10151.9688 c-6199.7607 10151.9688 -6199.6982 10152.0098 -6199.6353 10152.0742 c-6199.4438 10152.3066 -6199.0225 10152.4326 -6198.6431 10152.4326 c-6198.0942 10152.4326 -6197.1895 10151.8418 -6197.1895 10151.1045 c-6197.1895 10150.8086 -6197.5679 10150.3242 -6197.8838 10150.3242 c-6198.1377 10150.3242 -6199.1914 10151.041 -6199.4238 10151.041 c-6199.7402 10151.041 -6199.8662 10150.8926 -6200.1606 10150.5557 c-6200.3306 10150.3662 -6200.4575 10150.3447 -6200.6465 10150.3447 c-6200.8154 10150.3447 -6200.9634 10150.4502 -6200.9634 10150.5977 c-6200.9634 10150.7656 -6200.6465 10151.085 -6200.6265 10151.3574 c-6200.6265 10151.5039 -6200.6055 10151.7354 -6200.6055 10151.9258 c-6200.6055 10152.1797 -6200.6265 10152.5381 -6200.8994 10152.5381 c-6201.7217 10152.5381 -6203.7681 10151.2529 -6204.6538 10150.6602 c-6205.1592 10150.3242 -6205.2432 10150.3242 -6205.3066 10150.3242 c-6205.4336 10150.3242 -6205.5176 10150.4082 -6205.5176 10150.5557 c-6205.5176 10150.6816 -6203.0713 10152.835 -6200.8994 10153.5703 c-6200.5835 10153.6768 -6200.6055 10153.8242 -6200.5625 10153.9922 c-6200.1406 10155.7432 -6198.5166 10157.916 -6197.9263 10157.916 c-6197.7783 10157.916 -6197.7158 10157.916 -6197.7158 10158.0215 c-6197.7158 10158.2305 -6197.6104 10158.4629 -6197.4634 10158.4629 c-6197.4209 10158.4629 -6197.2524 10158.2305 -6197.21 10158.2305 c-6197.1255 10158.2305 -6197.0615 10158.6953 -6197.0415 10158.7783 c-6196.9995 10158.8848 -6196.9146 10158.9688 -6196.8506 10158.9688 c-6196.7666 10158.9688 -6196.5986 10158.6318 -6196.5352 10158.6318 c-6196.5137 10158.6318 -6196.4927 10158.6514 -6196.4927 10158.6953 c-6196.5352 10159.0527 Lf1 D-6197.9058 10154.541 m-6198.0942 10154.9629 -6198.2002 10155.2158 -6198.2002 10155.5957 c-6198.2002 10155.8486 -6197.7783 10157.0928 y-6197.7783 10157.1563 -6197.7998 10157.1768 -6197.8633 10157.1768 c-6198.2847 10157.1768 -6200.0352 10154.9414 -6200.0352 10154.0762 c-6200.0352 10153.9717 -6199.9722 10153.9082 -6199.8662 10153.9082 c-6199.8042 10153.9082 -6197.8633 10154.0977 -6197.8633 10154.3301 c-6197.8633 10154.3936 -6197.8838 10154.457 -6197.9058 10154.541 cf-6189.8081 10165.5059 m-6190.7568 10164.6201 -6191.6846 10163.7559 -6191.6846 10163.207 c-6191.6846 10162.8701 -6191.6226 10162.4688 -6191.6226 10162.0479 c-6191.6226 10160.5928 -6192.9722 10159.2637 -6193.8774 10158.8008 c-6194.3623 10158.5469 -6194.8481 10157.9785 -6194.8481 10157.6191 c-6194.8481 10157.5137 -6194.8057 10157.4512 -6194.7422 10157.4512 c-6194.6582 10157.4512 -6194.5942 10157.4717 -6194.5103 10157.4717 c-6194.4473 10157.4717 -6194.2158 10157.3447 -6194.1519 10157.3447 c-6194.0049 10157.3447 -6193.6035 10158 -6193.4561 10158 c-6193.2446 10158 -6193.1826 10157.7891 -6193.1826 10157.6406 c-6193.1826 10157.2822 -6193.7305 10155.9326 -6194.9951 10155.9326 c-6195.7554 10155.9326 -6196.0498 10156.375 -6196.0498 10156.7129 c-6196.0498 10157.3447 -6195.5225 10157.957 -6195.3975 10158.1279 c-6195.3545 10158.1689 -6195.3335 10158.21 -6195.3335 10158.2529 c-6195.3335 10158.2949 -6195.3545 10158.3145 -6195.4175 10158.3145 c-6195.6694 10158.3145 -6197.6519 10157.2822 -6197.6519 10155.5527 c-6197.6519 10155.1318 -6197.4209 10154.3301 -6196.7666 10154.3301 c-6194.2998 10154.3301 -6190.1675 10158.1895 -6190.1675 10162.6377 c-6190.1675 10163.0176 -6190.3984 10163.5664 -6190.4614 10163.9453 c-6190.4834 10163.9668 -6190.4834 10164.0088 -6190.4834 10164.0498 c-6190.4834 10164.1768 -6190.4399 10164.3457 -6190.3145 10164.3457 c-6190.0615 10164.3457 -6188.3955 10164.1563 -6188.0366 10164.1563 c-6186.3926 10164.1563 -6185.9702 10164.1563 -6185.9702 10165.2529 c-6185.9702 10166.4756 -6187.1094 10166.7939 -6187.5098 10166.7939 c-6187.8896 10166.7939 -6188.2695 10166.4961 -6188.2695 10166.1377 c-6188.2695 10166.0322 -6188.0791 10165.5898 -6188.0791 10165.5059 c-6188.0791 10165.3584 -6188.2065 10165.2744 -6188.3325 10165.2744 c-6188.4795 10165.2744 -6188.9858 10165.7793 -6189.1338 10165.7793 c-6189.3862 10165.7793 -6189.6401 10165.6533 -6189.8081 10165.5059 cf*UU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Ovalado/ Adobe Calligrap) -(hic Brush Tool/ 5 pt. Ovalado/ Adobe Calligraphic Brush Tool/ ) -(Plano 5 pt./ Adobe Calligraphic Brush Tool/ Redondo 3 pt./ Ado) -(be Calligraphic Brush Tool/ Redondo 7 pt./ Adobe Calligraphic ) -(Brush Tool/ Redondo 15 pt./ Adobe ArtOnPath Brush Tool/ Carbon) -(cillo/ Adobe ArtOnPath Brush Tool/ Trazo ahusado/ Adobe ArtOnP) -(ath Brush Tool/ Radio floral/ Adobe PatternOnPath Brush Tool/ ) -(Pincel de flecha roja / Adobe PatternOnPath Brush Tool/ G\227tico) -(/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Ovalado)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Ovalado)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Plano 5 pt.)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Redondo 15 pt.)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Redondo 3 pt.)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Redondo 7 pt.)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Carboncillo)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Radio floral)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Trazo ahusado)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(G\627tico)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Pincel de flecha roja )(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registro]) 0 Xs([Registro])Pc0 0 0 0 k(Blanco)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 1 1 0 k(Rojo CMYK)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0 0 0.11 k(K=11)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Capa 1) Ln0 A1 Ap0 D0 O0 J 0 j 1 w 4 M []0 d0 XR3969.5 306.7227 m1 306.7227 L1 3967.5 L3969.5 3967.5 L3969.5 306.7227 LBb0 0 0 0 Bh1 (Unnamed gradient 8) 1985.25 2137.1113 0 1908.8701 1 0 0 1 0 0 Bg1908.8701 0 0 -1908.8701 1985.25 2137.1113 Bmf0 BB0 Ap1 D0 g799.9912 3398.5659 m824.7612 3422.876 870.4609 3462.5542 828.9526 3495.6099 c789.4282 3527.0864 747.624 3472.4595 722.231 3447.0479 c706.168 3430.9736 690.7881 3414.2285 675.9863 3396.9888 c660.3525 3378.7793 647.6279 3377.2773 634.2207 3399.3994 c611.0889 3437.5708 613.8423 3482.9175 615.2451 3525.668 c616.8203 3573.6875 618.4468 3621.7734 620.6426 3669.7627 c622.3145 3706.3076 610.0137 3764.416 558.5781 3742.7603 c527.9839 3729.8789 531.9297 3683.3735 530.1494 3656.5503 c526.6382 3603.7061 526.7329 3549.9927 521.0586 3497.3628 C505.252 3542.667 498.7642 3593.5596 487.1401 3640.2471 c481.1675 3664.2358 474.9082 3688.1563 468.0601 3711.9092 c462.5161 3731.1563 456.4336 3747.0044 434.2109 3750.6919 c415.4722 3753.8008 393.0454 3745.0996 385.3271 3726.7607 c374.5938 3701.2476 388.3354 3676.9404 393.7681 3652.2075 c405.4395 3599.0693 416.9712 3545.9004 429.0879 3492.8613 C406.0244 3536.2764 380.9307 3578.5664 357.9224 3622.0176 c341.3936 3653.8271 301.5991 3701.3462 267.7236 3655.6523 c240.814 3619.3564 290.3066 3557.9019 307.0396 3525.3906 c318.8408 3502.4624 330.5918 3479.5098 342.3306 3456.5503 c346.458 3448.4785 366.0903 3421.2944 362.6045 3410.7803 C351.0513 3413.9189 340.5977 3423.9526 330.4058 3429.9312 c316.3628 3438.1675 302.019 3445.8784 287.686 3453.5957 c271.6064 3462.2534 254.9497 3470.4629 239.6958 3480.5381 c226.8135 3489.0469 214.0791 3499.4971 198.0815 3500.9736 c169.6431 3503.5928 146.7686 3473.2314 152.7134 3446.4771 c158.8105 3419.0327 197.7695 3402.0957 219.207 3387.7319 c246.9814 3369.1221 274.3052 3348.9868 303.396 3332.5044 c333.124 3315.6626 338.7446 3291.9487 353.4644 3262.4434 c368.4106 3232.4824 384.584 3203.0146 399.146 3172.8896 c410.0171 3150.4019 390.4561 3114.2676 387.0869 3091.1533 c378.4341 3031.792 451.4316 3028.3369 491.6973 3016.6357 c517.6685 3009.0874 555.4136 2990.4385 582.1255 3004.2412 c602.061 3014.5435 608.1021 3048.7222 614.5894 3067.6064 c624.1948 3095.5684 636.4312 3122.5298 647.9282 3149.7568 c660.1929 3178.7988 669.5967 3212.3208 686.7329 3238.8174 c704.498 3266.2842 729.2852 3288.5908 746.2622 3316.6167 c764.0278 3345.9419 775.0483 3374.0796 799.9912 3398.5659 cF/BBAccumRotation (0.000000) XT1592.3506 3517.1221 m1560.9849 3517.1221 1547.1875 3487.1812 1537.9424 3461.5059 c1525.8828 3428.0127 1515.3184 3394.002 1502.9404 3360.5928 C1512.418 3419.4092 1524.2793 3477.8057 1535.376 3536.3281 c1542.4707 3573.7383 1560.999 3653.9126 1495.1924 3645.957 c1451.3311 3640.6553 1452.6177 3579.9976 1446.2139 3547.5 c1434.7339 3489.2568 1422.3799 3430.9863 1412.2764 3372.4912 C1416.0225 3455.5293 1412.3506 3539.5146 1412.3506 3622.6348 c1412.3506 3634.2363 1412.3506 3645.8384 1412.3506 3657.4395 c1412.3506 3693.7725 1354.2051 3698.3594 1334.7197 3677.5454 c1322.0425 3664.0029 1322.8252 3642.5615 1322.9375 3625.2959 c1323.0996 3600.0664 1323.5283 3574.8301 1323.7549 3549.5996 c1324.2607 3493.2412 1325.498 3436.8721 1324.2158 3380.5156 C1311.918 3444.1133 1297.3779 3507.4912 1286.4941 3571.3359 c1280.2539 3607.9385 1263.6299 3669.6904 1211.7207 3640.1011 c1189.7168 3627.5596 1190.1699 3598.1738 1192.8086 3576.3008 c1197.0034 3541.5449 1204.2827 3507.04 1208.9609 3472.2861 c1218.5439 3401.1172 1228.7607 3330.0273 1237.4429 3258.7412 C1223.0166 3286.8535 1211.356 3316.3906 1197.6025 3344.8496 c1187.8486 3365.0342 1178.7441 3395.168 1154.3271 3401.8438 c1133.1797 3407.624 1101.7852 3395.5254 1096.5068 3372.3887 c1090.6401 3346.6787 1110.665 3312.019 1119.5225 3288.6816 c1159.6582 3182.9258 1192.0977 3029.5464 1321.8906 3003.4492 c1443.9756 2978.9014 1573.9404 3065.5635 1571.252 3196.1211 c1570.6733 3224.2378 1565.6221 3252.5977 1572.9336 3280.2871 c1581.7705 3313.7461 1596.6177 3345.6567 1607.3672 3378.5439 c1618.4639 3412.4912 1664.5342 3517.1221 1592.3506 3517.1221 cF/BBAccumRotation (0.000000) XT1868.8594 3449.6846 m1915.7051 3403.1846 1944.8857 3347.4038 1953.0303 3281.9053 c1961.3369 3215.1484 1990.1221 3154.0557 1993.7266 3086.3848 c1994.5791 3070.353 1993.1074 3018.2124 1997.1104 3012.4648 c2003.3008 3003.5776 2025.2188 3002.0088 2034.8604 3000.5996 c2055.1445 2997.6392 2132.916 3000.4131 2151.2363 3001.9375 c2171.8389 3003.6523 2173.0264 3009.2148 2171.6201 3029.0264 c2169.2148 3062.9404 2171.9814 3097.4316 2168.2871 3131.1631 c2165.666 3155.1045 2186.3037 3165.6182 2203.4355 3178.9487 c2214.1377 3187.2773 2224.4775 3195.8965 2234.6768 3204.835 c2246.4561 3215.1621 2262.4766 3223.4385 2272.0957 3235.79 c2291.2686 3260.4111 2298.8779 3288.3125 2327.21 3305.5381 c2337.8594 3312.0146 2352.1934 3312.4268 2362.0557 3318.8408 c2373.751 3326.4473 2360.0029 3351.124 2353.623 3358.6895 c2339.7158 3375.1797 2317.5869 3373.9707 2299.1064 3366.7734 c2283.7178 3360.7813 2269.6387 3351.4678 2256.6475 3341.3926 c2244.6045 3332.0532 2229.2354 3315.9287 2212.7871 3315.9268 c2154.8662 3315.9268 2193.0967 3473.6567 2197.4395 3501.8301 c2202.4912 3534.5957 2219.4102 3623.7656 2167.7402 3632.7139 c2122.3271 3640.5771 2131.5459 3483.4648 2115.3252 3457.2871 C2110.249 3475.4868 2113.9307 3500.0278 2113.7764 3518.9189 c2113.5986 3540.9956 2113.7373 3563.1123 2111.9619 3585.1357 c2109.8213 3611.6641 2102.6846 3670.1958 2064.9971 3670.1958 c2007.2236 3670.1958 2054.2549 3478.4805 2043.4053 3444.7563 C2033.8613 3458.8877 2031.7422 3481.9717 2027.4004 3498.2139 c2021.3027 3521.0347 2015.7773 3544.0205 2008.6973 3566.5664 c2001.208 3590.417 1991.3994 3631.9307 1959.8193 3631.9307 c1898.2324 3631.9307 1979.1191 3442.0049 1982.1729 3415.3911 C1946.3604 3435.7295 1930.2681 3479.7305 1896.292 3501.499 c1886.5215 3507.7588 1852.9307 3517.4688 1848.2964 3500.0088 c1842.7915 3479.2744 1855.0024 3463.4326 1868.8594 3449.6846 cF/BBAccumRotation (0.000000) XT2819.7939 2999.29 m2898.7656 2999.29 2979.9258 3046.8672 3014.959 3118.5928 c3041.5547 3173.0444 3030.2178 3237.5366 3030.2178 3296.3091 c3030.2178 3338.77 3030.2178 3381.2319 3030.2178 3423.6934 c3030.2178 3441.0942 3030.1592 3459.1118 3023.2451 3475.4136 c3010.7959 3504.7671 2965.0615 3506.7227 2948.5322 3467.6064 C2948.5322 3496.0195 2950.2236 3540.8896 2948.5586 3569.2231 c2947.4297 3588.4277 2942.9209 3610.9224 2923.7314 3620.0591 c2905.8662 3628.5659 2878.8994 3624.8599 2867.3975 3607.7124 C2866.1494 3636.6328 2856.3174 3662.5811 2823.9873 3665.3828 c2787.8242 3668.5195 2775.9131 3635.8364 2774.5498 3605.0015 C2762.3896 3624.4189 2731.0625 3630.2168 2712.9043 3617.1504 c2694.0186 3603.5596 2692.085 3576.4487 2691.7051 3555.2622 c2690.6553 3496.7197 2693.625 3436.0532 2694.5449 3377.4941 C2683.2344 3394.5659 2656.2295 3402.6572 2637.4043 3397.2285 c2615.5713 3390.9316 2610.1797 3369.9243 2608.9443 3349.6958 c2607.3721 3323.9487 2611.3037 3298.3184 2611.1006 3272.5884 c2610.8896 3245.5176 2609.2236 3218.4561 2611.1631 3191.4102 c2618.8662 3083.8442 2712.8896 2999.29 2819.7939 2999.29 cF/BBAccumRotation (0.000000) XT*u3677.5342 1012.0107 m3677.0381 1094.2314 3671.0303 1177.4912 3676.083 1259.7041 c3677.6787 1285.792 3677.541 1314.3115 3655.6475 1332.4268 c3636.6426 1348.1514 3608.4717 1351.4736 3585.6865 1342.7529 c3523.0771 1318.79 3551.9971 1234.9189 3548.5996 1185.3193 C3535.9043 1186.8252 3522.7734 1184.8408 3510.9561 1180.0322 c3498.9209 1175.1396 3487.3555 1158.7822 3476.1953 1161.4482 c3463.7549 1164.4209 3450.6025 1163.2314 3438.6426 1158.8486 c3425.6836 1154.0967 3412.665 1135.9717 3401.2256 1138.7979 c3376.4248 1144.9229 3348.3213 1134.6416 3332.8516 1114.4189 c3315.6055 1091.874 3321.7891 1061.8975 3321.7891 1035.626 c3321.7891 983.2432 3314.5342 928.5635 3337.9805 879.7607 c3364.5664 824.4189 3420.4775 786.7148 3481.3438 780.7617 c3538.9053 775.1318 3596.4385 798.7607 3634.1455 842.501 c3676.1768 891.2588 3677.9033 950.7373 3677.5342 1012.0107 cf/BBAccumRotation (0.000000) XT0 D3597.5801 880.6689 m3557.1338 829.917 3480.165 821.1475 3426.6445 856.0479 c3368.002 894.2822 3368.8604 975.7002 3371.665 1038.0068 c3372.2471 1050.9443 3371.2217 1076.4189 3381.6299 1086.8525 c3391.2598 1096.5107 3402.8662 1056.7842 3410.8252 1052.5928 c3422.3643 1046.5146 3439.4756 1049.9619 3445.6465 1062.0322 c3451.7295 1073.9268 3447.1709 1087.6162 3448.8701 1100.2002 c3449.9961 1108.5264 3458.3838 1112.4229 3466.168 1109.6553 c3472.2197 1107.5068 3472.8594 1089.5518 3476.3848 1084.0127 c3489.1475 1063.9443 3518.0811 1071.7705 3523.0908 1093.1104 c3525.5439 1103.5615 3520.3232 1141.7783 3540.8848 1132.8994 c3547.2559 1130.1494 3548.5713 1111.1494 3553.1777 1105.3525 c3560.9863 1095.5322 3575.6572 1092.9092 3586.7539 1099.0225 c3608.8711 1111.208 3600.5957 1158.7451 3600.46 1179.4619 c3600.2549 1210.8037 3600.0186 1242.1416 3601.2568 1273.4717 c3601.6426 1283.2217 3600.3164 1298.0283 3613.7549 1296.7119 c3621.7217 1295.9307 3623.5674 1290.5557 3624.1299 1283.165 c3626.5469 1251.3701 3623.7588 1218.3467 3624.2227 1186.3955 c3624.7939 1147.126 3625.5439 1107.8564 3625.7666 1068.5791 c3626.0928 1010.3115 3636.6035 929.6221 3597.5801 880.6689 cf/BBAccumRotation (0.000000) XT*U/BBAccumRotation (0.000000) XT*u1 D677.1265 1047.5322 m676.6304 1129.751 668.8472 1213.0107 673.8994 1295.2227 c675.4966 1321.3115 677.1338 1349.8311 655.2393 1367.9473 c636.2354 1383.6709 606.7656 1389.8301 585.2783 1378.2715 c541.7769 1354.8711 551.5898 1268.6631 548.1924 1219.0635 C535.4966 1220.5693 522.3662 1220.3613 510.5479 1215.5537 c498.5127 1210.6582 486.9482 1192.5264 475.7881 1195.1914 c463.3472 1198.165 450.1953 1198.7529 438.2354 1194.3682 c425.2764 1189.6182 412.2578 1169.7158 400.8179 1172.541 c376.0171 1178.667 347.9131 1170.1621 332.4443 1149.9385 c315.1978 1127.3936 321.3828 1097.417 321.3828 1071.1465 c321.3828 1018.7637 314.1274 928.5635 337.5728 879.7607 c364.1587 824.4199 420.0693 786.7148 480.9355 780.7617 c538.4971 775.1318 596.0313 798.7607 633.7383 842.502 c675.7705 891.2588 677.4961 986.2588 677.1265 1047.5322 cf/BBAccumRotation (0.000000) XT*U/BBAccumRotation (0.000000) XT*u3749.5684 3463.8867 m3710.2715 3498.5547 3674.0645 3446.873 3644.6348 3427.1514 C3644.9551 3479.2236 3647.127 3531.4033 3649.4521 3583.4277 c3651.1094 3620.4932 3661.4004 3669.8037 3643.6123 3704.2388 c3623.7891 3742.6113 3570.3086 3719.3799 3562.1377 3684.3369 c3556.4424 3659.9063 3558.1484 3632.6523 3556.208 3607.6606 c3553.8301 3577.0352 3551.5645 3546.3975 3548.8359 3515.7998 C3543.4395 3563.3281 3538.748 3611.001 3534.5664 3658.6504 c3531.6719 3691.6162 3529.6582 3734.4287 3488.1943 3738.2598 c3434.5869 3743.2129 3439.9287 3683.7266 3443.7578 3647.5957 c3449.2168 3596.1064 3455.293 3544.6816 3460.0908 3493.123 C3448.6455 3536.2461 3436.1094 3579.4854 3426.458 3623.0352 c3418.7129 3657.9727 3401.2148 3693.4316 3357.5908 3675.9287 c3315.7422 3659.1396 3335.126 3615.4248 3343.7129 3583.5723 c3355.3242 3540.4658 3371.0342 3498.3994 3378.5342 3454.2578 C3364.0713 3477.3818 3350.6816 3501.1543 3336.5557 3524.4824 c3325.8516 3542.1572 3314.4473 3567.0801 3294.4238 3576.1396 c3276.04 3584.458 3252.1924 3574.8203 3241.5527 3558.4443 c3228.6641 3538.6064 3241.542 3513.6406 3250.207 3494.876 c3290.2686 3407.8271 3316.5566 3314.4678 3349.1416 3224.5112 c3356.3545 3204.5957 3363.7617 3184.7373 3371.8867 3165.1738 c3374.6055 3158.6299 3377.3955 3146.3955 3383.7559 3142.3076 c3392.2754 3136.834 3409.2705 3141.6348 3418.4785 3142.1343 c3471.7607 3145.0234 3525.0244 3148.2813 3578.2832 3151.5605 c3591.1846 3152.3545 3631.999 3147.8906 3639.8496 3159.5107 c3650.6504 3175.4912 3658.0537 3193.8877 3665.2686 3211.6748 c3684.6631 3259.5 3699.9893 3309.208 3722.5146 3355.7231 c3736.5879 3384.791 3784.7705 3432.8296 3749.5684 3463.8867 cf/BBAccumRotation (0.000000) XT3566.1289 3124.8516 m3535.9297 3122.9854 3505.7344 3121.0771 3475.541 3119.1143 c3448.3594 3117.3447 3421.1826 3115.5293 3394.0078 3113.6543 c3373.2188 3112.2197 3362.8789 3112.2046 3362.8789 3090.8545 C3362.8789 3041.9346 L3362.8789 3033.4746 3359.9863 3019.0571 3362.8789 3010.9844 C3362.8789 2994.373 3400.9424 3000.3291 3410.3477 3000.3291 C3675.5195 3000.3291 L3717.3516 3000.3291 3667.6631 3107.4697 3660.25 3123.7275 c3653.1885 3139.2432 3581.8711 3125.8262 3566.1289 3124.8516 cf/BBAccumRotation (0.000000) XT*U/BBAccumRotation (0.000000) XT2643.8994 1867.2051 m2689.9189 1867.2051 2735.9346 1867.2051 2781.9531 1867.2051 c2803.4521 1867.2051 2824.4941 1866.2539 2845.9844 1865.3506 c2868.5234 1864.4053 2881.3662 1869.21 2893.9844 1888.1504 c2908.0908 1909.3281 2921.0449 1931.8232 2933.084 1954.2295 c2958.6211 2001.749 2975.8623 2051.7485 2993.5518 2102.5049 c3012.1797 2155.9517 3035.1514 2207.5972 3061.209 2257.8076 c3069.752 2274.2646 3082.5625 2305.2148 3063.041 2318.646 c3042.6992 2332.644 3017.8936 2323.8354 2999.9189 2310.3174 c2981.2813 2296.2998 2966.373 2275.085 2951.9121 2256.8848 c2937.9844 2239.3564 2935.4014 2216.8047 2927.7568 2196.3833 C2923.0508 2261.9849 2920.2285 2327.7129 2917.0449 2393.4004 c2915.4512 2426.23 2913.8203 2459.0576 2911.8867 2491.8682 c2910.0088 2523.7241 2911.2246 2556.4663 2905.5254 2587.9492 c2901.8691 2608.1406 2892.5732 2633.7764 2868.0898 2633.7764 c2840.1035 2633.7764 2830.2529 2609.2881 2827.5664 2585.5 c2820.457 2522.5742 2826.2197 2456.7559 2824.707 2393.4326 c2824.0156 2364.5234 2822.9473 2335.6289 2821.3564 2306.7568 c2820.0156 2282.502 2814.7148 2286.1821 2813.9854 2308.0605 c2813.1074 2334.5332 2811.96 2361.0078 2810.9922 2387.4795 c2810.1367 2410.9082 2810.7178 2437.124 2801.4102 2458.9551 c2794.6592 2474.7881 2778.3428 2486.4678 2760.8193 2480.415 c2744.0488 2474.6206 2737.2871 2454.6675 2733.8096 2438.9912 c2728.5361 2415.2319 2727.5098 2390.603 2726.834 2366.3579 c2726.1953 2343.3994 2731.0879 2311.2832 2723.1143 2289.2993 C2705.8096 2325.9668 2736.9697 2471.125 2667.9277 2462.6978 c2637.3555 2458.9663 2634.8311 2421.7188 2633.2588 2397.6855 c2631.0195 2363.4912 2637.1084 2324.6465 2626.2539 2291.6855 C2614.9824 2324.5522 2633.1396 2408.3594 2589.2754 2422.6084 c2530.4189 2441.7256 2541.7813 2317.3491 2542.3984 2289.8276 c2544.0361 2216.4253 2538.6875 2142.8442 2553.4756 2070.4004 c2560.9365 2033.853 2572.3926 1998.1973 2587.1357 1963.9453 c2594.3828 1947.1094 2602.4063 1930.6074 2611.0664 1914.4521 c2616.5195 1904.2783 2630.624 1867.2051 2643.8994 1867.2051 cF/BBAccumRotation (0.000000) XT2305.6162 2197.5034 m2305.6162 2220.3359 2310.4629 2246.3154 2301.2539 2268.0674 c2290.7725 2292.8135 2261.3184 2302.4839 2236.96 2293.1221 c2208.834 2282.3145 2204.8184 2254.0986 2205.1475 2227.4463 c2205.3594 2210.1538 2213.2695 2171.4316 2199.8105 2157.4932 c2182.6484 2139.7109 2179.2344 2186.8311 2179.0723 2192.2583 c2178.4551 2213.0073 2179.8389 2233.7637 2179.8389 2254.5137 c2179.8389 2279.2583 2179.8389 2304.0029 2179.8389 2328.748 c2179.8389 2389.9873 2182.5703 2451.8955 2180.8867 2513.0737 c2180.3467 2532.7168 2178.6943 2555.415 2166.4111 2571.708 c2152.2432 2590.4985 2120.9805 2593.3594 2101.7285 2580.9321 c2079.3008 2566.4541 2078.9053 2534.3564 2078.7734 2510.6538 c2078.6016 2478.7793 2079.1348 2446.8877 2079.6172 2415.0171 C2067.96 2436.2168 2043.4453 2444.4268 2020.8525 2436.1724 c1998.9063 2428.1567 1991.7012 2403.7085 1988.9492 2382.7314 C1977.3867 2399.7295 1955.7441 2407.7012 1935.8447 2402.8037 c1910.3857 2396.5381 1899.2334 2373.1211 1897.5073 2348.8281 C1883.1152 2368.6626 1853.2583 2374.8291 1831.915 2363.083 c1813.8496 2353.1377 1808.0225 2334.1855 1806.6035 2314.9531 c1802.5713 2260.3125 1806.7559 2203.7402 1806.2759 2148.8643 c1805.3184 2039.4019 1859.4922 1931.5186 1962.7939 1885.0039 c2048.0771 1846.6006 2146.1221 1865.7461 2214.1094 1928.6621 c2246.9277 1959.0313 2271.7285 1997.6006 2287.127 2039.4961 c2306.2168 2091.4326 2305.6162 2143.0137 2305.6162 2197.5034 cF/BBAccumRotation (0.000000) XT3715.1992 2301.7578 m3703.668 2332.0029 3658.8115 2342.1191 3639.1699 2314.3564 C3639.1699 2339.7905 3638.5977 2365.2871 3639.3594 2390.7104 c3640.1191 2415.9624 3643.8594 2447.6655 3619.2852 2463.4351 c3597.8105 2477.2119 3565.9238 2471.3857 3554.1348 2447.7168 C3549.9346 2473.6909 3529.1699 2492.3262 3501.8984 2485.6279 c3468.2188 2477.3594 3465.1816 2445.8291 3466.2324 2416.6255 C3456.5967 2434.5796 3434.9277 2442.2285 3415.7695 2435.5518 c3391.7607 2427.1855 3383.8164 2405.4492 3383.6357 2381.9199 c3383.4424 2356.895 3384.6328 2331.7637 3384.6328 2306.7129 c3384.6328 2281.999 3384.6328 2257.2852 3384.6328 2232.5742 c3384.6328 2213.6641 3388.5801 2193.4951 3384.875 2174.8105 c3382.793 2164.3081 3371.7451 2153.7764 3367.582 2143.582 c3362.5625 2131.2808 3358.9219 2118.436 3356.4922 2105.3818 C3340.2666 2125.4155 3320.2793 2143.6865 3301.8955 2161.7217 c3285.7314 2177.4731 3267.8008 2191.2432 3244.0889 2182.6475 c3224.1641 2175.4248 3211.4463 2153.8936 3214.3574 2132.9082 c3217.877 2107.5361 3243.6475 2087.5234 3260.334 2070.2432 c3294 2035.3789 3329.0586 2001.9141 3362.9307 1967.2588 c3396.0537 1933.3721 3429.0273 1894.0273 3474.4297 1876.4658 c3568.0371 1840.2549 3669.0605 1895.5918 3704.1191 1985.7539 c3724.5029 2038.1821 3720.3467 2097.4199 3719.1836 2152.5322 c3718.6299 2178.877 3718.9629 2205.0195 3719.8047 2231.3472 c3720.5186 2253.6729 3723.3516 2280.3691 3715.1992 2301.7578 cF/BBAccumRotation (0.000000) XT2974.2988 1239.7979 m2948.6553 1243.4092 2919.623 1231.0127 2900.4082 1214.501 c2881.1992 1197.9932 2870.9082 1173.4551 2851.7256 1157.2461 C2838.4756 1173.3604 2848.748 1207.2031 2851.7813 1225.7393 c2855.877 1250.7559 2859.4873 1275.8584 2862.752 1300.998 c2870.998 1364.4951 2880.9229 1432.0098 2873.0234 1495.9922 c2870.4482 1516.8564 2865.252 1542.874 2846.7139 1555.79 c2826.3691 1569.9629 2800.0371 1560.3779 2790.6074 1538.6406 c2778.1328 1509.8877 2785.8652 1475.5264 2784.668 1445.1943 c2783.1172 1405.9053 2774.6113 1366.9424 2765.833 1328.748 C2761.9863 1378.3965 2758.9609 1428.2129 2758.4902 1478.0225 c2758.2021 1508.6494 2766.7578 1553.7637 2742.4854 1577.9014 c2729.3066 1591.002 2704.877 1597.4209 2690.4561 1582.8486 c2678.3594 1570.624 2676.2373 1550.6563 2674.9766 1534.4287 c2671.0918 1484.4873 2672.8955 1433.6338 2670.6445 1383.5166 C2662.5293 1423.2344 2658.915 1459.1338 2656.9775 1499.4883 c2655.6445 1527.2383 2642.6133 1561.3809 2608.7109 1554.8916 c2568.9277 1547.2764 2574.7578 1488.918 2574.7197 1459.5703 c2574.6426 1410.5615 2577.5313 1361.5908 2583.0283 1312.8936 C2568.501 1341.9248 2563.291 1369.0752 2558.5508 1400.7842 c2554.9658 1424.7471 2547.4238 1459.1953 2517.959 1462.0596 c2449.2383 1468.7354 2485.5 1348.708 2493.5088 1317.7588 c2502.5488 1282.7646 2508.1191 1252.3311 2525.9453 1220.4082 c2543.4111 1189.123 2528.0693 1155.333 2528.0215 1121.7598 c2527.9307 1050.4902 2552.1699 985.4297 2574.124 918.792 C2567.625 889.252 2564.3867 858.9248 2560.3047 828.9844 c2555.6055 794.5078 2612.5723 789.7813 2638.0527 785.5859 c2674.3018 779.6182 2711.4219 778.6123 2748.0186 781.4854 c2760.876 782.4971 2787.4316 780.5977 2796.1113 792.1484 c2804.8047 803.7197 2796.9912 831.7842 2797.998 846.0039 c2801.6055 896.9082 2826.5488 964.9092 2867.9502 996.2432 c2917.6309 1033.8457 2925.7939 1107.958 2973.7246 1147.0254 c2991.0752 1161.168 3017.3027 1155.4121 3021.002 1184.1514 c3024.2471 1209.4131 2998.4619 1236.3965 2974.2988 1239.7979 cF/BBAccumRotation (0.000000) XT2207.6689 1247.5625 m2179.7871 1267.8857 2126.1436 1242.71 2097.3135 1233.7813 c2056.2236 1221.0547 2014.9551 1209.8799 1973.3379 1199.0146 c1948.1455 1192.4375 1879.377 1183.0918 1874.2549 1151.8535 c1873.3564 1144.8965 1873.0791 1137.9131 1873.4248 1130.9053 c1873.7148 1115.5918 1863.3564 1117.8359 1850.8887 1111.9736 c1837.8545 1105.8428 1838.6729 1078.9229 1838.0459 1066.8203 C1839.3379 1062.1348 1836.6514 1059.9209 1829.9883 1060.1797 C1821.2588 1056.3623 1818.4482 1044.582 1817.3877 1036.2598 c1816.333 1027.9814 1816.6533 1019.623 1816.7549 1011.3076 C1810.6348 1007.9453 1805.5859 1002.8945 1801.5049 997.2803 c1780.4248 968.2949 1773.3916 926.4375 1762.1748 892.8184 c1752.1729 862.8389 1730.6514 821.543 1768.0039 801.2256 c1802.667 782.3682 1824.4541 812.0762 1832.8623 842.5508 C1877.3018 821.876 1894.29 868.9502 1896.0107 904.2383 c1896.5361 915.0527 1896.29 925.9033 1895.6172 936.707 c1894.4756 955.0371 1907.5752 954.1807 1924.4131 954.1807 c1940.3896 954.1807 1954.0742 949.4736 1953.5488 931.3877 c1952.3174 889.2012 1914.8438 853.3232 1921.1836 810.3477 c1924.5088 787.7988 1943.6689 777.2832 1965.2773 780.5117 c1987.0605 783.7715 1999.9053 810.374 2009.04 827.5068 c2032.2012 870.9385 2056.3633 913.8428 2080.0557 956.9893 c2099.4346 992.2832 2115.0166 1044.9609 2152.4912 1064.7627 c2172.5615 1075.3643 2194.9297 1081.0166 2215.8545 1089.6348 c2244.2021 1101.3115 2252.6025 1106.8779 2250.751 1138.2344 c2248.5498 1175.4824 2240.1357 1223.8906 2207.6689 1247.5625 cF/BBAccumRotation (0.000000) XT1610.8848 898.8701 m1546.0127 917.7578 1476.5215 939.1982 1420.5273 975.7832 c1396.8584 991.2471 1376.1226 1008.4932 1345.7217 1010.8379 c1310.3213 1013.5664 1274.4868 1000.4365 1240.0112 994.8164 c1205.0654 989.1211 1169.4546 990.6436 1134.5776 985.2061 c1119.2349 982.8145 1103.1025 978.5088 1091.6675 968.2871 C1076.1406 977.0313 1053.1943 979.4326 1035.7559 983.6982 c1002.918 991.7305 970.5742 1006.877 936.0654 1006.877 c905.6885 1006.877 866.4639 990.8115 876.3516 956.4443 c883.3633 932.0732 916.5313 924.168 938.7871 916.1143 c975.4131 902.8594 1010.8857 884.1445 1045.1323 866.4209 c1061.0293 858.1943 1076.7412 849.6689 1092.3057 840.9238 c1106.6958 832.8379 1120.7061 820.6143 1137.9385 818.125 c1171.4092 813.2949 1211.1182 823.6729 1245.0845 824.8838 c1308.1152 827.1357 1383.4312 829.2793 1437.04 793.9551 c1451.3608 784.5195 1462.249 776.6846 1480.001 781.3047 c1494.5654 785.0977 1509.0146 789.3203 1523.0918 794.4453 c1552.1348 805.0166 1580.1514 819.8232 1600.0879 842.3457 c1610.1641 853.7295 1639.0156 890.6807 1610.8848 898.8701 cF/BBAccumRotation (0.000000) XT1464.4419 2298.5103 m1417.5576 2298.5103 1389.5527 2266.543 1365.3643 2230.4355 C1365.3643 2302.9141 1365.3643 2375.3926 1365.3643 2447.8716 c1365.3643 2479.4111 1374.5894 2519.9375 1360.3145 2549.4922 c1345.8301 2579.4805 1305.3804 2585.4102 1279.7852 2566.3701 c1249.9946 2544.209 1255.6992 2496.5918 1256.3325 2464.0371 c1257.1123 2423.9502 1258.9941 2383.9331 1258.9941 2343.8291 C1232.5684 2373.7715 1172.4565 2348.5352 1168.6689 2311.0508 C1136.2192 2347.6392 1091.165 2309.3838 1086.3623 2273.2344 C1075.3008 2285.6025 1044.5728 2268.7676 1036.1753 2260.2383 c1019.9224 2243.7324 1014.8057 2218.8267 1012.791 2196.6016 c1008.75 2152.0107 1018.145 2105.9902 1022.8457 2061.5996 c1027.5898 2016.8115 1034.0371 1969.8936 1051.4746 1928.0195 c1068.7842 1886.457 1104.6055 1873.1611 1147.4805 1868.1201 c1198.9736 1862.0674 1249.8994 1865.5732 1300.0537 1878.4102 c1359.5674 1893.6436 1377.9795 1941.0547 1395.0986 1995.5518 c1413.7041 2054.7744 1434.2476 2113.333 1461.5273 2169.1904 c1478.249 2203.4287 1547.1533 2298.5103 1464.4419 2298.5103 cF/BBAccumRotation (0.000000) XT*u642.2368 2413.1045 m628.9385 2413.1045 617.3633 2402.1396 605.2061 2406.5264 c592.3916 2411.1528 578.2563 2417.1055 564.668 2416.0894 c552.3188 2415.168 547.0034 2408.1572 535.5156 2412.8477 c523.3931 2417.7959 491.8418 2420.75 478.9009 2419.7583 C478.9009 2460.7158 484.3369 2489.9536 474.5972 2529.7764 c467.6353 2558.2412 458.1489 2579.332 425.2778 2578.793 c385.3032 2578.1348 380.7554 2540.0068 379.9282 2505.3828 c378.4111 2441.8525 379.8115 2378.1553 379.8115 2314.6084 C365.1738 2315.0205 332.2471 2316.8848 332.2471 2298.5664 c332.2471 2283.6489 332.2471 2268.7319 332.2471 2253.8164 c332.2471 2224.667 332.9785 2195.4141 332.2471 2166.2729 c332.2471 2131.3887 346.8555 2113.5342 376.481 2090.3164 c386.8706 2082.1719 399.6143 2074.3779 408.1543 2064.3042 C410.9956 2043.6606 408.9736 2022.6455 407.2036 2002.0068 c404.5327 1970.8574 399.7974 1933.5186 418.9102 1906.25 c433.9697 1884.7686 460.1445 1875.5889 484.8374 1869.6357 c536.0361 1857.2949 586.7266 1872.2744 623.8013 1897.7949 c652.1665 1917.3213 647.2588 1955.3105 645.0586 1987.6328 c642.9639 2018.4434 637.7109 2061.7188 656.0693 2089.291 c662.4067 2098.8076 681.3433 2107.7363 688.2344 2116.8418 c700.2856 2132.7627 698.1865 2144.5903 698.3799 2163.7231 c698.7314 2198.5293 700.1616 2233.3867 700.9702 2268.187 c702.1899 2320.7485 721.2559 2413.1045 642.2368 2413.1045 cF/BBAccumRotation (0.000000) XT*U/BBAccumRotation (0.000000) XT1 Ap0 D3969.5 -1 m1 -1 L1 402.7041 L3969.5 402.7041 L3969.5 -1 LBb1 (Unnamed gradient 24) 1 200.8516 0 3968.5 1 0 0 1 0 0 Bg3968.5 0 0 -407.7041 1 404.7041 Xm6211 0 0 -407.7041 -6210 404.7041 Bc3968.5 0 0 -407.7041 1 404.7041 Bm6211 0 0 -407.7041 3969.5 404.7041 Bcf0 BB*uu0 Ap1 D0 0 0 1 k2432.0898 166.3398 m2432.0898 179.5869 2443.4453 208.2129 2443.4453 227.374 c2443.4453 246.3008 2432.3262 254.1064 2417.1855 254.1064 c2409.8516 254.1064 2399.4434 252.2148 2389.5068 240.8584 C2392.1094 253.1602 L2358.0439 253.1602 L2351.3438 221.5586 L2344.749 218.8125 2338.0391 216.9658 2332.4961 216.9658 c2331.7861 216.9658 2330.8389 216.9658 2329.8926 217.4385 C2329.8926 242.2783 2319.957 255.2891 2299.6123 255.2891 c2250.8779 255.2891 2234.792 198.5127 2234.792 171.3076 c2234.792 170.6738 2234.8096 170.0576 2234.8262 169.4424 C2230.5059 161.6738 2223.8711 156.4033 2216.8125 156.4033 c2210.1895 156.4033 2207.1133 158.5332 2207.1133 165.1563 c2207.1133 167.2861 2207.3506 169.6514 2208.0605 172.7266 C2225.0928 253.1602 L2191.0273 253.1602 L2174.9414 177.2217 L2174.9395 177.2207 2174.9395 177.2197 2174.9395 177.2178 C2171.3906 165.3906 2162.875 156.4033 2153.6494 156.4033 c2147.0264 156.4033 2143.9502 158.5332 2143.9502 165.1563 c2143.9502 167.2861 2144.1875 169.6514 2144.8975 172.7266 C2160.0371 243.6973 L2174.2314 243.6973 L2176.124 253.1602 L2161.9297 253.1602 L2169.9727 290.5381 L2134.9609 285.8066 L2127.8633 253.1602 L2120.0566 253.1602 L2118.165 243.6973 L2125.9707 243.6973 L2111.7773 177.2217 L2111.7764 177.2197 2111.7764 177.2188 2111.7754 177.2178 C2099.9492 163.7354 2088.5938 153.3281 2069.9082 153.3281 c2058.5527 153.3281 2052.874 157.1133 2052.874 173.2002 c2052.874 199.46 2068.251 242.752 2083.1553 242.752 c2087.6504 242.752 2089.7793 238.9658 2089.7793 233.0518 c2089.7793 229.0313 2088.833 224.2988 2086.9404 219.0947 C2089.7793 217.2021 2092.6182 216.2559 2095.2207 216.2559 c2102.0801 216.2559 2107.7578 221.9336 2107.7578 233.5254 c2107.7578 244.4072 2102.5527 255.2891 2081.498 255.2891 c2035.0371 255.2891 2018.9121 202.1455 2017.9121 173.8379 C2007.1172 162.0361 1996.1582 153.3281 1979.0674 153.3281 c1967.7119 153.3281 1962.0347 157.1133 1962.0347 173.2002 c1962.0347 176.0391 1962.271 179.3516 1962.5078 182.6621 C1990.8965 184.3193 2016.9189 205.374 2016.9189 232.5791 c2016.9189 244.4072 2011.9512 255.2891 1990.8965 255.2891 c1942.3994 255.2891 1927.022 198.2764 1927.022 171.0703 c1927.022 170.6582 1927.0361 170.2617 1927.043 169.8584 C1922.7295 161.8643 1915.9893 156.4033 1908.8066 156.4033 c1902.1831 156.4033 1899.1074 158.5332 1899.1074 165.1563 c1899.1074 167.2861 1899.3442 169.6514 1900.0537 172.7266 C1927.2593 300.4746 L1892.2471 295.7432 L1866.9341 177.2217 L1866.9336 177.2207 1866.9336 177.2197 1866.9336 177.2178 C1863.3838 165.3906 1854.8691 156.4033 1845.6436 156.4033 c1839.0195 156.4033 1835.9443 158.5332 1835.9443 165.1563 c1835.9443 167.2861 1836.1807 169.6514 1836.8906 172.7266 C1864.0957 300.4746 L1829.0835 295.7432 L1813.248 221.5977 L1806.624 218.8301 1799.8779 216.9658 1794.3091 216.9658 c1793.5996 216.9658 1792.6528 216.9658 1791.707 217.4385 C1791.707 242.2783 1781.7705 255.2891 1761.4258 255.2891 c1713.46 255.2891 1697.1211 200.2871 1696.6182 172.6152 C1685.835 160.8418 1670.8179 153.8008 1654.498 153.8008 c1631.7871 153.8008 1626.1094 168.9414 1626.1094 190.7061 c1626.1094 238.9658 1649.2939 301.1846 1675.3164 301.1846 c1685.9619 301.1846 1689.7471 294.3232 1689.7471 286.7539 c1689.7471 277.7637 1684.543 267.8271 1678.8647 264.9883 C1683.3594 259.7842 1688.5645 258.8379 1692.3491 258.8379 c1704.4141 258.8379 1708.9092 268.0645 1708.9092 280.6025 c1708.9092 303.5498 1691.6396 312.3027 1669.4023 312.3027 c1607.4209 312.3027 1586.8389 232.1055 1586.8389 189.2861 c1586.8389 146.7041 1603.6357 131.0908 1638.6475 131.0908 c1656.3853 131.0908 1682.1416 139.4531 1697.6787 160.125 C1701.5791 141.415 1715.8057 133.9297 1734.457 133.9297 c1763.5552 133.9297 1787.2119 161.3721 1790.9971 205.1367 C1798.021 206.291 1804.7603 208.1602 1810.9019 210.6123 C1803.7705 177.2217 L1802.5879 171.5439 1801.8779 166.3398 1801.8779 161.8438 c1801.8779 141.9727 1812.9971 133.4561 1827.1914 133.4561 c1836.8667 133.4561 1852.6465 136.4551 1865.5933 154.6582 C1867.9932 139.9043 1878.0083 133.4561 1890.3545 133.4561 c1900.1416 133.4561 1916.1738 136.5303 1929.2026 155.2998 C1934.0596 139.9756 1946.7246 133.4561 1963.9272 133.4561 c1988.0908 133.4561 2005.5518 146.4365 2018.4629 162.3154 C2021.416 141.9424 2035.1387 133.4561 2054.7666 133.4561 c2079.3066 133.4561 2096.9375 146.8398 2109.9072 163.0566 C2109.8965 162.6494 2109.8848 162.2402 2109.8848 161.8438 c2109.8848 141.9727 2121.0039 133.4561 2135.1973 133.4561 c2144.8721 133.4561 2160.6523 136.4551 2173.5996 154.6582 C2175.999 139.9043 2186.0146 133.4561 2198.3604 133.4561 c2208.1436 133.4561 2224.167 136.5283 2237.1924 155.2773 C2242.4082 140.1152 2255.6963 133.9297 2272.6436 133.9297 c2301.7412 133.9297 2325.3984 161.3721 2329.1836 205.1367 C2336.1807 206.2861 2342.8945 208.1455 2349.0176 210.584 C2332.9668 134.876 L2367.0332 134.876 L2383.1191 210.8145 L2386.668 222.6436 2393.0557 232.5791 2401.5723 232.5791 c2407.25 232.5791 2410.0889 228.3213 2410.0889 220.5137 c2410.0889 205.374 2399.4434 176.2754 2399.4434 160.1885 c2399.4434 146.7041 2405.1211 133.4561 2423.3359 133.4561 c2435.875 133.4561 2447.2305 140.79 2449.3594 157.8232 C2447.9395 156.877 2445.5742 156.4033 2441.5527 156.4033 c2434.4551 156.4033 2432.0898 160.4248 2432.0898 166.3398 cf0 D1992.7891 242.752 m1997.2832 242.752 1998.7021 238.9658 1998.7021 233.0518 c1998.7021 213.417 1982.6162 195.2012 1964.4004 194.0176 C1969.1318 217.4385 1980.7236 242.752 1992.7891 242.752 cf1771.3613 204.4268 m1767.5771 176.5117 1755.5117 155.2207 1743.9199 155.2207 c1734.9297 155.2207 1731.8545 158.7695 1731.8545 174.3828 c1731.8545 197.5664 1746.5215 240.8584 1763.3184 240.8584 c1769.4692 240.8584 1771.835 237.0742 1772.3081 227.1377 C1768.0498 225.2451 1764.9741 220.9863 1764.9741 214.3623 c1764.9741 209.6318 1766.3936 205.6094 1771.3613 204.4268 Cf2309.5469 204.4268 m2305.7637 176.5117 2293.6982 155.2207 2282.1055 155.2207 c2273.1162 155.2207 2270.041 158.7695 2270.041 174.3828 c2270.041 197.5664 2284.708 240.8584 2301.5049 240.8584 c2307.6553 240.8584 2310.0205 237.0742 2310.4941 227.1377 C2306.2363 225.2451 2303.1602 220.9863 2303.1602 214.3623 c2303.1602 209.6318 2304.5791 205.6094 2309.5469 204.4268 CfU1 D2585.1475 312.3027 m2545.6396 312.3027 2502.1113 282.2578 2502.1113 250.7949 c2502.1113 233.7617 2511.1006 227.8477 2527.4238 227.8477 C2527.1885 229.9766 2524.1123 231.8701 2524.1123 243.9336 c2524.1123 269.2471 2536.6504 286.9902 2557.2314 295.5068 C2522.9297 134.876 L2556.9961 134.876 L2594.6094 311.8291 L2591.5352 312.0664 2588.46 312.3027 2585.1475 312.3027 cf2214.4482 265.9355 m2224.8564 265.9355 2233.373 274.2148 2233.373 284.625 c2233.373 295.0332 2224.8564 303.5498 2214.4482 303.5498 c2204.0391 303.5498 2195.7578 295.0332 2195.7578 284.625 c2195.7578 274.2148 2204.0391 265.9355 2214.4482 265.9355 cf1147.3022 311.8291 m1132.1616 241.332 L1097.3857 241.332 L1112.5264 311.8291 L1109.4512 312.0664 1106.375 312.3027 1103.0635 312.3027 c1063.5566 312.3027 1020.0278 282.2578 1020.0278 250.7949 c1020.0278 233.7617 1029.0176 227.8477 1045.3408 227.8477 C1045.1035 229.9766 1042.0283 231.8701 1042.0283 243.9336 c1042.0283 269.0107 1054.3301 286.9902 1075.1484 295.7432 C1040.8457 134.876 L1074.9116 134.876 L1093.8379 223.8252 L1128.6133 223.8252 L1109.6875 134.876 L1143.7534 134.876 L1181.3682 311.8291 L1147.3022 311.8291 Lfu1541.8931 300.4746 m1506.8804 295.7432 L1495.2886 241.332 L1495.2886 242.2783 L1495.2886 249.1387 1489.6113 254.3438 1476.1265 254.3438 c1434.9634 254.3438 1415.3281 203.4805 1415.3281 171.5439 c1415.3281 171.1416 1415.3418 170.7559 1415.3481 170.3623 C1411.2578 161.8711 1406.8672 156.4033 1398.5342 156.4033 c1391.437 156.4033 1389.0713 160.4248 1389.0713 166.3398 c1389.0713 179.5869 1400.4268 208.2129 1400.4268 227.374 c1400.4268 246.3008 1389.3076 254.1064 1374.1675 254.1064 c1366.8335 254.1064 1356.4243 252.2148 1346.4888 240.8584 C1349.0908 253.1602 L1315.0254 253.1602 L1298.8926 177.0635 L1295.3345 165.2998 1288.9648 154.9844 1279.7793 154.9844 c1273.1553 154.9844 1270.0801 158.5332 1270.0801 165.1563 c1270.0801 167.2861 1270.3164 169.6514 1271.0264 172.7266 C1288.0596 253.1602 L1253.9932 253.1602 L1251.3906 240.623 L1251.3906 242.2783 L1251.3906 249.1387 1245.7139 254.3438 1232.2285 254.3438 c1191.0654 254.3438 1171.4302 203.4805 1171.4302 171.5439 c1171.4302 143.3926 1186.8076 133.4561 1202.8945 133.4561 c1219.6904 133.4561 1230.8096 144.3379 1238.1436 155.2207 C1239.5625 141.0273 1248.0791 133.4561 1261.3271 133.4561 c1269.6758 133.4561 1281.6611 135.6846 1292.7285 147.9883 C1289.9482 134.876 L1324.0146 134.876 L1340.1016 210.8145 L1343.6499 222.6436 1350.0371 232.5791 1358.5537 232.5791 c1364.2314 232.5791 1367.0703 228.3213 1367.0703 220.5137 c1367.0703 205.374 1356.4243 176.2754 1356.4243 160.1885 c1356.4243 146.7041 1363.7583 133.4561 1384.3398 133.4561 c1393.7886 133.4561 1406.4604 136.2861 1417.8018 154.2793 C1422.7769 139.1953 1434.5762 133.4561 1446.792 133.4561 c1462.4053 133.4561 1473.2876 142.9189 1480.3848 153.0908 C1483.2236 139.3701 1492.9229 133.4561 1504.9883 133.4561 c1517.7627 133.4561 1529.8281 141.0273 1531.0107 157.8232 C1529.5908 157.1133 1527.6982 156.4033 1523.4404 156.4033 c1516.1064 156.4033 1513.7412 160.4248 1513.7412 165.8662 c1513.7412 167.9951 1514.2144 170.3613 1514.6875 172.7266 C1541.8931 300.4746 Lf0 D1237.9063 177.2217 m1235.0674 163.501 1225.1318 156.4033 1218.271 156.4033 c1214.0132 156.4033 1206.4429 156.6396 1206.4429 174.8555 c1206.4429 197.0928 1219.4541 239.6758 1239.5625 239.6758 c1247.1323 239.6758 1249.2617 233.5254 1249.2617 230.6865 C1237.9063 177.2217 Lf1480.6216 173.4355 m1478.0186 161.8438 1468.3193 156.4033 1462.1689 156.4033 c1457.9111 156.4033 1450.3408 156.6396 1450.3408 174.8555 c1450.3408 197.0928 1463.3521 239.6758 1483.46 239.6758 c1490.5571 239.6758 1492.6865 234.2354 1493.1592 231.3965 C1480.6216 173.4355 LfUu1 D2972.6416 260.4941 m2937.6289 255.7627 L2930.2949 232.5791 2921.7783 209.1582 2908.5313 185.7383 C2902.1436 182.6621 2895.9922 174.6191 2895.9922 163.7373 c2895.9922 163.4141 2896.0039 163.0908 2896.0137 162.7676 C2892.9141 158.7637 2889.1543 156.4033 2883.6934 156.4033 c2876.5967 156.4033 2874.2314 160.4248 2874.2314 166.3398 c2874.2314 179.5869 2885.5869 208.2129 2885.5869 227.374 c2885.5869 246.3008 2874.4678 254.1064 2859.3271 254.1064 c2851.9932 254.1064 2841.585 252.2148 2831.6484 240.8584 C2834.252 253.1602 L2800.1846 253.1602 L2793.4844 221.5586 L2786.8906 218.8125 2780.1797 216.9658 2774.6367 216.9658 c2773.9268 216.9658 2772.9805 216.9658 2772.0342 217.4385 C2772.0342 242.2783 2762.0986 255.2891 2741.7529 255.2891 c2694.3271 255.2891 2677.8213 201.5215 2676.9707 173.5625 C2666.2559 161.9004 2655.335 153.3281 2638.376 153.3281 c2627.0195 153.3281 2621.3418 157.1133 2621.3418 173.2002 c2621.3418 199.46 2636.7197 242.752 2651.623 242.752 c2656.1191 242.752 2658.2471 238.9658 2658.2471 233.0518 c2658.2471 229.0313 2657.3008 224.2988 2655.4092 219.0947 C2658.2471 217.2021 2661.0859 216.2559 2663.6885 216.2559 c2670.5498 216.2559 2676.2266 221.9336 2676.2266 233.5254 c2676.2266 244.4072 2671.0215 255.2891 2649.9678 255.2891 c2601.9434 255.2891 2586.3301 198.5127 2586.3301 171.0703 c2586.3301 144.3379 2600.998 133.4561 2623.2354 133.4561 c2647.3115 133.4561 2664.7324 146.3428 2677.6299 162.1426 C2680.9082 141.9502 2695.4746 133.9297 2714.7842 133.9297 c2743.8818 133.9297 2767.5391 161.3721 2771.3242 205.1367 C2778.3213 206.2861 2785.0361 208.1455 2791.1592 210.584 C2775.1094 134.876 L2809.1748 134.876 L2825.2617 210.8145 L2828.8096 222.6436 2835.1973 232.5791 2843.7139 232.5791 c2849.3916 232.5791 2852.2305 228.3213 2852.2305 220.5137 c2852.2305 205.374 2841.585 176.2754 2841.585 160.1885 c2841.585 146.7041 2848.918 133.4561 2869.499 133.4561 c2878.0264 133.4561 2889.1797 135.7676 2899.6094 149.4414 C2904.4883 140.4854 2914.4648 133.4561 2930.5313 133.4561 c2949.9307 133.4561 2977.8457 143.6289 2977.8457 174.3828 c2977.8457 189.9961 2975.4805 199.2227 2972.6416 260.4941 Cf0 D2751.6895 204.4268 m2747.9043 176.5117 2735.8389 155.2207 2724.2471 155.2207 c2715.2578 155.2207 2712.1816 158.7695 2712.1816 174.3828 c2712.1816 197.5664 2726.8496 240.8584 2743.6465 240.8584 c2749.7959 240.8584 2752.1621 237.0742 2752.6348 227.1377 C2748.3779 225.2451 2745.3018 220.9863 2745.3018 214.3623 c2745.3018 209.6318 2746.7207 205.6094 2751.6895 204.4268 Cf2922.9619 152.1455 m2913.7646 152.1455 2909.5605 156.4004 2908.7051 165.0576 C2909.0303 165.7754 2909.3574 166.4932 2909.6797 167.2432 C2911.0889 166.0342 2913.1357 165.6299 2914.9189 165.6299 c2921.0684 165.6299 2925.3271 171.5439 2925.3271 177.2217 c2925.3271 181.2432 2922.9619 184.082 2919.8867 185.501 C2927.6924 200.6416 2934.3174 214.8359 2939.0488 230.2129 C2941.415 193.7822 2943.543 186.4482 2943.543 174.1455 c2943.543 157.5869 2933.3701 152.1455 2922.9619 152.1455 cfU*U*uu1 D0 g2442.0898 176.3398 m2442.0898 189.5869 2453.4453 218.2129 2453.4453 237.374 c2453.4453 256.3008 2442.3262 264.1064 2427.1855 264.1064 c2419.8516 264.1064 2409.4434 262.2148 2399.5068 250.8584 C2402.1094 263.1602 L2368.0439 263.1602 L2361.3438 231.5586 L2354.749 228.8125 2348.0391 226.9658 2342.4961 226.9658 c2341.7861 226.9658 2340.8389 226.9658 2339.8926 227.4385 C2339.8926 252.2783 2329.957 265.2891 2309.6123 265.2891 c2260.8779 265.2891 2244.792 208.5127 2244.792 181.3076 c2244.792 180.6738 2244.8096 180.0576 2244.8262 179.4424 C2240.5059 171.6738 2233.8711 166.4033 2226.8125 166.4033 c2220.1895 166.4033 2217.1133 168.5332 2217.1133 175.1563 c2217.1133 177.2861 2217.3506 179.6514 2218.0605 182.7266 C2235.0928 263.1602 L2201.0273 263.1602 L2184.9414 187.2217 L2184.9395 187.2207 2184.9395 187.2197 2184.9395 187.2178 C2181.3906 175.3906 2172.875 166.4033 2163.6494 166.4033 c2157.0264 166.4033 2153.9502 168.5332 2153.9502 175.1563 c2153.9502 177.2861 2154.1875 179.6514 2154.8975 182.7266 C2170.0371 253.6973 L2184.2314 253.6973 L2186.124 263.1602 L2171.9297 263.1602 L2179.9727 300.5381 L2144.9609 295.8066 L2137.8633 263.1602 L2130.0566 263.1602 L2128.165 253.6973 L2135.9707 253.6973 L2121.7773 187.2217 L2121.7764 187.2197 2121.7764 187.2188 2121.7754 187.2178 C2109.9492 173.7354 2098.5938 163.3281 2079.9082 163.3281 c2068.5527 163.3281 2062.874 167.1133 2062.874 183.2002 c2062.874 209.46 2078.251 252.752 2093.1553 252.752 c2097.6504 252.752 2099.7793 248.9658 2099.7793 243.0518 c2099.7793 239.0313 2098.833 234.2988 2096.9404 229.0947 C2099.7793 227.2021 2102.6182 226.2559 2105.2207 226.2559 c2112.0801 226.2559 2117.7578 231.9336 2117.7578 243.5254 c2117.7578 254.4072 2112.5527 265.2891 2091.498 265.2891 c2045.0371 265.2891 2028.9121 212.1455 2027.9121 183.8379 C2017.1172 172.0361 2006.1582 163.3281 1989.0674 163.3281 c1977.7119 163.3281 1972.0347 167.1133 1972.0347 183.2002 c1972.0347 186.0391 1972.271 189.3516 1972.5078 192.6621 C2000.8965 194.3193 2026.9189 215.374 2026.9189 242.5791 c2026.9189 254.4072 2021.9512 265.2891 2000.8965 265.2891 c1952.3994 265.2891 1937.022 208.2764 1937.022 181.0703 c1937.022 180.6582 1937.0361 180.2617 1937.043 179.8584 C1932.7295 171.8643 1925.9893 166.4033 1918.8066 166.4033 c1912.1831 166.4033 1909.1074 168.5332 1909.1074 175.1563 c1909.1074 177.2861 1909.3442 179.6514 1910.0537 182.7266 C1937.2593 310.4746 L1902.2471 305.7432 L1876.9341 187.2217 L1876.9336 187.2207 1876.9336 187.2197 1876.9336 187.2178 C1873.3838 175.3906 1864.8691 166.4033 1855.6436 166.4033 c1849.0195 166.4033 1845.9443 168.5332 1845.9443 175.1563 c1845.9443 177.2861 1846.1807 179.6514 1846.8906 182.7266 C1874.0957 310.4746 L1839.0835 305.7432 L1823.248 231.5977 L1816.624 228.8301 1809.8779 226.9658 1804.3091 226.9658 c1803.5996 226.9658 1802.6528 226.9658 1801.707 227.4385 C1801.707 252.2783 1791.7705 265.2891 1771.4258 265.2891 c1723.46 265.2891 1707.1211 210.2871 1706.6182 182.6152 C1695.835 170.8418 1680.8179 163.8008 1664.498 163.8008 c1641.7871 163.8008 1636.1094 178.9414 1636.1094 200.7061 c1636.1094 248.9658 1659.2939 311.1846 1685.3164 311.1846 c1695.9619 311.1846 1699.7471 304.3232 1699.7471 296.7539 c1699.7471 287.7637 1694.543 277.8271 1688.8647 274.9883 C1693.3594 269.7842 1698.5645 268.8379 1702.3491 268.8379 c1714.4141 268.8379 1718.9092 278.0645 1718.9092 290.6025 c1718.9092 313.5498 1701.6396 322.3027 1679.4023 322.3027 c1617.4209 322.3027 1596.8389 242.1055 1596.8389 199.2861 c1596.8389 156.7041 1613.6357 141.0908 1648.6475 141.0908 c1666.3853 141.0908 1692.1416 149.4531 1707.6787 170.125 C1711.5791 151.415 1725.8057 143.9297 1744.457 143.9297 c1773.5552 143.9297 1797.2119 171.3721 1800.9971 215.1367 C1808.021 216.291 1814.7603 218.1602 1820.9019 220.6123 C1813.7705 187.2217 L1812.5879 181.5439 1811.8779 176.3398 1811.8779 171.8438 c1811.8779 151.9727 1822.9971 143.4561 1837.1914 143.4561 c1846.8667 143.4561 1862.6465 146.4551 1875.5933 164.6582 C1877.9932 149.9043 1888.0083 143.4561 1900.3545 143.4561 c1910.1416 143.4561 1926.1738 146.5303 1939.2026 165.2998 C1944.0596 149.9756 1956.7246 143.4561 1973.9272 143.4561 c1998.0908 143.4561 2015.5518 156.4365 2028.4629 172.3154 C2031.416 151.9424 2045.1387 143.4561 2064.7666 143.4561 c2089.3066 143.4561 2106.9375 156.8398 2119.9072 173.0566 C2119.8965 172.6494 2119.8848 172.2402 2119.8848 171.8438 c2119.8848 151.9727 2131.0039 143.4561 2145.1973 143.4561 c2154.8721 143.4561 2170.6523 146.4551 2183.5996 164.6582 C2185.999 149.9043 2196.0146 143.4561 2208.3604 143.4561 c2218.1436 143.4561 2234.167 146.5283 2247.1924 165.2773 C2252.4082 150.1152 2265.6963 143.9297 2282.6436 143.9297 c2311.7412 143.9297 2335.3984 171.3721 2339.1836 215.1367 C2346.1807 216.2861 2352.8945 218.1455 2359.0176 220.584 C2342.9668 144.876 L2377.0332 144.876 L2393.1191 220.8145 L2396.668 232.6436 2403.0557 242.5791 2411.5723 242.5791 c2417.25 242.5791 2420.0889 238.3213 2420.0889 230.5137 c2420.0889 215.374 2409.4434 186.2754 2409.4434 170.1885 c2409.4434 156.7041 2415.1211 143.4561 2433.3359 143.4561 c2445.875 143.4561 2457.2305 150.79 2459.3594 167.8232 C2457.9395 166.877 2455.5742 166.4033 2451.5527 166.4033 c2444.4551 166.4033 2442.0898 170.4248 2442.0898 176.3398 cf0 D0 g2002.7891 252.752 m2007.2832 252.752 2008.7021 248.9658 2008.7021 243.0518 c2008.7021 223.417 1992.6162 205.2012 1974.4004 204.0176 C1979.1318 227.4385 1990.7236 252.752 2002.7891 252.752 cf0 g1781.3613 214.4268 m1777.5771 186.5117 1765.5117 165.2207 1753.9199 165.2207 c1744.9297 165.2207 1741.8545 168.7695 1741.8545 184.3828 c1741.8545 207.5664 1756.5215 250.8584 1773.3184 250.8584 c1779.4692 250.8584 1781.835 247.0742 1782.3081 237.1377 C1778.0498 235.2451 1774.9741 230.9863 1774.9741 224.3623 c1774.9741 219.6318 1776.3936 215.6094 1781.3613 214.4268 Cf0 g2319.5469 214.4268 m2315.7637 186.5117 2303.6982 165.2207 2292.1055 165.2207 c2283.1162 165.2207 2280.041 168.7695 2280.041 184.3828 c2280.041 207.5664 2294.708 250.8584 2311.5049 250.8584 c2317.6553 250.8584 2320.0205 247.0742 2320.4941 237.1377 C2316.2363 235.2451 2313.1602 230.9863 2313.1602 224.3623 c2313.1602 219.6318 2314.5791 215.6094 2319.5469 214.4268 CfU1 D0 g2595.1475 322.3027 m2555.6396 322.3027 2512.1113 292.2578 2512.1113 260.7949 c2512.1113 243.7617 2521.1006 237.8477 2537.4238 237.8477 C2537.1885 239.9766 2534.1123 241.8701 2534.1123 253.9336 c2534.1123 279.2471 2546.6504 296.9902 2567.2314 305.5068 C2532.9297 144.876 L2566.9961 144.876 L2604.6094 321.8291 L2601.5352 322.0664 2598.46 322.3027 2595.1475 322.3027 cf0 g2224.4482 275.9355 m2234.8564 275.9355 2243.373 284.2148 2243.373 294.625 c2243.373 305.0332 2234.8564 313.5498 2224.4482 313.5498 c2214.0391 313.5498 2205.7578 305.0332 2205.7578 294.625 c2205.7578 284.2148 2214.0391 275.9355 2224.4482 275.9355 cf0 g1157.3022 321.8291 m1142.1616 251.332 L1107.3857 251.332 L1122.5264 321.8291 L1119.4512 322.0664 1116.375 322.3027 1113.0635 322.3027 c1073.5566 322.3027 1030.0278 292.2578 1030.0278 260.7949 c1030.0278 243.7617 1039.0176 237.8477 1055.3408 237.8477 C1055.1035 239.9766 1052.0283 241.8701 1052.0283 253.9336 c1052.0283 279.0107 1064.3301 296.9902 1085.1484 305.7432 C1050.8457 144.876 L1084.9116 144.876 L1103.8379 233.8252 L1138.6133 233.8252 L1119.6875 144.876 L1153.7534 144.876 L1191.3682 321.8291 L1157.3022 321.8291 Lfu0 g1551.8931 310.4746 m1516.8804 305.7432 L1505.2886 251.332 L1505.2886 252.2783 L1505.2886 259.1387 1499.6113 264.3438 1486.1265 264.3438 c1444.9634 264.3438 1425.3281 213.4805 1425.3281 181.5439 c1425.3281 181.1416 1425.3418 180.7559 1425.3481 180.3623 C1421.2578 171.8711 1416.8672 166.4033 1408.5342 166.4033 c1401.437 166.4033 1399.0713 170.4248 1399.0713 176.3398 c1399.0713 189.5869 1410.4268 218.2129 1410.4268 237.374 c1410.4268 256.3008 1399.3076 264.1064 1384.1675 264.1064 c1376.8335 264.1064 1366.4243 262.2148 1356.4888 250.8584 C1359.0908 263.1602 L1325.0254 263.1602 L1308.8926 187.0635 L1305.3345 175.2998 1298.9648 164.9844 1289.7793 164.9844 c1283.1553 164.9844 1280.0801 168.5332 1280.0801 175.1563 c1280.0801 177.2861 1280.3164 179.6514 1281.0264 182.7266 C1298.0596 263.1602 L1263.9932 263.1602 L1261.3906 250.623 L1261.3906 252.2783 L1261.3906 259.1387 1255.7139 264.3438 1242.2285 264.3438 c1201.0654 264.3438 1181.4302 213.4805 1181.4302 181.5439 c1181.4302 153.3926 1196.8076 143.4561 1212.8945 143.4561 c1229.6904 143.4561 1240.8096 154.3379 1248.1436 165.2207 C1249.5625 151.0273 1258.0791 143.4561 1271.3271 143.4561 c1279.6758 143.4561 1291.6611 145.6846 1302.7285 157.9883 C1299.9482 144.876 L1334.0146 144.876 L1350.1016 220.8145 L1353.6499 232.6436 1360.0371 242.5791 1368.5537 242.5791 c1374.2314 242.5791 1377.0703 238.3213 1377.0703 230.5137 c1377.0703 215.374 1366.4243 186.2754 1366.4243 170.1885 c1366.4243 156.7041 1373.7583 143.4561 1394.3398 143.4561 c1403.7886 143.4561 1416.4604 146.2861 1427.8018 164.2793 C1432.7769 149.1953 1444.5762 143.4561 1456.792 143.4561 c1472.4053 143.4561 1483.2876 152.9189 1490.3848 163.0908 C1493.2236 149.3701 1502.9229 143.4561 1514.9883 143.4561 c1527.7627 143.4561 1539.8281 151.0273 1541.0107 167.8232 C1539.5908 167.1133 1537.6982 166.4033 1533.4404 166.4033 c1526.1064 166.4033 1523.7412 170.4248 1523.7412 175.8662 c1523.7412 177.9951 1524.2144 180.3613 1524.6875 182.7266 C1551.8931 310.4746 Lf0 D0 g1247.9063 187.2217 m1245.0674 173.501 1235.1318 166.4033 1228.271 166.4033 c1224.0132 166.4033 1216.4429 166.6396 1216.4429 184.8555 c1216.4429 207.0928 1229.4541 249.6758 1249.5625 249.6758 c1257.1323 249.6758 1259.2617 243.5254 1259.2617 240.6865 C1247.9063 187.2217 Lf0 g1490.6216 183.4355 m1488.0186 171.8438 1478.3193 166.4033 1472.1689 166.4033 c1467.9111 166.4033 1460.3408 166.6396 1460.3408 184.8555 c1460.3408 207.0928 1473.3521 249.6758 1493.46 249.6758 c1500.5571 249.6758 1502.6865 244.2354 1503.1592 241.3965 C1490.6216 183.4355 LfUu1 D0 g2982.6416 270.4941 m2947.6289 265.7627 L2940.2949 242.5791 2931.7783 219.1582 2918.5313 195.7383 C2912.1436 192.6621 2905.9922 184.6191 2905.9922 173.7373 c2905.9922 173.4141 2906.0039 173.0908 2906.0137 172.7676 C2902.9141 168.7637 2899.1543 166.4033 2893.6934 166.4033 c2886.5967 166.4033 2884.2314 170.4248 2884.2314 176.3398 c2884.2314 189.5869 2895.5869 218.2129 2895.5869 237.374 c2895.5869 256.3008 2884.4678 264.1064 2869.3271 264.1064 c2861.9932 264.1064 2851.585 262.2148 2841.6484 250.8584 C2844.252 263.1602 L2810.1846 263.1602 L2803.4844 231.5586 L2796.8906 228.8125 2790.1797 226.9658 2784.6367 226.9658 c2783.9268 226.9658 2782.9805 226.9658 2782.0342 227.4385 C2782.0342 252.2783 2772.0986 265.2891 2751.7529 265.2891 c2704.3271 265.2891 2687.8213 211.5215 2686.9707 183.5625 C2676.2559 171.9004 2665.335 163.3281 2648.376 163.3281 c2637.0195 163.3281 2631.3418 167.1133 2631.3418 183.2002 c2631.3418 209.46 2646.7197 252.752 2661.623 252.752 c2666.1191 252.752 2668.2471 248.9658 2668.2471 243.0518 c2668.2471 239.0313 2667.3008 234.2988 2665.4092 229.0947 C2668.2471 227.2021 2671.0859 226.2559 2673.6885 226.2559 c2680.5498 226.2559 2686.2266 231.9336 2686.2266 243.5254 c2686.2266 254.4072 2681.0215 265.2891 2659.9678 265.2891 c2611.9434 265.2891 2596.3301 208.5127 2596.3301 181.0703 c2596.3301 154.3379 2610.998 143.4561 2633.2354 143.4561 c2657.3115 143.4561 2674.7324 156.3428 2687.6299 172.1426 C2690.9082 151.9502 2705.4746 143.9297 2724.7842 143.9297 c2753.8818 143.9297 2777.5391 171.3721 2781.3242 215.1367 C2788.3213 216.2861 2795.0361 218.1455 2801.1592 220.584 C2785.1094 144.876 L2819.1748 144.876 L2835.2617 220.8145 L2838.8096 232.6436 2845.1973 242.5791 2853.7139 242.5791 c2859.3916 242.5791 2862.2305 238.3213 2862.2305 230.5137 c2862.2305 215.374 2851.585 186.2754 2851.585 170.1885 c2851.585 156.7041 2858.918 143.4561 2879.499 143.4561 c2888.0264 143.4561 2899.1797 145.7676 2909.6094 159.4414 C2914.4883 150.4854 2924.4648 143.4561 2940.5313 143.4561 c2959.9307 143.4561 2987.8457 153.6289 2987.8457 184.3828 c2987.8457 199.9961 2985.4805 209.2227 2982.6416 270.4941 Cf0 D0 g2761.6895 214.4268 m2757.9043 186.5117 2745.8389 165.2207 2734.2471 165.2207 c2725.2578 165.2207 2722.1816 168.7695 2722.1816 184.3828 c2722.1816 207.5664 2736.8496 250.8584 2753.6465 250.8584 c2759.7959 250.8584 2762.1621 247.0742 2762.6348 237.1377 C2758.3779 235.2451 2755.3018 230.9863 2755.3018 224.3623 c2755.3018 219.6318 2756.7207 215.6094 2761.6895 214.4268 Cf2932.9619 162.1455 m2923.7646 162.1455 2919.5605 166.4004 2918.7051 175.0576 C2919.0303 175.7754 2919.3574 176.4932 2919.6797 177.2432 C2921.0889 176.0342 2923.1357 175.6299 2924.9189 175.6299 c2931.0684 175.6299 2935.3271 181.5439 2935.3271 187.2217 c2935.3271 191.2432 2932.9619 194.082 2929.8867 195.501 C2937.6924 210.6416 2944.3174 224.8359 2949.0488 240.2129 C2951.415 203.7822 2953.543 196.4482 2953.543 184.1455 c2953.543 167.5869 2943.3701 162.1455 2932.9619 162.1455 cBb0 0 0 0 Bh1 (Unnamed gradient 8) 2008.9365 231.6973 0 695.152 1 0 0 1 0 0 Bg695.152 0 0 -695.152 2008.9365 231.6973 Bmf0 BBU*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF